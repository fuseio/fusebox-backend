/* eslint-disable */
export default async () => {
    const t = {};
    return { "@nestjs/swagger": { "models": [[import("../../charge-accounts-service/src/users/dto/create-user.dto"), { "CreateUserDto": { name: { required: true, type: () => String }, email: { required: true, type: () => String }, auth0Id: { required: true, type: () => String } } }], [import("../../charge-accounts-service/src/users/dto/submit-questionnaire.dto"), { "SubmitQuestionnaireDto": { questionnaire: { required: true, type: () => Object } } }], [import("../../charge-accounts-service/src/projects/dto/create-project.dto"), { "CreateProjectDto": { ownerId: { required: true, type: () => String }, name: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("../../charge-accounts-service/src/projects/dto/update-project.dto"), { "UpdateProjectDto": {} }], [import("../../charge-smart-wallets-service/src/dto/smart-wallets-auth.dto"), { "SmartWalletsAuthDto": { hash: { required: true, type: () => String }, signature: { required: true, type: () => String }, ownerAddress: { required: true, type: () => String }, smartWalletAddress: { required: true, type: () => String }, projectId: { required: true, type: () => String } } }], [import("../../charge-smart-wallets-service/src/smart-wallets/dto/relay.dto"), { "RelayDto": { ownerAddress: { required: true, type: () => String }, walletAddress: { required: true, type: () => String }, data: { required: true, type: () => String }, nonce: { required: true, type: () => String }, methodName: { required: true, type: () => String }, signature: { required: true, type: () => String }, walletModule: { required: true, type: () => String }, externalId: { required: true, type: () => String }, transactionBody: { required: true, type: () => Object }, gasPrice: { required: true, type: () => Number }, gasLimit: { required: true, type: () => Number }, network: { required: true, type: () => String } } }], [import("../../charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto"), { "TokenTransferWebhookDto": { to: { required: true, type: () => String }, direction: { required: true, type: () => String }, from: { required: true, type: () => String }, txHash: { required: true, type: () => String }, value: { required: false, type: () => String }, tokenId: { required: false, type: () => Number }, tokenType: { required: true, type: () => String }, tokenAddress: { required: false, type: () => String }, tokenName: { required: false, type: () => String }, tokenSymbol: { required: false, type: () => String }, tokenDecimals: { required: false, type: () => String }, blockNumber: { required: true, type: () => Number } } }], [import("../../charge-smart-wallets-service/src/entities/smart-wallets-auth.entity"), { "SmartWalletsAuth": { hash: { required: true, type: () => String }, signature: { required: true, type: () => String }, ownerAddress: { required: true, type: () => String }, smartWalletAddress: { required: true, type: () => String } } }], [import("../../charge-smart-wallets-service/src/smart-wallets/entities/token-transfer-webhook.entity"), { "TokenTransferWebhook": { to: { required: true, type: () => String }, direction: { required: true, type: () => String }, from: { required: true, type: () => String }, txHash: { required: true, type: () => String }, value: { required: false, type: () => String }, tokenId: { required: false, type: () => Number }, tokenType: { required: true, type: () => String }, tokenAddress: { required: false, type: () => String }, tokenName: { required: false, type: () => String }, tokenSymbol: { required: false, type: () => String }, tokenDecimals: { required: false, type: () => String }, blockNumber: { required: true, type: () => Number } } }], [import("./webhooks/dto/create-webhook-addresses.dto"), { "CreateWebhookAddressesDto": { webhookId: { required: true, type: () => String }, addresses: { required: true, type: () => [String] } } }], [import("./webhooks/dto/create-webhook.dto"), { "CreateWebhookDto": { projectId: { required: true, type: () => String }, webhookUrl: { required: true, type: () => String }, eventType: { required: true, type: () => String } } }], [import("./webhooks/dto/update-webhook.dto"), { "UpdateWebhookDto": { webhookId: { required: true, type: () => String } } }], [import("./webhooks/entities/create-webhook-addresses.entity"), { "CreateWebhookAddresses": { webhookId: { required: true, type: () => String }, addresses: { required: true, type: () => [String] } } }], [import("./webhooks/entities/create-webhook.entity"), { "CreateWebhook": { projectId: { required: true, type: () => String }, webhookUrl: { required: true, type: () => String }, eventType: { required: true, type: () => String } } }], [import("./webhooks/entities/update-webhook.entity"), { "UpdateWebhook": { webhookId: { required: true, type: () => String } } }]], "controllers": [[import("./charge-notifications-service.controller"), { "ChargeNotificationsServiceController": { "healthCheck": { type: String } } }], [import("../../charge-api-service/src/api-keys/api-keys.controller"), { "ApiKeysController": { "createSecret": { description: "Creates an API key secret for the given project" }, "checkIfSecretExists": { description: "Gets the api_key's for the given projectId" }, "getProjectIdByPublicKey": { description: "Gets the project id for the given public api key", type: Object }, "updateSecret": { description: "Revokes the old API key secret and generates a new one for the given project" }, "createPublic": { description: "Creates the public API key associated with the project" }, "getPublic": { description: "Gets the public API key associated with the project" }, "createSandbox": { description: "Creates the sandBox API key associated with the project" }, "getSandbox": {} } }], [import("../../charge-accounts-service/src/paymaster/paymaster.controller"), { "PaymasterController": { "getAvailableVersionList": { type: [String] }, "create": { type: [Object] }, "findActivePaymasters": { type: [Object] }, "findActiveByProjectIdAndEnv": { type: Object } } }], [import("../../charge-accounts-service/src/users/users.controller"), { "UsersController": { "submitQuestionnaire": { description: "Submits questionnaire answers for the given user id and verifies that the authenticated\nuser has the given user id", type: Object }, "findOneInternal": { type: Object } } }], [import("../../charge-accounts-service/src/projects/projects.controller"), { "ProjectsController": { "create": { description: "Creates a new project for the authenticated user", type: Object }, "findAll": { description: "Finds all the projects of the authenticated user", type: [Object] }, "findOne": { description: "Fetches the project by the given id and verifies that the requesting\nauthenticated user is the owner of the project", type: Object }, "getProjectBySponsorId": { type: [Object] }, "update": { description: "Updates the project with the given id with the given fields for the update\nand verifies that the requesting authenticated user is the owner of the project", type: Object }, "createSecret": { description: "Creates an API key secret for the given project", type: Object }, "checkIfSecretExists": { description: "Checks if an API key secret for the given project exists", type: Boolean }, "getApiKeysInfo": { description: "Gets api keys unsensitive info for the given projectId", type: Object }, "updateSecret": { description: "Revokes the old API key secret and generates a new one for the given project", type: Object }, "getPublic": { description: "Gets the public API key associated with the project", type: Object }, "createSandboxKey": { description: "Creates an sandbox API key for the given project", type: Object }, "getSandboxKey": { description: "Gets the sandbox API key associated with the project", type: Object }, "findOneInternal": { type: Object }, "findOneByIdInternal": { type: Object }, "getPublicInternal": { type: Object } } }], [import("../../charge-api-service/src/smart-wallets-api/smart-wallets-api.controller"), { "SmartWalletsAPIController": { "auth": { type: Object }, "getWallet": { type: Object }, "createWallet": { type: Object }, "relay": { type: Object }, "getHistoricalTxs": { type: Object } } }], [import("../../charge-api-service/src/smart-wallets-api/smart-wallets-api-v2.controller"), { "SmartWalletsAPIV2Controller": { "auth": { type: Object }, "getHistoricalTxs": { type: Object }, "handleTokenTransferWebhook": {} } }], [import("./webhooks/webhooks.controller"), { "WebhooksController": { "create": { type: Object }, "update": { type: Object }, "delete": { type: Object }, "get": { type: Object }, "getAll": { type: [Object] }, "createAddresses": { type: Object }, "getAddresses": { type: [Object] }, "deleteAddresses": { type: Object }, "getAddressWatchers": { type: Object } } }]] } };
};