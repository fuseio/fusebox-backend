version: '3.7'

services:
  charge-accounts-service:
    container_name: charge-accounts-service
    build:
      context: .
      dockerfile: ./apps/charge-accounts-service/Dockerfile
      target: development
    command: npm run start:dev charge-accounts-service
    environment:
      - ACCOUNTS_HOST
      - API_HOST
      - RELAY_HOST
      - ACCOUNTS_PORT
      - MONGO_URI=${ACCOUNTS_MONGO_URI}
      - AUTH0_ISSUER_URL
      - AUTH0_AUDIENCE
    depends_on:
      - charge-api-service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${ACCOUNTS_PORT}:${ACCOUNTS_PORT}
      - ${ACCOUNTS_TCP_PORT}:${ACCOUNTS_TCP_PORT}
    restart: always
  charge-api-service:
    container_name: charge-api-service
    build:
      context: .
      dockerfile: ./apps/charge-api-service/Dockerfile
      target: development
    command: npm run start:dev charge-api-service
    env_file:
      - ./apps/charge-api-service/.env
    environment:
      - API_HOST
      - API_PORT
      - MONGO_URI=${API_MONGO_URI}
      - NOTIFICATIONS_HOST
      - NOTIFICATIONS_TCP_PORT
      - NETWORK_HOST
      - NETWORK_TCP_PORT
      - LEGACY_FUSE_ADMIN_API_URL
      - LEGACY_FUSE_WALLET_API_URL
      - LEGACY_FUSE_TRADE_API_URL
    depends_on:
      - charge-notifications-service
      - charge-network-service
      - charge-relay-service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${API_PORT}:${API_PORT}
      - ${API_TCP_PORT}:${API_TCP_PORT}
    restart: always
  charge-notifications-service:
    container_name: charge-notifications-service
    build:
      context: .
      dockerfile: ./apps/charge-notifications-service/Dockerfile
      target: development
    command: npm run start:dev charge-notifications-service
    env_file:
      - ./apps/charge-notifications-service/.env
    environment:
      - NOTIFICATIONS_HOST
      - NOTIFICATIONS_PORT
      - NOTIFICATIONS_TCP_PORT
      - RPC_URL
      - FULL_ARCHIVE_RPC_URL
      - NETWORK_NAME
      - CHAIN_ID
      - MAX_BLOCKS
      - TIMEOUT_INTERVAL
      - MONGO_URI=${NOTIFICATIONS_MONGO_URI}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${NOTIFICATIONS_PORT}:${NOTIFICATIONS_PORT}
      - ${NOTIFICATIONS_TCP_PORT}:${NOTIFICATIONS_TCP_PORT}
    restart: always
  charge-network-service:
    container_name: charge-network-service
    build:
      context: .
      dockerfile: ./apps/charge-network-service/Dockerfile
      target: development
    command: npm run start:dev charge-network-service
    env_file:
      - ./apps/charge-network-service/.env
    environment:
      - NETWORK_HOST
      - NETWORK_PORT
      - NETWORK_TCP_PORT
      - LEGACY_FUSE_TRADE_API_URL
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${NETWORK_PORT}:${NETWORK_PORT}
      - ${NETWORK_TCP_PORT}:${NETWORK_TCP_PORT}
    restart: always
  charge-relay-service:
    container_name: charge-relay-service
    build:
      context: .
      dockerfile: ./apps/charge-relay-service/Dockerfile
      target: development
    command: npm run start:dev charge-relay-service
    env_file:
      - ./apps/charge-relay-service/.env
    environment:
      - RELAY_HOST
      - RELAY_PORT
      - MONGO_URI=${RELAY_MONGO_URI}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${RELAY_PORT}:${RELAY_PORT}
      - ${RELAY_TCP_PORT}:${RELAY_TCP_PORT}
    restart: always
networks:
  chargenet: