var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractDecodedEventResult.html",[0,0.763,1,3.797]],["body/interfaces/AbstractDecodedEventResult.html",[0,1.281,1,5.444,2,0.938,3,0.023,4,0.023,5,0.023,6,2.691,7,0.173,8,0.866,9,7.422,10,6.47,11,7.21,12,4.556,13,0.571,14,0.005,15,0.699,16,3.278,17,0.149,18,2.835,19,5.735,20,2.379,21,1.784,22,2.835,23,2.103,24,2.835,25,2.013,26,2.835,27,6.155,28,2.835,29,2.039,30,1.022,31,2.835,32,0.057,33,5.635,34,2.571,35,1.956,36,3.879,37,1.432,38,2.576,39,5.869,40,3.539,41,3.879,42,2.658,43,2.571,44,5.635,45,4.982,46,2.571,47,3.361,48,2.139,49,2.162,50,2.835,51,1.335,52,2.835,53,2.835,54,2.835,55,3.054,56,2.835,57,2.835,58,2.835,59,2.835,60,2.469,61,4.277,62,2.835,63,2.835,64,2.571,65,2.835,66,2.835,67,2.835,68,2.835,69,2.835,70,2.835,71,1.12,72,2.106,73,4.322,74,2.691,75,2.835,76,4.485,77,0.003,78,3.719,79,2.576,80,1.209,81,2.835,82,2.835,83,2.835,84,2.835,85,1.706,86,4.277,87,2.835,88,2.835,89,1.226,90,5.444,91,2.691,92,2.835,93,2.571,94,2.835,95,2.835,96,2.691,97,5.15,98,2.835,99,2.835,100,2.469,101,2.835,102,5.735,103,2.835,104,1.512,105,5.735,106,2.835,107,0.786,108,2.835,109,2.835,110,2.835,111,4.277,112,4.277,113,2.835,114,3.589,115,2.835,116,2.835,117,2.835,118,2.835,119,2.835,120,2.835,121,2.835,122,2.835,123,2.835,124,2.835,125,2.585,126,1.034,127,4.671,128,5.735,129,2.835,130,2.835,131,2.835,132,2.835,133,2.835,134,2.835,135,2.835,136,2.835,137,2.835,138,2.835,139,3.012,140,2.835,141,2.691,142,2.835,143,2.835,144,2.835,145,3.589,146,2.835,147,4.671,148,4.277,149,1.904,150,4.277,151,2.835,152,4.277,153,2.835,154,2.835,155,2.835,156,2.835,157,1.784,158,2.835,159,2.835,160,2.835,161,2.835,162,2.835,163,2.835,164,0.002]],["title/controllers/AccountsController.html",[165,1.135,166,4.254]],["body/controllers/AccountsController.html",[3,0.048,4,0.048,5,0.048,7,0.359,14,0.004,15,0.594,17,0.142,32,0.048,71,0.979,77,0.004,164,0.004,165,1.989,166,7.455,167,1.744,168,0.204,169,3.072,170,7.497,171,1.337,172,6.762,173,1.989,174,6.104,175,0.839,176,7.497,177,1.16,178,0.763,179,0.156,180,4.759]],["title/modules/AccountsModule.html",[181,1.096,182,4]],["body/modules/AccountsModule.html",[3,0.038,4,0.038,5,0.038,14,0.005,17,0.192,32,0.038,38,2.315,77,0.003,80,1.974,164,0.003,166,7.156,167,1.797,168,0.134,169,2.029,178,0.602,179,0.123,181,1.844,182,8.249,183,2.001,184,2.029,185,2.087,186,2.087,187,2.087,188,2.687,189,2.058,190,5.317,191,5.317,192,7.204,193,6.884,194,6.884,195,6.609,196,6.156,197,5.789,198,2.725,199,2.087,200,5.915,201,2.764,202,4.419,203,5.317,204,4.032,205,4.63,206,5.317,207,5.915,208,2.746,209,1.754,210,4.63,211,4.63,212,5.915,213,5.317,214,4.924,215,5.915]],["title/interfaces/ActivatedApp.html",[0,0.763,216,3.797]],["body/interfaces/ActivatedApp.html",[0,1.416,2,1.897,3,0.047,4,0.047,5,0.047,14,0.004,15,0.751,16,3.952,17,0.139,32,0.061,37,2.485,77,0.004,164,0.004,168,0.167,169,2.514,216,6.563,217,5.202,218,6.099,219,7.046,220,7.046,221,3.815,222,2.38,223,1.837,224,3.22,225,5.608,226,4.994,227,6.099]],["title/classes/AllExceptionsFilter.html",[179,0.107,228,4.594]],["body/classes/AllExceptionsFilter.html",[3,0.033,4,0.033,5,0.033,7,0.244,13,0.452,14,0.005,15,0.404,17,0.176,25,3.506,29,1.778,32,0.033,55,2.367,60,3.475,71,0.665,72,3.467,77,0.003,107,0.835,125,1.799,145,3.348,164,0.003,171,1.044,175,0.782,177,0.789,178,0.519,179,0.106,223,1.275,228,6.284,229,1.851,230,7.978,231,5.098,232,3.674,233,7.978,234,1.615,235,5.098,236,9.29,237,5.098,238,1.217,239,1.148,240,5.098,241,4.397,242,8.584,243,5.098,244,8.085,245,3.761,246,6.374,247,4.583,248,5.471,249,1.702,250,6.991,251,5.098,252,6.991,253,5.098,254,6.991,255,3.044,256,1.399,257,5.098,258,5.098,259,6.991,260,4.583,261,3.475,262,5.098,263,5.098,264,5.098,265,3.99,266,5.098,267,2.679,268,5.098,269,7.919,270,6.244,271,5.098,272,6.244,273,5.098,274,5.098,275,4.583,276,3.619,277,5.098,278,4.243,279,5.098,280,5.098,281,3.788,282,3.788,283,5.098,284,6.991,285,4.583,286,2.564,287,5.098,288,5.098,289,3.475,290,3.236,291,2.367,292,5.098,293,5.098]],["title/injectables/AnalyticsService.html",[294,0.727,295,3.357]],["body/injectables/AnalyticsService.html",[3,0.039,4,0.039,5,0.039,7,0.293,8,1.25,13,0.51,14,0.005,15,0.692,17,0.166,25,3.401,30,2.225,32,0.039,40,4.699,48,2.393,72,2.356,77,0.003,89,2.069,107,0.942,125,2.157,164,0.003,171,1.178,175,0.977,177,0.946,178,0.622,179,0.127,209,1.813,223,1.593,234,1.597,238,1.373,239,1.295,256,1.846,294,1.122,295,5.182,296,1.768,297,6.114,298,1.768,299,8.735,300,3.76,301,3.357,302,7.89,303,6.114,304,8.735,305,9.23,306,9.23,307,8.735,308,6.114,309,7.89,310,6.175,311,1.909,312,7.89,313,5.089,314,6.114,315,4.016,316,5.496,317,3.289,318,6.114,319,6.114,320,4.34]],["title/interfaces/ApiKey.html",[0,0.763,321,2.466]],["body/interfaces/ApiKey.html",[0,0.957,2,1.659,3,0.041,4,0.041,5,0.041,7,0.307,8,1.289,13,0.658,14,0.004,15,0.854,17,0.122,32,0.041,37,2.131,77,0.003,164,0.003,168,0.146,221,3.857,222,2.082,223,1.857,321,3.924,322,1.785,323,3.448,324,5.016,325,5.016,326,5.762,327,7.352,328,7.819,329,3.677,330,5.177,331,7.352,332,7.352,333,7.352,334,7.352]],["title/interfaces/ApiKey-1.html",[0,0.635,104,1.776,321,2.053]],["body/interfaces/ApiKey-1.html",[0,1.001,2,1.736,3,0.043,4,0.043,5,0.043,7,0.321,8,1.326,13,0.648,14,0.004,15,0.849,17,0.127,32,0.043,37,2.192,77,0.004,164,0.004,168,0.152,221,3.937,222,2.178,223,1.827,224,4.195,225,6.061,321,4.037,323,3.606,324,5.247,325,5.247,326,6.027,330,5.262,332,7.472,333,7.472,334,7.472,335,2.624]],["title/modules/ApiKeyModule.html",[181,1.096,336,2.817]],["body/modules/ApiKeyModule.html",[3,0.038,4,0.038,5,0.038,14,0.005,17,0.19,32,0.038,77,0.003,80,1.954,164,0.003,167,1.785,168,0.194,169,2.632,178,0.596,179,0.122,181,1.835,183,1.981,184,2.009,185,2.066,186,2.066,187,2.066,188,2.976,189,2.976,195,6.591,196,6.139,198,2.707,199,2.066,201,2.746,322,1.631,323,3.15,336,5.782,337,5.264,338,5.264,339,5.264,340,5.264,341,4.576,342,7.184,343,5.564,344,3.99,345,5.264,346,6.074,347,3.078,348,3.395,349,3.107,350,5.264,351,3.601,352,6.896,353,5.264,354,4.874,355,5.039,356,4.583,357,5.856,358,5.856,359,5.856]],["title/controllers/ApiKeysController.html",[165,1.135,346,3.628]],["body/controllers/ApiKeysController.html",[3,0.021,4,0.021,5,0.021,7,0.16,13,0.557,14,0.005,15,0.793,17,0.134,30,1.984,32,0.021,55,3.266,71,1.125,77,0.002,107,1.029,125,1.816,149,5.286,157,4.112,164,0.002,165,1.143,167,0.779,168,0.205,171,0.768,173,2.286,175,0.964,177,1.49,178,0.341,179,0.07,223,0.61,234,0.678,238,1.5,239,1.415,249,1.117,256,0.67,321,2.484,322,2.888,323,4.854,329,3.9,343,3.372,344,3.965,346,3.653,348,1.252,349,1.216,351,2.059,360,3.009,361,4.906,362,5.635,363,6.269,364,4.45,365,5.635,366,4.906,367,6.269,368,4.45,369,2.787,370,4.626,371,3.009,372,6.275,373,4.626,374,7.086,375,6.325,376,5.856,377,5.856,378,6.325,379,5.058,380,3.348,381,4.626,382,3.009,383,5.956,384,4.743,385,7.755,386,3.348,387,5.146,388,3.348,389,4.327,390,3.009,391,6.275,392,4.626,393,3.009,394,5.387,395,3.653,396,3.38,397,3.38,398,3.348,399,5.146,400,3.009,401,2.645,402,2.787,403,4.626,404,3.348,405,3.348,406,5.146,407,3.348,408,2.787,409,4.626,410,3.009,411,4.283,412,3.823,413,4.283,414,3.653,415,1.845,416,2.787,417,3.009,418,3.348,419,3.348,420,3.348,421,2.62,422,3.348,423,3.348,424,3.348,425,3.348,426,3.348,427,3.348]],["title/controllers/ApiKeysController-1.html",[104,1.776,165,0.945,346,3.02]],["body/controllers/ApiKeysController-1.html",[3,0.026,4,0.026,5,0.026,7,0.195,13,0.534,14,0.005,17,0.147,30,2.187,32,0.026,55,2.765,71,1.078,77,0.003,107,0.986,125,2.101,149,5.272,157,4.066,164,0.003,165,0.903,167,0.946,168,0.196,171,0.889,173,2.19,175,0.924,177,1.466,178,0.414,179,0.085,223,0.742,234,0.823,238,1.437,239,1.355,249,1.357,256,0.814,322,2.81,323,4.64,329,2.331,335,3.377,343,3.79,344,3.916,346,4.228,349,2.163,351,2.501,360,3.656,361,5.515,362,6.334,364,5.002,366,5.515,368,5.002,370,5.354,371,3.656,372,6.071,373,5.354,374,7.04,375,5.354,376,4.957,377,4.957,378,5.354,379,4.976,381,5.354,382,3.656,383,5.763,384,4.803,385,7.606,392,5.354,393,3.656,394,5.657,395,4.228,396,3.912,397,3.912,400,3.656,403,5.354,409,5.354,410,3.656,411,4.957,412,4.425,413,4.957,414,4.228,415,2.241,428,2.361,429,4.661,430,4.067,431,7.823,432,4.067,433,4.067,434,4.067,435,4.067,436,2.995,437,3.183,438,3.385,439,4.067,440,4.067,441,4.067,442,4.067,443,4.067,444,4.067]],["title/classes/ApiKeysDto.html",[179,0.107,431,3.797]],["body/classes/ApiKeysDto.html",[3,0.046,4,0.046,5,0.046,7,0.345,8,1.385,13,0.565,14,0.004,15,0.775,17,0.137,32,0.046,77,0.004,164,0.004,168,0.214,173,2.318,175,0.978,179,0.182,224,4.136,225,5.975,229,2.615,323,5.063,335,3.684,431,6.494,437,7.366,445,7.201,446,5.153,447,7.201,448,7.201,449,3.281]],["title/modules/ApiKeysModule.html",[181,1.096,450,3.483]],["body/modules/ApiKeysModule.html",[3,0.042,4,0.042,5,0.042,14,0.004,17,0.185,32,0.042,77,0.003,80,2.168,164,0.003,167,1.908,168,0.148,178,0.661,179,0.135,181,1.927,183,2.198,184,2.228,185,2.292,186,2.292,187,2.292,188,3.126,189,3.126,198,2.893,199,2.292,201,2.935,323,3.494,335,2.542,341,4.703,343,5.646,344,4.148,345,5.839,346,6.379,347,3.414,349,3.263,350,5.839,351,3.994,352,7.371,353,5.839,436,4.52,450,7.023,451,5.839,452,6.495,453,6.495,454,6.495]],["title/injectables/ApiKeysService.html",[294,0.727,343,2.749]],["body/injectables/ApiKeysService.html",[3,0.016,4,0.016,5,0.016,7,0.121,13,0.549,14,0.005,15,0.762,16,2.331,17,0.158,29,2.054,30,2.443,32,0.016,38,2.778,40,2.803,55,2.419,71,1.168,77,0.002,79,3.054,107,1.014,125,1.839,126,2.425,149,2.164,164,0.002,168,0.208,171,0.615,175,0.986,177,1.341,178,0.257,179,0.053,222,0.821,234,0.833,238,1.478,239,1.394,248,1.977,249,0.843,256,1.561,281,3.872,294,0.586,296,0.731,298,2.056,321,1.987,322,2.554,323,4.933,324,1.977,325,1.977,327,4.079,328,3.427,329,3.881,330,4.124,331,4.703,332,5.554,333,5.857,334,5.857,343,2.215,344,3.983,348,0.945,354,2.103,355,2.704,356,1.977,365,4.685,396,3.423,397,1.66,429,1.977,455,2.271,456,4.685,457,4.338,458,4.685,459,3.552,460,5.402,461,5.402,462,3.872,463,5.212,464,4.685,465,4.338,466,4.685,467,2.271,468,3.089,469,5.56,470,2.271,471,3.701,472,2.527,473,2.527,474,2.103,475,2.527,476,2.527,477,5.002,478,2.271,479,2.271,480,2.527,481,3.158,482,2.527,483,1.269,484,2.527,485,2.103,486,2.527,487,2.527,488,2.527,489,2.527,490,2.527,491,2.527,492,2.527,493,2.103,494,2.527,495,2.527,496,2.527,497,0.879,498,2.271,499,2.271,500,1.977,501,1.877,502,3.059,503,3.427,504,2.271,505,1.393,506,1.173,507,2.271,508,6.01,509,2.551,510,5.949,511,2.271,512,3.427,513,2.271,514,4.685,515,5.45,516,2.271,517,4.685,518,6.38,519,3.701,520,3.701,521,3.701,522,3.308,523,3.701,524,2.271,525,2.271,526,5.857,527,3.701,528,5.402,529,3.701,530,3.701,531,2.527,532,5.402,533,4.079,534,2.527,535,2.527,536,2.527,537,4.118,538,5.402,539,2.527,540,2.527,541,2.527,542,1.508,543,2.527,544,2.271,545,2.271,546,2.271,547,3.701,548,2.271,549,2.271,550,2.271,551,2.271,552,2.271]],["title/injectables/ApiKeysService-1.html",[104,1.776,294,0.605,343,2.289]],["body/injectables/ApiKeysService-1.html",[3,0.019,4,0.019,5,0.019,7,0.144,13,0.538,14,0.005,15,0.238,17,0.166,29,2.079,30,2.346,32,0.019,38,2.602,40,3.153,71,1.144,77,0.002,79,2.829,107,0.994,125,1.673,126,2.376,149,1.583,164,0.002,168,0.203,171,0.708,175,0.98,177,1.325,178,0.307,179,0.063,222,0.979,224,4.098,225,5.765,234,0.959,238,1.448,239,1.366,248,2.357,249,1.005,256,1.607,281,3.522,294,0.674,296,0.871,298,2.046,321,2.288,323,4.806,324,2.357,325,2.357,327,2.357,330,4.426,332,5.657,333,6.007,334,6.007,335,3.497,343,2.55,344,3.991,349,2.128,396,3.113,397,1.978,429,2.357,431,7.486,436,2.948,437,2.357,438,2.507,455,2.708,456,5.269,458,5.269,459,3.995,460,5.975,461,5.975,462,4.354,464,5.269,466,5.269,467,2.708,468,3.416,470,2.708,471,4.261,478,2.708,479,2.708,481,2.491,483,1.461,497,1.048,498,2.708,499,2.708,500,2.357,501,2.238,502,3.522,503,3.946,505,1.66,506,1.398,507,2.708,509,2.504,510,5.975,511,2.708,512,2.507,513,2.708,514,4.261,515,5.042,516,2.708,517,4.261,518,5.975,519,2.708,520,4.261,521,2.708,522,3.009,523,2.708,524,2.708,525,2.708,526,6.007,527,4.261,528,5.975,529,4.261,530,4.261,532,4.261,533,3.71,538,5.269,542,1.798,545,2.708,546,2.708,547,4.261,548,2.708,549,2.708,550,2.708,551,2.708,552,2.708,553,5.861,554,3.012,555,3.012,556,3.012,557,3.012,558,3.012,559,3.012,560,3.012,561,3.012,562,3.012,563,3.012,564,3.012,565,3.012,566,3.012,567,3.012,568,7.228,569,7.228,570,4.74,571,3.012,572,3.012]],["title/controllers/AppStoreController.html",[165,1.135,573,4.254]],["body/controllers/AppStoreController.html",[3,0.021,4,0.021,5,0.021,7,0.158,13,0.569,14,0.005,15,0.83,17,0.151,32,0.021,71,1.172,77,0.002,107,1.05,149,4.185,157,2.501,164,0.002,165,0.731,167,0.766,168,0.208,169,3.136,171,0.758,173,2.383,175,1.005,177,1.471,178,0.335,179,0.069,202,2.774,210,2.576,211,7.263,217,6.49,223,0.6,225,6.092,234,0.666,238,1.531,239,1.444,256,0.658,322,2.218,335,1.988,364,4.403,368,4.403,372,3.975,383,5.916,384,2.669,394,4.163,428,1.91,436,2.554,573,4.227,574,3.291,575,7.46,576,5.079,577,5.575,578,4.403,579,5.575,580,6.202,581,4.403,582,4.95,583,4.608,584,5.575,585,2.958,586,5.776,587,3.291,588,3.291,589,5.079,590,4.566,591,3.291,592,5.656,593,3.291,594,3.291,595,4.498,596,4.227,597,6.095,598,2.958,599,3.291,600,3.291,601,2.958,602,2.958,603,3.291,604,4.566,605,6.268,606,3.975,607,3.291,608,3.291,609,5.079,610,3.291,611,4.566,612,2.958,613,3.291,614,3.291,615,5.079,616,3.291,617,3.291,618,2.958,619,3.291,620,3.291,621,2.958,622,5.842,623,3.291,624,3.291,625,2.958,626,3.291,627,3.291,628,5.079,629,2.774,630,1.421,631,2.576,632,1.557,633,4.608,634,2.958,635,2.162,636,2.336,637,2.336,638,1.499,639,2.576,640,2.445,641,2.336,642,2.445,643,2.445,644,3.291,645,6.376,646,3.291,647,6.973,648,6.883,649,3.291,650,3.291,651,3.291,652,3.291,653,3.291,654,3.291,655,3.291,656,3.291,657,3.291,658,3.291,659,2.739,660,3.291,661,2.739,662,3.291,663,3.291,664,3.291,665,3.291,666,3.291]],["title/modules/AppStoreModule.html",[181,1.096,192,3.797]],["body/modules/AppStoreModule.html",[3,0.038,4,0.038,5,0.038,14,0.005,17,0.194,32,0.038,77,0.003,80,1.982,107,0.709,164,0.003,167,1.802,168,0.135,169,2.038,178,0.604,179,0.124,181,1.847,183,2.01,184,2.038,185,2.096,186,2.096,187,2.096,188,2.997,189,2.066,192,7.598,197,5.796,198,2.732,199,2.096,201,2.771,202,4.235,204,4.048,208,2.757,209,1.761,210,7.144,211,7.144,217,4.216,241,3.273,249,1.982,341,4.594,573,7.171,633,7.449,634,5.339,667,5.339,668,5.339,669,5.939,670,5.939,671,5.939,672,3.052,673,5.939,674,7.743,675,5.939,676,5.939,677,3.357,678,4.377,679,2.61,680,3.273,681,3.357,682,3.357,683,3.122,684,5.939,685,3.357,686,5.939]],["title/injectables/AppStoreService.html",[294,0.727,633,3.797]],["body/injectables/AppStoreService.html",[3,0.018,4,0.018,5,0.018,7,0.134,13,0.525,14,0.005,15,0.784,16,2.006,17,0.172,29,1.847,30,0.792,32,0.018,38,2.502,48,1.1,71,1.212,72,1.083,77,0.002,107,1.065,126,2.39,139,2.472,164,0.002,168,0.211,169,3.186,171,0.67,175,1.027,177,1.38,178,0.286,179,0.059,202,2.504,209,0.833,210,3.51,211,7.269,216,2.087,217,6.593,219,3.332,220,3.332,222,0.913,223,0.512,224,4.256,225,6.062,226,3.057,234,0.908,238,1.553,239,1.464,245,1.511,246,1.783,249,0.938,256,1.279,294,0.638,296,0.812,298,2.065,301,2.681,335,1.1,349,1.02,364,3.974,368,3.974,431,5.19,436,2.816,437,2.198,438,2.338,462,4.159,468,3.285,483,1.97,497,0.977,506,1.304,509,2.432,522,1.783,533,2.198,577,5.033,578,3.974,579,5.033,581,3.974,582,4.537,583,4.159,584,5.033,585,2.525,586,5.595,592,5.532,595,1.677,598,2.525,601,2.525,612,2.525,618,2.525,621,2.525,622,5.532,625,2.525,633,4.159,638,1.28,640,2.087,641,1.994,642,2.087,643,2.087,679,1.234,687,2.809,688,5.598,689,5.598,690,2.604,691,5.598,692,2.809,693,3.71,694,5.598,695,4.666,696,2.809,697,4.485,698,2.809,699,2.809,700,2.809,701,2.809,702,2.809,703,2.809,704,2.809,705,2.809,706,2.809,707,2.809,708,2.809,709,2.809,710,2.809,711,2.809,712,2.809,713,2.809,714,2.809,715,2.809,716,2.809,717,2.809,718,2.809,719,2.809,720,1.845,721,2.525,722,2.525,723,1.915,724,1.631,725,1.631,726,1.631,727,2.809,728,2.809,729,2.809,730,2.809,731,2.809,732,2.809,733,2.809,734,2.338,735,8.368,736,8.581,737,2.525,738,2.809,739,2.809,740,2.809,741,2.809,742,2.809,743,2.809,744,5.598,745,2.809,746,2.809,747,2.809,748,2.809,749,2.525,750,2.525,751,2.525,752,2.525,753,2.525,754,2.525,755,2.809,756,2.809,757,2.809,758,2.809,759,2.525,760,2.809]],["title/interfaces/Application.html",[0,0.763,220,3.797]],["body/interfaces/Application.html",[0,1.381,2,1.794,3,0.044,4,0.044,5,0.044,7,0.332,8,1.353,13,0.598,14,0.004,15,0.81,16,4.32,17,0.132,32,0.059,37,2.425,77,0.004,164,0.004,168,0.157,169,2.377,216,5.146,217,4.918,218,5.766,219,6.342,220,6.874,221,3.995,222,2.25,223,1.809,224,4.244,225,6.296,226,6.583,227,5.766]],["title/classes/ApproveToken.html",[179,0.107,761,4.594]],["body/classes/ApproveToken.html",[2,1.202,3,0.03,4,0.03,5,0.03,7,0.222,8,1.038,13,0.583,14,0.005,15,0.688,17,0.144,29,1.92,32,0.03,35,2.345,37,1.717,71,0.991,77,0.003,85,1.45,89,1.571,107,1.131,126,1.871,164,0.003,168,0.173,171,0.978,175,1.037,177,1.396,179,0.097,229,1.686,238,1.57,239,1.481,291,3.041,298,1.826,311,2.574,509,1.759,761,6.823,762,2.533,763,2.71,764,3.817,765,5.234,766,7.591,767,4.643,768,5.352,769,3.911,770,4.972,771,5.388,772,5.941,773,4.531,774,4.159,775,4.159,776,4.159,777,5.047,778,3.05,779,3.45,780,6.582,781,4.643,782,5.347,783,3.458,784,3.911,785,3.817,786,2.879,787,3.1,788,2.931,789,4.174,790,4.643,791,2.948,792,4.174,793,3.05,794,3.165,795,2.948,796,3.05,797,2.948,798,3.05,799,2.386,800,4.867,801,5.453,802,3.222,803,3.05,804,3.61,805,3.05,806,4.029,807,2.772,808,3.61,809,2.856,810,5.127,811,3.296,812,4.643,813,3.1,814,3.45,815,2.948,816,3.443,817,3.524,818,2.948,819,3.165,820,2.856,821,4.643,822,3.296,823,3.865,824,3.296,825,4.174,826,3.45]],["title/controllers/AuthController.html",[165,1.135,827,4.254]],["body/controllers/AuthController.html",[3,0.036,4,0.036,5,0.036,7,0.267,13,0.481,14,0.005,15,0.662,17,0.176,21,2.751,29,1.157,30,2.097,32,0.036,71,0.971,77,0.003,104,2.332,107,0.888,126,1.595,157,3.663,164,0.003,165,1.651,167,1.3,168,0.19,169,2.868,171,1.11,173,1.973,175,0.832,177,1.379,178,0.569,179,0.116,202,3.987,223,1.019,234,1.131,238,1.294,239,1.221,256,1.118,286,2.81,298,1.692,401,4.905,459,5.698,509,1.5,586,4.204,606,6.975,629,3.327,630,2.412,632,2.644,635,3.669,636,3.966,637,3.966,638,4.508,639,4.372,645,5.279,648,4.372,695,4.991,720,3.669,750,5.022,788,2.499,827,6.19,828,5.587,829,4.296,830,5.022,831,7.624,832,5.587,833,5.587,834,7.437,835,4.372,836,5.587,837,5.587,838,5.82,839,7.437,840,6.685,841,5.022,842,4.65,843,3.546,844,5.587,845,5.587,846,5.587,847,5.587]],["title/modules/AuthModule.html",[181,1.096,193,3.628]],["body/modules/AuthModule.html",[3,0.04,4,0.04,5,0.04,14,0.005,17,0.19,29,1.282,32,0.04,71,0.808,77,0.003,80,2.066,164,0.003,167,1.851,168,0.141,169,2.124,178,0.63,179,0.129,181,1.885,183,2.095,184,2.124,185,2.185,186,2.185,187,2.185,188,3.057,189,2.767,193,7.179,197,5.861,198,2.807,199,2.185,201,3.145,202,3.931,204,4.22,208,3.692,209,1.836,298,1.253,301,3.182,394,3.696,497,2.154,827,7.315,848,5.566,849,6.192,850,5.566,851,6.691,852,6.192,853,7.15,854,3.93,855,6.192,856,6.192,857,6.621,858,4.395,859,5.566,860,5.566,861,3.696,862,5.154,863,3.594,864,6.621,865,4.6]],["title/classes/AuthOperatorDto.html",[179,0.107,866,4.254]],["body/classes/AuthOperatorDto.html",[3,0.045,4,0.045,5,0.045,7,0.333,8,1.357,12,5.11,13,0.599,14,0.004,15,0.801,17,0.132,32,0.045,77,0.004,164,0.004,168,0.22,169,3.319,173,2.459,175,1.037,179,0.178,229,2.527,290,5.886,446,5.104,449,3.171,866,7.126,867,9.674,868,6.96,869,9.272,870,5.383,871,6.96,872,6.96,873,6.96]],["title/interfaces/AvailableApp.html",[0,0.763,219,3.797]],["body/interfaces/AvailableApp.html",[0,1.395,2,1.833,3,0.045,4,0.045,5,0.045,7,0.339,8,1.371,13,0.559,14,0.004,15,0.79,16,4.353,17,0.134,32,0.06,37,2.267,77,0.004,164,0.004,168,0.161,169,2.428,216,5.259,217,5.025,218,5.892,219,6.94,220,6.427,221,3.735,222,2.3,223,1.82,224,3.111,225,6.335,226,4.825,227,8.099]],["title/interfaces/BackendWallet.html",[0,0.763,874,3.628]],["body/interfaces/BackendWallet.html",[0,1.027,2,1.781,3,0.044,4,0.044,5,0.044,7,0.329,8,1.347,13,0.64,14,0.004,15,0.846,17,0.131,32,0.044,37,2.227,77,0.004,164,0.004,168,0.156,221,3.983,222,2.234,223,1.805,335,2.692,783,4.389,874,6.033,875,3.388,876,5.725,877,5.11,878,5.182,879,8.66,880,5.446,881,7.54]],["title/injectables/BackendWalletsEthereumService.html",[294,0.727,882,3.797]],["body/injectables/BackendWalletsEthereumService.html",[3,0.018,4,0.018,5,0.018,7,0.137,8,0.722,13,0.528,14,0.005,15,0.759,17,0.16,25,2.381,29,1.825,30,2.118,32,0.018,71,1.241,77,0.002,79,2.22,85,0.894,89,1.541,104,1.901,107,0.976,126,2.014,164,0.002,168,0.219,171,0.68,175,1.072,177,1.219,178,0.292,179,0.06,209,0.849,222,0.93,223,1.034,234,0.922,238,1.423,239,1.342,245,3.476,255,1.71,256,1.503,294,0.648,296,0.828,298,1.979,301,2.702,311,1.422,335,3.779,436,2.852,468,3.321,483,1.404,497,0.996,509,2.017,582,4.026,690,2.644,763,2.9,783,3.213,813,1.355,874,3.234,881,4.438,882,3.384,883,5.937,884,8.036,885,2.864,886,4.438,887,5.098,888,5.098,889,5.671,890,5.098,891,5.098,892,5.671,893,5.098,894,5.098,895,5.098,896,5.671,897,5.671,898,5.671,899,5.671,900,5.098,901,1.881,902,4.484,903,5.671,904,4.555,905,2.864,906,2.864,907,2.851,908,2.575,909,4.801,910,2.864,911,2.864,912,2.864,913,2.575,914,2.864,915,2.575,916,2.864,917,4.572,918,2.864,919,7.184,920,2.864,921,2.575,922,2.864,923,4.555,924,2.864,925,2.575,926,2.864,927,2.575,928,2.864,929,2.575,930,2.864,931,2.864,932,2.864,933,2.864,934,2.864,935,2.864,936,2.864,937,2.864,938,2.864,939,2.575,940,2.864,941,1.579,942,2.128,943,2.128,944,2.864,945,3.384,946,2.128,947,3.234,948,2.575,949,2.242,950,2.128,951,1.761,952,4.555,953,2.864,954,1.196,955,1.818,956,4.102,957,1.71,958,2.864,959,2.384,960,2.575,961,2.575,962,2.864,963,2.864,964,2.864,965,2.864,966,2.575,967,4.095,968,2.242,969,2.575,970,2.864,971,2.864,972,2.864,973,4.095,974,5.671,975,2.864,976,2.864,977,2.864,978,4.555,979,2.864,980,2.864,981,2.575,982,4.555,983,2.864,984,2.864,985,2.864,986,2.864,987,2.864,988,2.864,989,6.252,990,2.575,991,5.098,992,4.213,993,3.6,994,4.026,995,3.725,996,3.725,997,3.725,998,2.864,999,2.575]],["title/interfaces/BaseUserOp.html",[0,0.763,1000,3.628]],["body/interfaces/BaseUserOp.html",[0,0.937,2,1.132,3,0.028,4,0.028,5,0.028,7,0.209,8,0.995,12,4.874,13,0.647,14,0.005,15,0.853,16,2.808,17,0.083,30,1.233,32,0.04,35,2.246,37,1.146,55,2.029,77,0.003,85,2.91,149,2.298,164,0.003,168,0.099,221,2.71,222,1.42,239,1.03,278,3.639,311,1.365,321,3.872,322,1.218,379,2.199,395,3.103,638,1.992,762,1.459,763,1.885,764,2.199,773,2.61,785,3.156,786,2.758,808,4.683,815,5.393,820,3.86,829,2.247,907,2.787,1000,5.212,1001,3.248,1002,3.93,1003,7.072,1004,7.638,1005,7.638,1006,7.638,1007,5.225,1008,6.467,1009,7.072,1010,7.072,1011,5.393,1012,7.072,1013,6.6,1014,6.6,1015,3.93,1016,3.93,1017,3.103,1018,7.9,1019,6.678,1020,5.961,1021,7.212,1022,3.422,1023,7.638,1024,7.212,1025,7.583,1026,6.111,1027,5.642,1028,3.639,1029,5.224,1030,5.642,1031,5.642,1032,3.93,1033,3.93,1034,5.224,1035,2.775,1036,2.98,1037,3.93,1038,3.93,1039,2.689,1040,3.93,1041,3.639,1042,3.248,1043,2.775,1044,3.984,1045,6.6,1046,3.93,1047,3.639,1048,4.455,1049,5.642,1050,3.93,1051,4.455]],["title/modules/BroadcasterModule.html",[181,1.096,1052,3.483]],["body/modules/BroadcasterModule.html",[3,0.039,4,0.039,5,0.039,14,0.005,17,0.193,25,2.907,32,0.039,77,0.003,80,2.04,164,0.003,168,0.139,178,0.622,179,0.127,181,1.873,183,2.069,184,2.097,185,2.157,186,2.157,187,2.157,188,3.039,189,3.039,198,2.784,199,2.157,201,2.824,208,2.838,209,1.813,341,4.63,347,3.213,672,3.142,680,3.369,954,2.552,1052,7.129,1053,5.496,1054,5.496,1055,5.496,1056,5.496,1057,6.426,1058,8.146,1059,6.211,1060,2.47,1061,6.114,1062,4.546,1063,6.114,1064,4.785,1065,4.146,1066,6.175,1067,4.785,1068,4.785,1069,6.114,1070,4.34,1071,4.34]],["title/injectables/BroadcasterService.html",[294,0.727,1058,4]],["body/injectables/BroadcasterService.html",[3,0.022,4,0.022,5,0.022,7,0.166,8,0.838,13,0.499,14,0.005,15,0.721,16,2.365,17,0.165,25,2.64,29,1.598,30,2.384,32,0.022,38,2.508,40,1.865,42,2.136,48,2.069,55,2.454,71,1.103,72,2.037,77,0.002,78,1.96,85,2.721,89,1.173,104,1.447,107,0.921,125,2.868,139,3.949,164,0.002,168,0.21,171,0.789,175,1.019,177,1.258,178,0.353,179,0.072,209,1.028,222,1.126,223,1.407,234,1.07,238,1.343,239,1.266,245,2.844,246,2.201,256,1.879,267,1.822,270,2.714,272,2.714,290,3.356,291,3.581,294,0.752,296,1.003,298,1.645,301,2.9,311,1.083,412,2.576,468,3.683,483,1.629,497,1.206,509,1.72,690,3.069,786,1.524,1017,2.461,1044,2.201,1058,4.137,1059,5.366,1060,3.741,1062,3.529,1070,2.461,1071,2.461,1072,3.467,1073,6.406,1074,6.406,1075,6.406,1076,5.759,1077,4.884,1078,4.884,1079,6.406,1080,6.406,1081,3.467,1082,5.286,1083,4.752,1084,3.467,1085,3.467,1086,4.361,1087,3.467,1088,7.166,1089,3.467,1090,3.467,1091,3.467,1092,5.759,1093,3.117,1094,6.037,1095,3.467,1096,3.719,1097,3.467,1098,3.467,1099,5.286,1100,3.467,1101,3.467,1102,3.467,1103,3.467,1104,2.714,1105,2.886,1106,3.117,1107,3.117,1108,3.117,1109,3.117,1110,2.461,1111,3.458,1112,2.886,1113,3.117,1114,3.467,1115,3.467,1116,3.467,1117,3.467,1118,3.117,1119,5.286,1120,3.467,1121,4.752,1122,3.467,1123,6.037,1124,3.467,1125,3.467,1126,3.467,1127,3.467,1128,3.467,1129,3.117,1130,3.467,1131,3.467,1132,3.467,1133,3.467,1134,2.886,1135,3.467,1136,7.714,1137,8.129,1138,3.467,1139,3.467,1140,3.467,1141,3.467,1142,7.166,1143,2.886,1144,2.714,1145,3.467,1146,3.472,1147,5.286,1148,2.886,1149,3.467,1150,3.467,1151,3.467,1152,3.467,1153,3.467,1154,3.467,1155,2.576,1156,2.886,1157,3.467,1158,5.286,1159,3.467,1160,3.467,1161,2.363,1162,3.117,1163,3.117,1164,3.117,1165,2.714,1166,3.117,1167,2.886,1168,3.117]],["title/controllers/BundlerApiController.html",[165,1.135,1169,4.254]],["body/controllers/BundlerApiController.html",[3,0.043,4,0.043,5,0.043,7,0.324,14,0.005,17,0.174,32,0.043,77,0.004,164,0.004,165,1.868,167,1.574,168,0.208,171,1.256,173,2.232,175,0.941,177,1.302,178,0.689,179,0.141,286,3.403,322,2.55,348,3.146,349,2.457,389,4.161,630,4.397,632,3.202,799,4.324,1169,7.003,1170,7.621,1171,7.497,1172,4.04,1173,6.767,1174,6.083,1175,4.444,1176,5.632,1177,5.632,1178,4.612,1179,5.027,1180,3.266,1181,4.444,1182,4.161,1183,5.632,1184,6.767,1185,6.767]],["title/injectables/BundlerApiInterceptor.html",[294,0.727,1176,4.254]],["body/injectables/BundlerApiInterceptor.html",[3,0.025,4,0.025,5,0.025,7,0.186,8,0.912,13,0.443,14,0.005,17,0.178,25,2.795,29,1.941,30,2.393,32,0.025,40,2.089,48,1.52,71,0.99,72,1.497,77,0.002,79,2.969,89,1.314,107,0.906,125,2.031,126,1.109,164,0.002,168,0.193,171,0.859,175,0.906,177,1.061,178,0.395,179,0.081,209,1.151,223,1.383,232,2.041,234,1.165,238,1.32,239,1.245,245,3.096,246,2.465,249,1.296,255,2.318,256,1.925,261,2.646,267,3.025,276,2.756,294,0.819,296,1.123,298,1.717,301,3.013,311,1.212,321,1.874,322,2.363,483,1.774,497,1.351,505,2.14,506,1.802,509,1.545,522,2.465,629,2.575,638,2.622,679,1.706,693,4.403,724,2.254,725,2.254,726,2.254,785,3.449,902,5.242,917,2.254,954,1.621,955,2.465,956,3.654,957,2.318,993,3.654,995,2.55,996,2.55,997,2.55,1036,2.646,1170,7.062,1171,6.64,1176,4.791,1186,3.232,1187,5.709,1188,5.709,1189,6.165,1190,3.883,1191,5.756,1192,5.174,1193,3.232,1194,5.242,1195,5.368,1196,7.585,1197,3.883,1198,4.836,1199,3.232,1200,3.883,1201,3.49,1202,3.883,1203,5.384,1204,5.756,1205,4.791,1206,3.232,1207,3.039,1208,3.232,1209,3.49,1210,3.49,1211,4.869,1212,4.276,1213,2.465,1214,2.646,1215,3.232,1216,4.869,1217,3.49,1218,2.55,1219,3.232,1220,2.885,1221,5.756,1222,3.883,1223,3.883,1224,3.039,1225,3.232,1226,4.086,1227,2.885,1228,3.49,1229,3.883,1230,3.883,1231,3.883,1232,3.883,1233,3.883,1234,3.883,1235,6.858,1236,3.883,1237,3.883,1238,3.883,1239,3.49,1240,3.49,1241,3.341,1242,3.883,1243,3.883,1244,3.039,1245,3.883,1246,3.883,1247,3.883,1248,1.953,1249,2.318,1250,3.49,1251,3.49,1252,4.791,1253,3.232,1254,3.49,1255,3.49,1256,3.49,1257,3.49,1258,3.49,1259,3.49,1260,5.174,1261,2.388,1262,3.49,1263,5.174,1264,3.49,1265,3.49]],["title/modules/BundlerApiModule.html",[181,1.096,1266,3.797]],["body/modules/BundlerApiModule.html",[3,0.041,4,0.041,5,0.041,14,0.005,17,0.193,32,0.041,77,0.003,80,2.111,107,0.756,164,0.003,167,1.876,168,0.144,178,0.644,179,0.132,181,1.904,183,2.14,184,2.17,185,2.232,186,2.232,187,2.232,188,2.201,189,2.201,198,2.845,199,2.232,201,2.886,208,2.936,209,1.876,241,3.486,249,2.111,322,1.762,336,5.441,344,2.78,348,3.32,349,2.297,672,3.251,677,3.576,678,4.558,679,2.78,680,3.486,681,3.576,682,3.576,683,3.325,685,3.576,954,2.641,1065,4.238,1169,7.389,1170,5.266,1171,6.311,1177,6.712,1214,5.496,1266,7.334,1267,5.687,1268,6.326,1269,4.016,1270,3.576,1271,4.951,1272,4.155,1273,4.951,1274,4.951]],["title/modules/ChargeApiModule.html",[181,1.096,1275,3.628]],["body/modules/ChargeApiModule.html",[3,0.039,4,0.039,5,0.039,13,0.394,14,0.005,17,0.189,32,0.039,77,0.003,80,2.032,164,0.003,168,0.138,178,0.62,179,0.127,181,1.869,183,2.06,184,2.089,185,2.148,186,2.148,187,2.148,188,3.033,189,3.033,198,2.776,199,2.148,201,3.12,208,3.652,209,1.805,298,1.232,301,3.274,322,1.696,335,2.383,341,4.624,347,3.2,394,3.635,436,4.384,497,2.118,672,3.129,680,3.355,863,3.534,875,2.998,941,4.336,954,2.541,1065,3.2,1269,3.865,1275,7.229,1276,5.473,1277,6.088,1278,5.473,1279,5.473,1280,7.385,1281,5.585,1282,3.2,1283,7.868,1284,5.473,1285,6.088,1286,4.523,1287,4.765,1288,3.999,1289,3.999,1290,3.999,1291,6.088]],["title/injectables/ChargeApiService.html",[294,0.727,1280,3.628]],["body/injectables/ChargeApiService.html",[3,0.016,4,0.016,5,0.016,7,0.191,8,0.631,13,0.554,14,0.005,15,0.747,17,0.159,25,2.161,29,2.033,30,1.963,32,0.016,51,0.894,71,1.21,77,0.002,79,1.983,85,0.757,89,1.714,107,0.978,126,2.1,141,1.802,164,0.002,168,0.216,171,0.595,175,1.055,177,1.231,178,0.247,179,0.051,209,0.719,222,0.788,223,0.924,234,0.806,238,1.425,239,1.344,245,3.155,246,1.54,255,1.448,256,1.393,267,2.093,272,1.898,294,0.567,296,0.701,298,1.987,301,2.523,311,1.582,335,3.718,436,2.949,468,3.014,483,1.227,497,0.844,505,1.337,506,1.126,509,2.377,582,3.597,583,3.764,622,4.744,642,1.802,643,1.802,690,2.312,721,2.181,722,2.181,723,1.653,783,2.951,813,1.148,874,3.597,875,4.678,876,2.019,878,1.305,879,3.58,880,1.371,881,3.965,886,3.965,887,4.555,888,4.555,890,4.555,891,4.555,893,4.555,894,4.555,895,4.555,900,4.555,901,1.593,902,4.156,907,2.459,908,2.181,909,4.357,913,2.181,915,2.181,917,4.616,919,6.813,921,2.181,925,2.181,927,2.181,929,2.181,939,2.181,941,2.792,942,1.802,943,1.802,948,2.181,951,1.492,954,1.013,955,1.54,956,3.216,957,1.448,959,2.019,960,2.181,961,2.181,966,2.181,967,3.58,968,1.898,969,2.181,981,2.181,989,6.392,990,2.181,991,3.58,992,2.959,993,2.528,994,2.827,995,2.616,996,2.616,997,2.616,999,2.181,1244,3.117,1280,2.827,1281,6.742,1284,2.181,1292,1.653,1293,5.067,1294,5.067,1295,4.217,1296,5.067,1297,5.067,1298,5.067,1299,5.067,1300,5.067,1301,3.58,1302,2.426,1303,2.714,1304,2.426,1305,2.528,1306,2.426,1307,2.426,1308,2.426,1309,2.426,1310,1.895,1311,2.426,1312,2.426,1313,6.961,1314,2.426,1315,3.597,1316,2.181,1317,2.528,1318,2.426,1319,2.426,1320,2.019,1321,2.426,1322,3.983,1323,2.426,1324,2.426,1325,2.426,1326,2.181,1327,2.426,1328,2.426,1329,2.426,1330,2.426,1331,2.426,1332,2.426,1333,2.426,1334,2.426,1335,2.426,1336,2.426,1337,1.722,1338,1.013,1339,2.426,1340,2.426,1341,2.426,1342,2.181,1343,2.426,1344,3.983,1345,2.426,1346,2.426,1347,5.067,1348,3.983,1349,2.426,1350,2.426,1351,2.426,1352,2.426,1353,2.426,1354,3.983,1355,2.426,1356,2.019,1357,2.426,1358,2.426,1359,2.426,1360,2.426,1361,2.426,1362,2.181,1363,2.426,1364,1.247,1365,2.426,1366,2.426,1367,2.426,1368,2.426,1369,2.426,1370,2.426,1371,1.898,1372,2.426,1373,2.426,1374,2.426,1375,2.426,1376,2.426,1377,2.426,1378,2.426,1379,2.426,1380,3.983,1381,2.426,1382,3.983,1383,2.426,1384,1.635,1385,2.426,1386,2.426,1387,2.426,1388,2.426,1389,2.426,1390,2.426,1391,2.426,1392,2.426,1393,2.426,1394,2.426,1395,2.426,1396,2.426,1397,2.426,1398,2.426,1399,2.426,1400,2.426,1401,2.426,1402,2.426,1403,2.426,1404,3.983,1405,2.378,1406,2.426,1407,2.426,1408,2.426,1409,2.019,1410,2.426,1411,2.426]],["title/controllers/ChargeApiServiceController.html",[165,1.135,1412,4.254]],["body/controllers/ChargeApiServiceController.html",[3,0.048,4,0.048,5,0.048,7,0.355,14,0.004,15,0.588,17,0.141,32,0.048,71,0.969,77,0.004,164,0.004,165,1.977,167,1.727,168,0.202,171,1.329,172,6.739,173,1.968,174,6.067,175,0.83,177,1.148,178,0.755,179,0.155,180,4.711,322,2.754,875,4.384,1412,7.409,1413,5.268,1414,5.268]],["title/modules/ChargeApiServiceModule.html",[181,1.096,1415,4]],["body/modules/ChargeApiServiceModule.html",[3,0.032,4,0.032,5,0.032,14,0.005,17,0.193,32,0.032,77,0.003,80,1.681,164,0.003,167,1.613,168,0.114,178,0.513,179,0.105,181,1.7,183,1.704,184,1.728,185,1.777,186,1.777,187,1.777,188,2.758,189,1.752,198,2.446,199,1.777,201,2.481,322,2.379,336,5.101,344,2.213,348,3.778,349,1.829,763,2.082,875,2.48,941,3.821,1171,3.942,1177,4.192,1266,6.877,1270,2.847,1412,6.599,1415,8.316,1416,4.527,1417,4.527,1418,4.527,1419,6.877,1420,6.877,1421,6.877,1422,6.877,1423,6.571,1424,6.877,1425,6.571,1426,6.877,1427,7.244,1428,3.575,1429,3.575,1430,4.527,1431,3.433,1432,3.308,1433,7.561,1434,4.527,1435,4.192,1436,3.942,1437,4.192,1438,3.942,1439,3.942,1440,3.942,1441,2.588,1442,3.575,1443,4.527,1444,3.942,1445,4.192,1446,3.942]],["title/injectables/ChargeApiServiceService.html",[294,0.727,1427,4]],["body/injectables/ChargeApiServiceService.html",[3,0.048,4,0.048,5,0.048,7,0.357,14,0.004,15,0.707,17,0.142,32,0.048,71,0.974,77,0.004,164,0.004,168,0.203,171,1.333,175,0.835,177,1.154,178,0.759,179,0.155,294,1.27,296,2.157,322,2.759,875,4.397,1427,6.988,1447,6.209,1448,8.244,1449,6.209,1450,6.209,1451,6.209]],["title/controllers/ChargeAppsServiceController.html",[165,1.135,1452,4.254]],["body/controllers/ChargeAppsServiceController.html",[3,0.048,4,0.048,5,0.048,7,0.355,14,0.004,15,0.588,17,0.141,32,0.048,71,0.969,77,0.004,164,0.004,165,1.977,167,1.727,168,0.202,171,1.329,172,6.739,173,1.968,174,6.067,175,0.83,177,1.148,178,0.755,179,0.155,180,4.711,335,3.87,875,4.384,1413,5.268,1414,5.268,1452,7.409]],["title/modules/ChargeAppsServiceModule.html",[181,1.096,1453,4]],["body/modules/ChargeAppsServiceModule.html",[3,0.041,4,0.041,5,0.041,14,0.005,17,0.187,32,0.041,77,0.003,80,2.107,164,0.003,167,1.874,168,0.143,178,0.642,179,0.132,181,1.902,183,2.136,184,2.166,185,2.227,186,2.227,187,2.227,188,3.085,189,2.196,198,2.841,199,2.227,201,2.882,335,3.656,344,2.774,349,2.292,436,4.853,450,6.725,875,3.109,941,4.438,945,4.69,946,4.69,1270,3.568,1428,4.481,1429,4.481,1430,5.674,1452,7.381,1453,8.183,1454,5.674,1455,5.674,1456,5.674,1457,7.33,1458,7.33,1459,7.722,1460,6.312,1461,6.312]],["title/injectables/ChargeAppsServiceService.html",[294,0.727,1459,4]],["body/injectables/ChargeAppsServiceService.html",[3,0.048,4,0.048,5,0.048,7,0.357,14,0.004,15,0.707,17,0.142,32,0.048,71,0.974,77,0.004,164,0.004,168,0.203,171,1.333,175,0.835,177,1.154,178,0.759,179,0.155,294,1.27,296,2.157,335,3.877,875,4.397,1447,6.209,1448,8.244,1449,6.209,1450,6.209,1451,6.209,1459,6.988]],["title/controllers/ChargeNetworkServiceController.html",[165,1.135,1462,4.254]],["body/controllers/ChargeNetworkServiceController.html",[3,0.048,4,0.048,5,0.048,7,0.355,14,0.004,15,0.588,17,0.141,32,0.048,71,0.969,77,0.004,164,0.004,165,1.977,167,1.727,168,0.202,171,1.329,172,6.739,173,1.968,174,6.067,175,0.83,177,1.148,178,0.755,179,0.155,180,4.711,875,4.384,1413,5.268,1414,5.268,1462,7.409,1463,4.197]],["title/modules/ChargeNetworkServiceModule.html",[181,1.096,1464,4]],["body/modules/ChargeNetworkServiceModule.html",[3,0.042,4,0.042,5,0.042,14,0.005,17,0.189,32,0.042,77,0.003,80,2.173,164,0.003,167,1.911,168,0.148,178,0.663,179,0.136,181,1.929,183,2.203,184,2.233,185,2.297,186,2.297,187,2.297,188,2.265,189,2.265,198,2.897,199,2.297,201,2.939,875,3.206,941,3.588,954,2.717,1065,4.316,1428,4.621,1429,4.621,1462,7.488,1463,3.819,1464,8.127,1465,5.852,1466,5.852,1467,7.389,1468,7.389,1469,7.389,1470,4.751,1471,6.51,1472,6.51,1473,6.51]],["title/controllers/ChargeNotificationsServiceController.html",[165,1.135,1474,4.254]],["body/controllers/ChargeNotificationsServiceController.html",[3,0.048,4,0.048,5,0.048,7,0.355,14,0.004,15,0.588,17,0.141,32,0.048,71,0.969,77,0.004,164,0.004,165,1.977,167,1.727,168,0.202,171,1.329,172,6.739,173,1.968,174,6.067,175,0.83,177,1.148,178,0.755,179,0.155,180,4.711,875,4.384,1060,3.994,1413,5.268,1414,5.268,1474,7.409]],["title/modules/ChargeNotificationsServiceModule.html",[181,1.096,1475,4]],["body/modules/ChargeNotificationsServiceModule.html",[3,0.039,4,0.039,5,0.039,14,0.005,17,0.189,32,0.039,77,0.003,80,2.045,164,0.003,167,1.838,168,0.139,178,0.624,179,0.128,181,1.875,183,2.073,184,2.102,185,2.162,186,2.162,187,2.162,188,2.131,189,2.131,198,2.788,199,2.162,201,2.828,348,2.291,763,2.373,875,3.017,941,3.377,1052,6.672,1057,6.43,1060,3.533,1062,4.709,1064,4.795,1425,6.949,1428,4.349,1429,4.349,1433,4.795,1441,3.149,1442,4.349,1474,7.278,1475,8.223,1476,5.507,1477,5.507,1478,7.273,1479,7.273,1480,5.1,1481,4.795,1482,4.552,1483,7.9,1484,5.507,1485,5.1]],["title/controllers/ChargeRelayServiceController.html",[165,1.135,1486,4.254]],["body/controllers/ChargeRelayServiceController.html",[3,0.048,4,0.048,5,0.048,7,0.355,14,0.004,15,0.588,17,0.141,32,0.048,71,0.969,77,0.004,164,0.004,165,1.977,167,1.727,168,0.202,171,1.329,172,6.739,173,1.968,174,6.067,175,0.83,177,1.148,178,0.755,179,0.155,180,4.711,875,4.384,1413,5.268,1414,5.268,1486,7.409,1487,5.319]],["title/modules/ChargeRelayServiceModule.html",[181,1.096,1488,4]],["body/modules/ChargeRelayServiceModule.html",[3,0.045,4,0.045,5,0.045,14,0.004,17,0.177,32,0.045,77,0.004,80,2.357,164,0.004,167,2.01,168,0.16,178,0.719,179,0.147,181,2.001,183,2.389,184,2.423,185,2.492,186,2.492,187,2.492,188,2.457,189,2.457,198,3.048,199,2.492,201,3.091,875,3.478,941,3.892,1428,5.013,1429,5.013,1486,7.767,1487,5.02,1488,7.942,1489,6.348,1490,6.348,1491,7.539,1492,6.76,1493,5.527,1494,5.527,1495,7.062]],["title/injectables/ChargeRelayServiceService.html",[294,0.727,1496,4.594]],["body/injectables/ChargeRelayServiceService.html",[3,0.048,4,0.048,5,0.048,7,0.357,14,0.004,15,0.707,17,0.142,32,0.048,71,0.974,77,0.004,164,0.004,168,0.203,171,1.333,175,0.835,177,1.154,178,0.759,179,0.155,294,1.27,296,2.157,875,4.397,1447,6.209,1448,8.244,1449,6.209,1450,6.209,1451,6.209,1487,5.328,1496,8.026]],["title/controllers/ChargeSmartWalletsServiceController.html",[165,1.135,1497,4.254]],["body/controllers/ChargeSmartWalletsServiceController.html",[3,0.047,4,0.047,5,0.047,7,0.352,14,0.004,15,0.582,17,0.139,32,0.047,71,0.959,77,0.004,164,0.004,165,1.965,167,1.709,168,0.201,171,1.321,172,6.716,173,1.949,174,6.03,175,0.822,177,1.137,178,0.748,179,0.153,180,4.663,762,3.289,763,2.96,875,4.357,1413,5.215,1414,5.215,1497,7.364]],["title/modules/ChargeSmartWalletsServiceModule.html",[181,1.096,1498,4]],["body/modules/ChargeSmartWalletsServiceModule.html",[3,0.043,4,0.043,5,0.043,14,0.004,17,0.181,32,0.043,77,0.004,80,2.232,164,0.004,167,1.944,168,0.152,178,0.681,179,0.139,181,1.953,183,2.263,184,2.295,185,2.36,186,2.36,187,2.36,188,2.327,189,2.327,198,2.947,199,2.36,201,2.99,762,3.04,763,3.008,802,3.866,804,3.686,875,3.294,941,3.686,1428,4.748,1429,4.748,1441,3.438,1497,7.581,1498,8.037,1499,6.013,1500,6.013,1501,7.439,1502,7.439,1503,4.246,1504,6.689,1505,5.235,1506,6.689]],["title/controllers/ConsensusApiController.html",[165,1.135,1507,4.254]],["body/controllers/ConsensusApiController.html",[3,0.035,4,0.035,5,0.035,7,0.262,13,0.626,14,0.005,15,0.655,17,0.168,32,0.035,35,3.163,71,1.154,77,0.003,107,0.988,164,0.003,165,1.215,167,1.273,168,0.209,171,1.095,173,2.344,175,0.989,177,1.368,178,0.557,179,0.114,223,0.998,234,1.107,238,1.44,239,1.358,256,1.095,322,2.567,348,2.046,428,3.176,449,3.341,629,3.954,630,2.363,1172,3.266,1175,3.594,1282,2.875,1303,6.024,1364,2.812,1445,4.554,1446,7.425,1470,2.752,1507,6.104,1508,7.671,1509,5.471,1510,6.886,1511,6.886,1512,7.357,1513,6.146,1514,4.918,1515,7.334,1516,4.554,1517,4.554,1518,7.048,1519,7.334,1520,4.918,1521,7.334,1522,4.918,1523,4.918,1524,7.334,1525,5.471,1526,6.146,1527,4.554,1528,5.471,1529,3.884,1530,3.884,1531,5.471,1532,5.471,1533,5.471,1534,5.471,1535,5.471,1536,5.471,1537,4.918]],["title/modules/ConsensusApiModule.html",[181,1.096,1419,3.797]],["body/modules/ConsensusApiModule.html",[3,0.041,4,0.041,5,0.041,14,0.005,17,0.188,32,0.041,77,0.003,80,2.134,107,0.764,164,0.003,167,1.889,168,0.145,178,0.651,179,0.133,181,1.913,183,2.164,184,2.194,185,2.257,186,2.257,187,2.257,188,3.104,189,2.225,198,2.865,199,2.257,201,2.289,241,3.525,249,2.134,322,1.781,348,3.037,677,3.615,678,4.59,679,2.81,681,3.615,682,3.615,683,3.361,685,3.615,1269,4.06,1272,4.2,1282,3.361,1419,7.355,1445,6.759,1446,6.983,1507,7.427,1508,5.323,1526,7.355,1529,4.54,1530,4.54,1538,5.749,1539,5.749,1540,5.764,1541,5.323,1542,5.323,1543,5.323,1544,5.749,1545,5.323,1546,5.749,1547,5.749,1548,5.323,1549,5.323]],["title/injectables/ConsensusApiService.html",[294,0.727,1526,3.797]],["body/injectables/ConsensusApiService.html",[3,0.034,4,0.034,5,0.034,7,0.252,13,0.562,14,0.005,15,0.784,17,0.173,32,0.034,71,1.136,77,0.003,107,1.039,164,0.003,168,0.213,171,1.067,175,1.018,177,1.346,178,0.536,179,0.11,223,0.96,234,1.446,238,1.514,239,1.428,249,1.757,256,1.053,294,1.016,296,1.522,298,2.059,322,2.613,449,4.273,483,3.008,497,1.831,679,2.313,693,5.05,724,3.056,725,3.056,726,3.056,1292,3.588,1364,4.471,1446,7.341,1470,2.647,1508,7.808,1510,7.241,1511,6.752,1512,7.241,1513,6.463,1517,4.381,1518,7.128,1526,5.308,1527,4.381,1540,3.737,1550,4.732,1551,4.732,1552,6.423,1553,5.264,1554,5.264,1555,5.264,1556,5.264,1557,5.264,1558,5.264,1559,4.381,1560,7.82,1561,5.264,1562,5.264]],["title/controllers/ConsensusController.html",[165,1.135,1563,4.254]],["body/controllers/ConsensusController.html",[3,0.036,4,0.036,5,0.036,7,0.271,13,0.632,14,0.005,15,0.666,17,0.17,32,0.036,35,3.207,71,1.17,77,0.003,107,1.005,164,0.003,165,1.257,167,1.318,168,0.212,171,1.12,173,2.377,175,1.003,177,1.387,178,0.576,179,0.118,223,1.033,234,1.146,238,1.465,239,1.382,249,1.89,256,1.133,415,3.121,428,3.287,449,3.419,629,4.008,1303,6.107,1364,2.91,1463,3.957,1470,3.774,1510,7.005,1511,7.005,1512,7.458,1513,6.252,1514,5.09,1517,4.713,1518,7.118,1523,5.09,1527,4.713,1537,5.09,1563,6.246,1564,5.663,1565,5.663,1566,7.504,1567,5.663,1568,7.504,1569,5.663,1570,7.504,1571,5.663,1572,7.504,1573,5.663,1574,7.005,1575,5.09,1576,5.663,1577,5.663,1578,5.663,1579,5.663,1580,5.663]],["title/modules/ConsensusModule.html",[181,1.096,1467,3.797]],["body/modules/ConsensusModule.html",[3,0.037,4,0.037,5,0.037,14,0.005,17,0.191,29,1.751,32,0.037,42,2.31,51,2.107,71,0.746,77,0.003,80,1.908,107,0.683,164,0.003,167,1.757,168,0.172,178,0.582,179,0.119,181,1.813,183,1.935,184,1.962,185,2.018,186,2.018,187,2.018,188,2.942,189,2.942,198,2.665,199,2.018,201,2.703,208,3.506,209,1.696,289,5.147,298,1.157,301,3.086,317,3.076,497,1.989,672,2.939,680,3.151,863,3.319,917,4.384,954,2.387,1065,3.969,1261,4.645,1315,5.361,1338,2.387,1384,2.348,1463,3.59,1467,7.279,1470,3.798,1529,4.059,1530,4.059,1541,4.759,1542,4.759,1543,4.759,1545,4.759,1563,7.039,1574,8.58,1575,5.14,1581,5.14,1582,5.14,1583,5.14,1584,5.718,1585,5.718,1586,5.14,1587,5.718,1588,4.475,1589,4.059,1590,5.718,1591,5.718,1592,4.059,1593,4.475,1594,4.248,1595,5.361,1596,3.897,1597,4.059]],["title/classes/CreateEthereumPaymentLinkDto.html",[179,0.107,1598,4.254]],["body/classes/CreateEthereumPaymentLinkDto.html",[3,0.035,4,0.035,5,0.035,7,0.262,8,1.164,13,0.637,14,0.004,15,0.827,17,0.104,32,0.035,77,0.003,164,0.003,168,0.227,173,2.613,175,1.102,179,0.153,224,3.639,229,1.99,335,3.906,446,5.128,449,2.497,595,5.957,788,3.704,870,4.807,883,6.137,1310,3.097,1364,4.255,1598,6.112,1599,8.97,1600,8.97,1601,4.928,1602,5.439,1603,6.481,1604,3.918,1605,5.439,1606,7.444,1607,4.928,1608,6.601,1609,4.928,1610,4.928,1611,4.928,1612,4.928,1613,4.928,1614,4.928,1615,4.928,1616,4.928,1617,5.809,1618,6.112]],["title/classes/CreateOperatorUserDto.html",[179,0.107,1619,4.254]],["body/classes/CreateOperatorUserDto.html",[3,0.041,4,0.041,5,0.041,7,0.303,8,1.28,13,0.625,14,0.004,15,0.819,17,0.12,32,0.041,77,0.003,107,1.061,164,0.003,168,0.224,169,3.389,173,2.563,175,1.081,179,0.168,229,2.302,446,5.159,449,2.888,788,3.975,1617,5.836,1619,6.722,1620,8.88,1621,7.339,1622,5.699,1623,6.602,1624,8.886,1625,8.886,1626,5.999,1627,6.34,1628,7.988,1629,5.699,1630,5.699,1631,5.699,1632,6.34]],["title/classes/CreateOperatorWalletDto.html",[179,0.107,1633,4.594]],["body/classes/CreateOperatorWalletDto.html",[3,0.044,4,0.044,5,0.044,7,0.328,8,1.343,13,0.595,14,0.004,15,0.762,16,3.791,17,0.13,32,0.044,77,0.004,164,0.004,168,0.219,169,3.3,173,2.441,175,1.03,179,0.177,224,4.045,226,6.273,229,2.486,446,4.73,449,3.119,870,5.343,1617,5.566,1620,8.646,1621,7.146,1633,7.618,1634,6.846,1635,5.203,1636,6.846,1637,6.846,1638,6.846,1639,6.846,1640,8.474]],["title/classes/CreatePaymentLinkDto.html",[179,0.107,592,3.483]],["body/classes/CreatePaymentLinkDto.html",[3,0.035,4,0.035,5,0.035,7,0.262,8,1.164,13,0.645,14,0.004,15,0.833,17,0.104,32,0.035,77,0.003,164,0.003,168,0.229,173,2.647,175,1.116,179,0.153,224,3.639,229,1.99,335,3.946,446,5.128,449,2.497,592,5.005,595,6.019,788,3.704,870,4.807,1310,3.097,1364,4.255,1601,4.928,1602,5.439,1603,6.481,1604,3.918,1605,5.439,1606,7.444,1607,4.928,1608,6.601,1609,4.928,1610,4.928,1611,4.928,1612,4.928,1613,4.928,1614,4.928,1615,6.601,1616,4.928,1617,6.057,1618,6.892,1641,10.082,1642,8.28,1643,5.482]],["title/classes/CreateProjectDto.html",[179,0.107,1644,3.797]],["body/classes/CreateProjectDto.html",[3,0.045,4,0.045,5,0.045,7,0.334,8,1.359,13,0.6,14,0.004,15,0.801,17,0.132,32,0.045,77,0.004,107,1.109,164,0.004,168,0.22,169,3.322,173,2.462,175,1.039,179,0.179,224,4.079,229,2.533,446,5.268,449,3.179,788,4.152,1644,6.37,1645,9.682,1646,6.272,1647,6.977,1648,6.977,1649,6.977]],["title/interfaces/CreateSecretDto.html",[0,0.763,391,4]],["body/interfaces/CreateSecretDto.html",[0,1.137,2,1.972,3,0.049,4,0.049,5,0.049,7,0.365,8,1.432,13,0.584,14,0.004,15,0.763,16,4.312,32,0.049,77,0.004,164,0.004,168,0.173,322,2.121,323,4.096,329,3.903,391,7.074,416,6.338,477,8.3,1650,7.615]],["title/classes/CreateUserDto.html",[179,0.107,831,4]],["body/classes/CreateUserDto.html",[3,0.045,4,0.045,5,0.045,7,0.333,8,1.357,13,0.599,14,0.004,15,0.801,17,0.132,32,0.045,77,0.004,107,1.107,164,0.004,168,0.22,169,3.319,173,2.459,175,1.037,179,0.178,229,2.527,446,5.104,449,3.171,586,5.241,831,6.7,1622,6.257,1623,6.889,1628,8.335,1629,6.257,1630,6.257,1631,6.257,1651,9.674]],["title/classes/CreateWebhookAddressesDto.html",[179,0.107,1652,3.628]],["body/classes/CreateWebhookAddressesDto.html",[3,0.046,4,0.046,5,0.046,7,0.341,8,1.375,13,0.561,14,0.004,15,0.772,17,0.135,32,0.046,38,3.396,77,0.004,164,0.004,168,0.213,173,2.301,175,0.971,179,0.181,229,2.583,446,4.811,449,3.241,870,5.036,1017,5.049,1060,3.782,1111,4.518,1405,5.589,1409,7.792,1652,6.159,1653,8.416,1654,7.113,1655,6.394,1656,7.113,1657,7.113]],["title/classes/CreateWebhookDto.html",[179,0.107,1658,3.483]],["body/classes/CreateWebhookDto.html",[3,0.043,4,0.043,5,0.043,7,0.324,8,1.333,13,0.592,14,0.004,15,0.795,17,0.16,32,0.043,42,3.399,77,0.004,164,0.004,168,0.218,173,2.428,175,1.024,179,0.175,229,2.457,329,3.584,446,4.923,449,3.083,1060,3.87,1062,3.333,1094,7.166,1104,5.296,1105,5.632,1605,6.014,1618,7.003,1653,8.611,1658,5.734,1659,5.632,1660,6.767,1661,6.767,1662,6.083,1663,6.767,1664,6.767,1665,6.767,1666,6.767,1667,6.767]],["title/controllers/DataLayerController.html",[165,1.135,1668,4.254]],["body/controllers/DataLayerController.html",[3,0.031,4,0.031,5,0.031,7,0.235,13,0.573,14,0.005,15,0.619,17,0.168,32,0.031,35,2.435,71,1.158,77,0.003,107,1.059,164,0.003,165,1.511,167,1.14,168,0.209,171,1.016,173,2.352,175,0.992,177,1.372,178,0.499,179,0.102,223,0.894,234,0.992,238,1.544,239,1.456,249,1.636,256,0.98,415,2.701,629,3.776,638,3.846,762,3.063,763,2.927,764,4.616,802,3.317,804,3.749,829,4.016,1000,5.992,1001,3.641,1011,4.96,1036,6.541,1111,3.283,1241,4.9,1384,2.793,1441,2.519,1505,7.367,1668,5.663,1669,4.901,1670,6.116,1671,7.814,1672,4.96,1673,4.901,1674,6.803,1675,4.901,1676,4.901,1677,6.116,1678,3.351,1679,5.324,1680,4.901,1681,3.836,1682,6.682,1683,6.803,1684,5.805,1685,4.901,1686,4.901,1687,6.803,1688,5.663,1689,5.324,1690,4.901,1691,4.901,1692,6.803,1693,4.901,1694,5.805,1695,4.406,1696,4.079,1697,3.641,1698,3.111,1699,4.901,1700,4.901,1701,4.901,1702,4.901,1703,4.901,1704,4.901,1705,4.901,1706,4.901]],["title/modules/DataLayerModule.html",[181,1.096,1501,3.797]],["body/modules/DataLayerModule.html",[3,0.028,4,0.028,5,0.028,14,0.005,17,0.195,29,1.53,32,0.028,42,1.785,51,1.628,71,0.577,77,0.003,80,1.475,107,0.882,164,0.003,167,1.471,168,0.144,178,0.45,179,0.092,181,1.584,183,1.495,184,1.516,185,1.559,186,1.559,187,1.559,188,2.569,189,1.537,198,2.231,199,1.559,201,2.643,208,2.935,209,1.31,241,3.485,249,1.475,289,4.31,295,5.829,298,0.894,301,2.766,317,2.377,341,4.2,347,2.322,497,1.537,677,2.497,678,4.175,679,1.941,681,3.575,682,3.575,683,3.323,685,3.575,762,2.111,763,2.9,764,3.18,770,4.892,802,3.879,804,4.07,863,2.565,917,3.671,954,1.844,1065,3.323,1241,3.671,1261,4.542,1315,4.489,1338,1.844,1384,1.814,1441,2.271,1463,1.875,1501,7.678,1503,2.805,1505,6.31,1589,3.136,1592,3.136,1593,3.458,1594,3.282,1595,4.489,1596,3.011,1597,3.136,1668,6.147,1694,6.594,1695,3.972,1707,3.972,1708,4.418,1709,3.972,1710,6.594,1711,5.458,1712,6.594,1713,5.829,1714,4.418,1715,4.418,1716,6.324,1717,4.418,1718,4.418,1719,5.264,1720,3.972,1721,3.678,1722,3.678,1723,5.685,1724,3.972,1725,3.458,1726,3.678,1727,4.489,1728,4.949,1729,3.282,1730,3.011,1731,4.418,1732,3.678,1733,3.678,1734,3.972,1735,3.972]],["title/injectables/DataLayerService.html",[294,0.727,1694,3.797]],["body/injectables/DataLayerService.html",[3,0.013,4,0.013,5,0.013,7,0.097,8,0.541,13,0.46,14,0.005,15,0.352,17,0.172,25,1.926,29,1.983,30,1.907,32,0.013,38,1.739,40,1.085,42,0.815,48,2.899,51,0.743,71,1.055,72,2.855,77,0.001,78,2.954,79,1.739,85,1.387,89,0.683,104,1.426,107,0.942,125,3.137,126,1.931,164,0.001,168,0.184,171,0.51,175,0.882,177,1.146,178,0.205,179,0.042,222,0.656,223,1.066,234,0.691,238,1.334,239,1.258,249,0.673,256,1.617,267,1.795,294,0.486,295,4.441,296,0.583,298,1.928,311,1.825,320,1.432,321,2.522,329,1.337,379,1.718,397,1.325,401,1.037,414,2.425,468,2.686,481,2.334,483,1.053,497,0.702,506,0.937,509,2.436,515,2.243,522,1.281,586,1.141,629,2.615,638,3.239,679,0.887,683,1.795,693,3.925,724,1.171,725,1.171,726,1.171,762,2.697,763,2.811,764,4.064,768,4.331,770,3.727,782,2.101,783,2.663,784,2.651,785,3.192,786,2.296,787,1.616,802,3.347,804,2.88,815,2.168,816,1.06,817,2.811,820,3.904,829,1.037,907,1.984,1000,4.506,1001,1.499,1011,3.317,1018,1.68,1036,5.626,1096,1.983,1111,1.648,1210,1.814,1241,3.034,1310,2.374,1337,1.432,1338,0.842,1364,1.755,1384,1.824,1441,2.283,1503,1.281,1505,6.461,1604,1.616,1621,3.3,1623,2.538,1670,3.476,1678,3.126,1679,1.579,1681,1.579,1682,5.047,1684,3.3,1694,2.538,1696,1.68,1697,1.499,1698,1.281,1710,5.024,1711,4.159,1712,5.024,1719,1.68,1720,1.814,1722,1.68,1725,1.579,1726,1.68,1727,1.432,1728,1.579,1729,1.499,1730,1.375,1736,2.018,1737,4.441,1738,4.441,1739,4.441,1740,4.441,1741,4.441,1742,4.441,1743,4.441,1744,4.441,1745,2.018,1746,4.441,1747,5.226,1748,3.993,1749,3.993,1750,3.416,1751,3.416,1752,2.018,1753,2.018,1754,2.018,1755,2.018,1756,2.018,1757,2.018,1758,2.018,1759,4.866,1760,2.018,1761,4.441,1762,2.018,1763,2.018,1764,2.018,1765,2.018,1766,2.018,1767,2.018,1768,2.018,1769,2.018,1770,2.018,1771,3.416,1772,2.018,1773,2.018,1774,2.018,1775,1.68,1776,1.814,1777,2.018,1778,2.018,1779,3.416,1780,2.018,1781,2.018,1782,2.018,1783,2.843,1784,1.814,1785,2.018,1786,2.018,1787,1.432,1788,1.281,1789,1.499,1790,1.499,1791,1.432,1792,2.018,1793,2.018,1794,1.814,1795,1.68,1796,2.018,1797,1.499,1798,2.018,1799,2.018,1800,2.018,1801,2.018,1802,2.018,1803,2.018,1804,2.018,1805,2.018,1806,2.018,1807,3.416,1808,4.441,1809,3.993,1810,1.814,1811,3.12,1812,2.018,1813,2.018,1814,2.018,1815,3.416,1816,5.024,1817,2.018,1818,2.018,1819,2.018,1820,3.416,1821,2.018,1822,2.018,1823,3.416,1824,2.018,1825,2.018,1826,3.416,1827,2.018,1828,2.018,1829,1.814,1830,1.814,1831,2.018,1832,2.018,1833,3.416,1834,2.018,1835,1.814,1836,3.416,1837,2.018,1838,1.579,1839,2.018,1840,5.226,1841,2.018,1842,2.018,1843,2.018,1844,2.018,1845,4.15,1846,2.843,1847,2.018,1848,1.755,1849,2.243,1850,1.931,1851,2.018,1852,1.499,1853,3.071,1854,2.018,1855,2.018,1856,2.673,1857,1.814,1858,1.814,1859,2.673,1860,4.441,1861,2.018,1862,1.814,1863,1.325,1864,1.68,1865,1.814,1866,2.018,1867,2.018,1868,2.018,1869,1.579,1870,2.018,1871,2.018,1872,1.814,1873,2.018,1874,2.018,1875,3.416,1876,2.018,1877,1.68,1878,2.018,1879,4.441,1880,1.814,1881,2.018,1882,2.018,1883,3.071,1884,1.814,1885,1.814,1886,2.018,1887,2.018,1888,2.018,1889,1.814,1890,2.018,1891,2.018,1892,1.814,1893,2.018,1894,1.814,1895,1.814,1896,2.018,1897,1.814,1898,2.018,1899,3.993,1900,3.476,1901,2.018,1902,1.499,1903,2.018,1904,2.018,1905,2.018]],["title/modules/DatabaseModule.html",[181,1.096,341,2.418]],["body/modules/DatabaseModule.html",[3,0.05,4,0.05,5,0.05,14,0.004,17,0.174,32,0.05,77,0.004,164,0.004,178,0.796,179,0.163,181,1.969,183,2.646,188,2.72,189,2.72,341,4.345,1906,7.819,1907,9.748,1908,7.819]],["title/interfaces/DecodeResult.html",[0,0.763,1909,3.797]],["body/interfaces/DecodeResult.html",[0,1.364,2,1.541,3,0.038,4,0.038,5,0.038,7,0.285,8,1.229,13,0.557,14,0.005,15,0.723,17,0.147,20,3.909,29,1.786,32,0.055,35,2.13,37,1.56,43,5.504,45,3.455,47,3.66,48,2.33,49,6.222,60,4.056,71,0.777,72,2.988,73,3.909,77,0.003,79,2.33,125,2.736,164,0.003,808,4.752,1156,4.954,1788,3.778,1909,6.406,1910,5.35,1911,7.432,1912,7.415,1913,7.752,1914,4.225,1915,5.474,1916,5.76,1917,5.35,1918,6.068,1919,5.35,1920,6.97,1921,5.35,1922,5.35,1923,5.35,1924,5.35,1925,5.35,1926,5.35,1927,4.954,1928,5.35,1929,5.35,1930,5.35]],["title/interfaces/Decoded.html",[0,0.763,49,3.051]],["body/interfaces/Decoded.html",[0,1.388,2,1.613,3,0.04,4,0.04,5,0.04,14,0.005,15,0.632,17,0.152,20,4.093,29,1.826,32,0.057,35,2.23,37,2.093,43,6.257,45,3.617,47,3.832,48,2.439,49,6.106,60,4.247,71,0.813,72,3.078,73,4.093,77,0.003,79,2.439,125,2.818,164,0.003,808,4.858,1156,5.187,1788,3.956,1909,5.934,1910,5.602,1911,7.26,1912,6.251,1913,7.924,1914,4.424,1915,5.595,1916,5.934,1917,5.602,1918,6.251,1919,5.602,1920,7.18,1921,5.602,1922,5.602,1923,5.602,1924,5.602,1925,5.602,1926,5.602,1927,5.187,1928,5.602,1929,5.602,1930,5.602]],["title/interfaces/DecodedEventResultWithArgNames.html",[0,0.763,36,3.628]],["body/interfaces/DecodedEventResultWithArgNames.html",[0,1.29,1,5.499,2,0.957,3,0.024,4,0.024,5,0.024,6,2.746,7,0.177,8,0.879,9,6.762,10,5.212,11,7.247,12,3.67,13,0.513,14,0.005,15,0.586,16,2.482,17,0.151,18,2.892,19,5.793,20,2.427,21,1.82,22,2.892,23,2.145,24,2.892,25,2.044,26,2.892,27,6.208,28,2.892,29,2.046,30,1.042,31,2.892,32,0.057,33,5.678,34,2.624,35,1.986,36,4.728,37,1.745,38,2.607,39,6.453,40,4.267,41,3.938,42,2.691,43,2.624,44,5.678,45,5.015,46,2.624,47,3.412,48,2.172,49,2.206,50,2.892,51,1.362,52,2.892,53,2.892,54,2.892,55,3.091,56,2.892,57,2.892,58,2.892,59,2.892,60,2.519,61,4.342,62,2.892,63,2.892,64,2.624,65,2.892,66,2.892,67,2.892,68,2.892,69,2.892,70,2.892,71,1.128,72,2.138,73,4.374,74,2.746,75,2.892,76,4.539,77,0.003,78,3.765,79,2.607,80,1.233,81,2.892,82,2.892,83,2.892,84,2.892,85,1.732,86,4.342,87,2.892,88,2.892,89,1.25,90,5.499,91,2.746,92,2.892,93,2.624,94,2.892,95,2.892,96,2.746,97,5.212,98,2.892,99,2.892,100,2.519,101,2.892,102,5.793,103,2.892,104,1.543,105,5.793,106,2.892,107,0.795,108,2.892,109,2.892,110,2.892,111,4.342,112,4.342,113,2.892,114,3.644,115,2.892,116,2.892,117,2.892,118,2.892,119,2.892,120,2.892,121,2.892,122,2.892,123,2.892,124,2.892,125,2.612,126,1.055,127,4.728,128,5.793,129,2.892,130,2.892,131,2.892,132,2.892,133,2.892,134,2.892,135,2.892,136,2.892,137,2.892,138,2.892,139,3.057,140,2.892,141,2.746,142,2.892,143,2.892,144,2.892,145,3.644,146,2.892,147,4.728,148,4.342,149,1.942,150,4.342,151,2.892,152,4.342,153,2.892,154,2.892,155,2.892,156,2.892,157,1.82,158,2.892,159,2.892,160,2.892,161,2.892,162,2.892,163,2.892,164,0.002]],["title/interfaces/DecodedEventResultWithoutArgNames.html",[0,0.763,41,3.628]],["body/interfaces/DecodedEventResultWithoutArgNames.html",[0,1.29,1,5.499,2,0.957,3,0.024,4,0.024,5,0.024,6,2.746,7,0.177,8,0.879,9,6.762,10,5.212,11,7.247,12,3.67,13,0.513,14,0.005,15,0.586,16,2.482,17,0.151,18,2.892,19,5.793,20,2.427,21,1.82,22,2.892,23,2.145,24,2.892,25,2.044,26,2.892,27,6.208,28,2.892,29,2.046,30,1.042,31,2.892,32,0.057,33,5.678,34,2.624,35,1.986,36,3.938,37,1.745,38,2.607,39,6.453,40,3.583,41,4.728,42,2.691,43,4.728,44,5.678,45,5.015,46,2.624,47,3.412,48,2.172,49,2.206,50,2.892,51,1.362,52,2.892,53,2.892,54,2.892,55,3.091,56,2.892,57,2.892,58,2.892,59,2.892,60,2.519,61,4.342,62,2.892,63,2.892,64,2.624,65,2.892,66,2.892,67,2.892,68,2.892,69,2.892,70,2.892,71,1.128,72,2.138,73,4.374,74,2.746,75,2.892,76,4.539,77,0.003,78,3.765,79,2.607,80,1.233,81,2.892,82,2.892,83,2.892,84,2.892,85,1.732,86,4.342,87,2.892,88,2.892,89,1.25,90,5.499,91,2.746,92,2.892,93,2.624,94,2.892,95,2.892,96,2.746,97,5.212,98,2.892,99,2.892,100,2.519,101,2.892,102,5.793,103,2.892,104,1.543,105,5.793,106,2.892,107,0.795,108,2.892,109,2.892,110,2.892,111,4.342,112,4.342,113,2.892,114,3.644,115,2.892,116,2.892,117,2.892,118,2.892,119,2.892,120,2.892,121,2.892,122,2.892,123,2.892,124,2.892,125,2.612,126,1.055,127,4.728,128,5.793,129,2.892,130,2.892,131,2.892,132,2.892,133,2.892,134,2.892,135,2.892,136,2.892,137,2.892,138,2.892,139,3.057,140,2.892,141,2.746,142,2.892,143,2.892,144,2.892,145,3.644,146,2.892,147,4.728,148,4.342,149,1.942,150,4.342,151,2.892,152,4.342,153,2.892,154,2.892,155,2.892,156,2.892,157,1.82,158,2.892,159,2.892,160,2.892,161,2.892,162,2.892,163,2.892,164,0.002]],["title/classes/DelegatedAmountsDto.html",[179,0.107,1518,3.797]],["body/classes/DelegatedAmountsDto.html",[3,0.046,4,0.046,5,0.046,7,0.346,8,1.389,13,0.567,14,0.004,15,0.776,17,0.137,32,0.046,38,3.432,77,0.004,164,0.004,168,0.214,173,2.325,175,0.981,179,0.183,229,2.628,449,4.467,870,5.691,1017,5.137,1463,4.004,1518,6.514,1655,6.505,1931,7.237,1932,8.479,1933,7.237,1934,7.237]],["title/injectables/ERC20EventsScannerService.html",[294,0.727,1935,4]],["body/injectables/ERC20EventsScannerService.html",[3,0.038,4,0.02,5,0.02,7,0.149,13,0.474,14,0.005,15,0.684,17,0.182,23,1.803,25,1.144,29,1.944,30,0.876,32,0.02,35,1.111,37,1.272,42,1.255,48,1.9,51,1.144,71,0.78,72,1.871,77,0.002,78,1.755,85,2.812,107,1.076,125,2.109,126,1.386,139,1.711,164,0.002,168,0.136,171,0.725,173,1.585,175,0.909,177,1.203,178,0.316,179,0.065,209,0.921,223,0.566,234,0.982,238,1.277,239,1.204,256,1.625,294,0.691,296,0.898,298,1.92,300,1.91,301,2.667,311,0.97,315,2.04,317,2.612,320,2.204,483,0.957,497,1.08,509,2.32,542,4.035,777,4.257,786,1.365,787,1.469,816,4.086,817,4.37,838,3.799,907,1.179,1035,3.794,1060,2.415,1062,4.256,1077,4.074,1078,4.074,1096,5.016,1111,1.499,1146,2.04,1155,2.307,1310,2.908,1337,2.204,1338,1.296,1384,2.454,1481,4.678,1482,2.307,1529,2.204,1530,3.446,1604,1.469,1787,2.204,1788,1.971,1811,2.898,1848,1.596,1849,2.04,1850,1.755,1916,6.036,1935,3.799,1936,4.074,1937,5.373,1938,4.998,1939,2.43,1940,5.74,1941,5.977,1942,4.441,1943,4.975,1944,4.041,1945,5.73,1946,5.626,1947,5.021,1948,4.798,1949,5.021,1950,8.124,1951,5.537,1952,5.336,1953,5.977,1954,6.472,1955,3.105,1956,3.105,1957,4.855,1958,3.105,1959,2.43,1960,6.036,1961,4.855,1962,4.243,1963,3.105,1964,5.289,1965,2.585,1966,7.193,1967,4.855,1968,3.105,1969,2.585,1970,2.791,1971,2.43,1972,2.43,1973,2.791,1974,2.43,1975,2.43,1976,2.43,1977,3.105,1978,3.105,1979,2.791,1980,3.105,1981,3.105,1982,2.585,1983,2.116,1984,3.105,1985,3.309,1986,2.307,1987,2.307,1988,2.43,1989,4.678,1990,2.585,1991,2.791,1992,2.204,1993,2.43,1994,2.43,1995,2.307,1996,2.307,1997,3.105,1998,3.105,1999,3.105,2000,2.307,2001,3.105,2002,3.105,2003,2.43,2004,3.105,2005,2.585,2006,2.585,2007,2.43,2008,3.309,2009,3.105,2010,3.105,2011,2.791,2012,2.791,2013,3.799,2014,2.791,2015,4.041,2016,2.791,2017,4.855,2018,3.105,2019,3.105,2020,3.105,2021,4.041,2022,2.585,2023,4.364,2024,2.585,2025,2.791,2026,2.116,2027,2.791,2028,3.105,2029,2.204,2030,2.307,2031,4.855,2032,3.105,2033,3.105,2034,4.855,2035,3.105,2036,3.105,2037,3.105,2038,3.105,2039,2.791,2040,3.105,2041,3.105,2042,3.105,2043,3.105,2044,3.105,2045,3.105,2046,3.105,2047,3.105,2048,3.105]],["title/classes/ERC20Transfer.html",[179,0.107,806,3.143]],["body/classes/ERC20Transfer.html",[2,1.22,3,0.03,4,0.03,5,0.03,7,0.226,8,1.049,13,0.565,14,0.005,15,0.692,17,0.145,29,1.877,32,0.03,35,2.369,37,1.734,71,0.999,77,0.003,85,1.471,89,1.594,107,1.135,126,1.89,164,0.003,168,0.174,171,0.988,175,1.042,177,1.403,179,0.098,229,1.711,238,1.578,239,1.488,291,3.072,298,1.834,311,2.591,509,1.777,762,2.553,763,2.722,764,3.847,765,5.267,768,5.372,769,3.951,770,4.995,771,5.431,772,5.987,773,4.567,774,4.201,775,4.201,776,4.201,777,5.074,778,3.094,779,3.5,780,6.609,782,5.376,783,3.485,784,3.951,785,3.847,786,2.908,787,3.132,788,2.961,789,4.235,791,2.99,792,4.235,793,3.094,794,3.211,795,2.99,796,3.094,797,2.99,798,3.094,799,2.421,800,4.917,802,3.247,803,3.094,804,3.647,805,3.094,806,4.705,807,2.812,808,3.647,809,2.897,811,3.344,813,2.229,814,3.5,815,2.99,816,3.478,817,3.56,818,2.99,819,3.211,820,2.897,822,3.344,823,3.921,824,3.344,825,4.235,826,3.5,1853,5.949,1877,3.921,2049,7.65,2050,3.921,2051,4.711,2052,4.711,2053,6.618,2054,4.235]],["title/interfaces/ERC721Transfer.html",[0,0.763,2055,3.797]],["body/interfaces/ERC721Transfer.html",[0,1.317,2,1.617,3,0.04,4,0.04,5,0.04,7,0.299,8,1.267,13,0.678,14,0.004,15,0.856,32,0.04,77,0.003,85,3.163,107,1.175,164,0.003,168,0.142,239,1.313,311,1.95,762,2.084,763,1.876,764,3.141,806,4.919,807,3.728,816,5.171,817,5.293,907,3.735,1384,3.284,1850,5.259,2055,6.555,2056,5.614]],["title/interfaces/EthereumBackendWallet.html",[0,0.763,949,4]],["body/interfaces/EthereumBackendWallet.html",[0,1.075,2,1.864,3,0.046,4,0.046,5,0.046,7,0.345,8,1.385,13,0.608,14,0.004,15,0.807,17,0.137,32,0.046,37,2.291,77,0.004,85,2.939,164,0.004,168,0.164,221,4.064,222,2.339,223,1.716,335,2.819,783,4.459,877,5.35,881,7.66,883,4.429,947,5.112,949,6.841,950,5.35,973,8.798]],["title/interfaces/EthereumPaymentAccount.html",[0,0.763,2057,4.254]],["body/interfaces/EthereumPaymentAccount.html",[0,1.102,2,1.912,3,0.047,4,0.047,5,0.047,7,0.353,8,1.406,13,0.574,14,0.004,15,0.812,17,0.14,32,0.047,37,2.325,77,0.004,164,0.004,168,0.168,221,4.108,222,2.399,223,1.618,224,4.337,335,2.89,595,4.408,883,4.541,950,5.485,1602,6.483,2057,7.386,2058,6.637]],["title/interfaces/EthereumPaymentLink.html",[0,0.763,2059,4.254]],["body/interfaces/EthereumPaymentLink.html",[0,0.847,2,1.469,3,0.036,4,0.036,5,0.036,7,0.272,8,1.191,13,0.676,14,0.004,15,0.859,17,0.108,32,0.036,37,1.969,77,0.003,85,2.63,164,0.003,168,0.129,221,3.638,222,1.843,223,1.783,224,3.94,291,4.163,335,2.221,595,3.387,786,3.94,788,4.011,883,3.489,950,4.215,1086,5.069,1310,3.353,1364,4.608,1602,5.89,1603,7.018,1604,4.243,1605,5.89,2013,7.018,2059,6.254,2060,5.1,2061,8.061,2062,8.061,2063,8.061]],["title/controllers/EthereumPaymentsController.html",[165,1.135,2064,4.254]],["body/controllers/EthereumPaymentsController.html",[3,0.03,4,0.03,5,0.03,7,0.226,13,0.565,14,0.005,15,0.807,17,0.172,32,0.03,71,1.183,77,0.003,107,1.044,157,2.32,164,0.003,165,1.046,167,1.096,168,0.212,171,0.988,173,2.404,175,1.014,177,1.403,178,0.479,179,0.098,223,0.859,224,3.983,234,0.953,238,1.521,239,1.435,256,0.942,322,1.312,335,3.644,349,1.711,428,2.735,436,4.396,578,5.431,581,5.431,592,6.477,595,2.812,629,3.712,630,2.034,632,2.229,640,3.5,641,3.344,659,3.921,661,3.921,883,5.725,945,3.5,946,7.06,1086,5.124,1110,3.344,1111,3.692,1180,2.274,2064,5.509,2065,4.711,2066,4.711,2067,5.987,2068,7.459,2069,5.987,2070,3.687,2071,4.711,2072,4.711,2073,3.687,2074,4.711,2075,4.711,2076,6.609,2077,4.711,2078,4.711,2079,3.687,2080,5.949,2081,4.711,2082,5.179,2083,4.235,2084,4.711,2085,4.711,2086,4.235,2087,5.509,2088,4.711,2089,4.917,2090,4.235,2091,3.687,2092,2.99,2093,2.534,2094,3.5,2095,4.235,2096,4.711,2097,4.711,2098,6.164,2099,4.235,2100,4.711,2101,4.711,2102,4.711,2103,4.711,2104,4.235,2105,4.711,2106,4.711,2107,4.711]],["title/modules/EthereumPaymentsModule.html",[181,1.096,1457,3.797]],["body/modules/EthereumPaymentsModule.html",[3,0.036,4,0.036,5,0.036,13,0.358,14,0.005,17,0.193,32,0.036,77,0.003,80,1.847,164,0.003,167,1.719,168,0.126,178,0.563,179,0.115,181,1.784,183,1.872,184,1.898,185,1.952,186,1.952,187,1.952,188,2.894,189,1.925,198,2.607,199,1.952,201,2.978,208,3.43,209,1.641,298,1.12,301,3.046,335,2.166,341,4.504,344,2.432,347,2.908,349,2.009,436,4.787,450,6.487,497,1.925,672,2.844,680,3.05,763,1.662,863,3.212,882,7.071,883,3.403,884,4.606,945,6.596,946,6.596,954,2.31,1059,6.042,1065,2.908,1070,3.928,1071,3.928,1270,3.128,1286,4.111,1287,4.331,1288,3.634,1289,3.634,1290,3.634,1384,2.272,1457,7.705,2064,6.925,2089,7.071,2090,4.974,2108,4.974,2109,5.534,2110,4.974,2111,5.534,2112,5.534,2113,7.39,2114,5.534,2115,4.974,2116,5.534,2117,5.534,2118,5.534]],["title/injectables/EthereumPaymentsService.html",[294,0.727,2089,3.797]],["body/injectables/EthereumPaymentsService.html",[3,0.017,4,0.017,5,0.017,7,0.13,8,0.691,13,0.518,14,0.005,15,0.751,16,1.213,17,0.173,25,2.308,29,1.965,30,1.767,32,0.017,51,0.999,71,1.172,77,0.002,79,1.707,89,0.918,107,0.957,126,1.96,164,0.002,168,0.209,171,0.651,175,1.019,177,1.24,178,0.276,179,0.057,209,0.804,222,0.881,223,1.252,224,3.222,234,0.883,238,1.395,239,1.316,245,2.346,246,1.722,256,1.603,276,1.925,291,2.539,294,0.62,296,0.784,298,1.92,301,2.644,311,1.956,335,3.607,401,1.394,436,4.03,468,3.961,497,0.944,505,1.495,506,1.259,509,2.221,522,1.722,578,3.882,581,3.882,582,4.447,595,3.74,596,2.258,641,1.925,690,2.531,734,2.258,763,0.815,783,1.236,786,2.403,874,3.882,882,4.654,883,5.667,884,2.258,909,2.015,941,1.495,942,2.015,943,2.015,945,5.726,946,6.92,947,1.925,949,2.123,950,4.063,951,1.668,1059,4.892,1070,1.925,1071,1.925,1086,3.091,1310,2.742,1315,3.882,1338,1.132,1356,4.552,1364,1.394,1598,6.415,1599,2.438,1600,2.438,1602,2.864,1862,2.438,2013,4.28,2015,3.63,2057,2.258,2059,5.215,2067,4.28,2069,4.28,2070,2.123,2073,2.123,2076,3.882,2079,2.123,2082,4.28,2089,3.24,2115,2.438,2119,2.712,2120,4.916,2121,4.916,2122,4.916,2123,4.916,2124,4.916,2125,4.916,2126,2.712,2127,4.916,2128,4.916,2129,4.361,2130,4.361,2131,2.712,2132,6.864,2133,2.712,2134,2.712,2135,2.438,2136,2.712,2137,2.712,2138,2.438,2139,2.712,2140,2.712,2141,2.712,2142,2.438,2143,6.103,2144,2.712,2145,5.738,2146,4.361,2147,2.712,2148,2.712,2149,2.438,2150,2.712,2151,2.438,2152,2.712,2153,2.438,2154,2.712,2155,2.438,2156,2.438,2157,2.712,2158,2.712,2159,2.712,2160,2.438,2161,2.438,2162,2.123,2163,2.712,2164,2.712,2165,2.712,2166,2.712,2167,3.92,2168,2.438,2169,2.438,2170,2.712,2171,3.92,2172,2.438,2173,2.123,2174,2.712,2175,3.92,2176,2.438,2177,2.438,2178,2.712,2179,2.712,2180,3.413,2181,2.438,2182,2.438,2183,2.712,2184,2.712,2185,2.712,2186,2.712,2187,2.712,2188,2.438,2189,2.712,2190,2.712,2191,2.712,2192,3.92,2193,2.712,2194,2.712,2195,2.438,2196,3.92,2197,2.438,2198,2.438,2199,2.712,2200,2.712,2201,2.712,2202,2.712,2203,2.712,2204,2.712,2205,2.258,2206,2.712,2207,2.712,2208,2.438,2209,2.712,2210,2.438,2211,2.438,2212,2.438,2213,2.712,2214,2.712,2215,2.712,2216,4.916,2217,2.438,2218,4.916,2219,2.438,2220,2.438,2221,5.632,2222,2.438,2223,2.438,2224,2.438,2225,2.438,2226,3.92,2227,2.438,2228,2.438,2229,2.438,2230,2.438,2231,2.438,2232,2.712]],["title/interfaces/EventData.html",[0,0.763,1811,3.051]],["body/interfaces/EventData.html",[0,1.272,2,1.504,3,0.037,4,0.037,5,0.037,7,0.278,8,1.209,13,0.653,14,0.004,15,0.859,16,3.414,32,0.055,37,2.372,55,3.542,77,0.003,85,3.013,164,0.003,168,0.132,311,1.814,542,5.403,785,2.922,786,4.131,787,4.448,1007,3.573,1044,3.688,1048,4.124,1051,4.124,1060,2.347,1096,3.372,1310,2.172,1604,2.749,1811,5.403,1848,2.985,1849,3.815,1850,3.284,1985,3.959,2026,6.407,2029,4.124,2030,4.316,2233,4.835,2234,4.835,2235,7.083,2236,6.169,2237,6.169,2238,7.083,2239,7.083,2240,4.316]],["title/interfaces/EventProps.html",[0,0.763,33,3.483]],["body/interfaces/EventProps.html",[0,1.289,1,4.94,2,0.954,3,0.024,4,0.024,5,0.024,6,2.739,7,0.176,8,0.877,9,6.756,10,5.204,11,6.756,12,3.665,13,0.538,14,0.005,15,0.703,16,2.477,17,0.15,18,2.885,19,5.786,20,2.421,21,1.816,22,2.885,23,2.14,24,2.885,25,2.04,26,2.885,27,6.201,28,2.885,29,2.045,30,1.04,31,2.885,32,0.057,33,5.884,34,5.248,35,2.836,36,3.931,37,1.451,38,2.603,39,5.908,40,3.577,41,3.931,42,2.687,43,2.617,44,5.672,45,5.011,46,2.617,47,3.405,48,2.167,49,2.201,50,2.885,51,1.358,52,2.885,53,2.885,54,2.885,55,3.087,56,2.885,57,2.885,58,2.885,59,2.885,60,2.513,61,4.333,62,2.885,63,2.885,64,2.617,65,2.885,66,2.885,67,2.885,68,2.885,69,2.885,70,2.885,71,1.127,72,2.134,73,4.368,74,2.739,75,2.885,76,4.532,77,0.003,78,3.759,79,2.603,80,1.23,81,2.885,82,2.885,83,2.885,84,2.885,85,1.729,86,4.333,87,2.885,88,2.885,89,1.247,90,5.492,91,2.739,92,2.885,93,2.617,94,2.885,95,2.885,96,2.739,97,5.204,98,2.885,99,2.885,100,2.513,101,2.885,102,5.786,103,2.885,104,1.539,105,5.786,106,2.885,107,0.794,108,2.885,109,2.885,110,2.885,111,4.333,112,4.333,113,2.885,114,3.637,115,2.885,116,2.885,117,2.885,118,2.885,119,2.885,120,2.885,121,2.885,122,2.885,123,2.885,124,2.885,125,2.608,126,1.053,127,4.721,128,5.786,129,2.885,130,2.885,131,2.885,132,2.885,133,2.885,134,2.885,135,2.885,136,2.885,137,2.885,138,2.885,139,3.052,140,2.885,141,2.739,142,2.885,143,2.885,144,2.885,145,3.637,146,2.885,147,4.721,148,4.333,149,1.937,150,4.333,151,2.885,152,4.333,153,2.885,154,2.885,155,2.885,156,2.885,157,1.816,158,2.885,159,2.885,160,2.885,161,2.885,162,2.885,163,2.885,164,0.002]],["title/modules/EventsScannerModule.html",[181,1.096,1478,3.797]],["body/modules/EventsScannerModule.html",[3,0.032,4,0.032,5,0.032,14,0.005,17,0.195,25,2.516,29,1.02,32,0.032,42,1.99,51,1.815,71,0.643,77,0.003,80,1.644,107,0.815,164,0.003,168,0.112,178,0.501,179,0.103,181,1.68,183,1.667,184,1.69,185,1.738,186,1.738,187,1.738,188,2.726,189,1.714,198,2.409,199,1.738,201,2.804,208,2.287,209,1.461,241,2.715,249,1.644,298,0.997,301,2.902,317,2.65,341,4.35,347,2.589,497,1.714,677,2.784,678,3.859,679,2.165,681,2.784,682,2.784,683,2.589,685,2.784,863,2.859,1052,6.265,1057,6.038,1060,1.99,1062,4.642,1064,3.855,1066,5.343,1067,3.855,1068,3.855,1214,4.653,1261,4.199,1273,3.855,1274,3.855,1338,2.056,1384,2.023,1463,2.091,1478,7.659,1480,4.1,1481,6.132,1482,5.072,1529,3.497,1530,3.497,1541,4.1,1542,4.1,1543,4.1,1544,4.428,1545,4.1,1546,4.428,1547,4.428,1589,3.497,1592,3.497,1593,3.855,1594,3.66,1595,3.497,1596,3.357,1597,3.497,1935,7.195,1936,3.357,1937,4.428,1938,4.653,1952,6.038,1993,5.343,1996,3.66,2241,4.428,2242,4.428,2243,4.926,2244,7.195,2245,4.428,2246,4.428,2247,4.428,2248,6.827,2249,4.428,2250,4.428,2251,6.137,2252,4.428,2253,4.428,2254,4.926]],["title/injectables/EventsScannerService.html",[294,0.727,1940,4]],["body/injectables/EventsScannerService.html",[3,0.03,4,0.03,5,0.03,7,0.221,13,0.532,14,0.005,17,0.176,25,3.485,29,1.568,32,0.03,34,3.281,37,1.711,48,1.809,51,1.703,71,0.852,72,1.781,77,0.003,85,3.108,107,0.983,125,1.631,126,1.32,164,0.003,168,0.187,171,0.975,173,1.226,175,1.008,177,1.343,178,0.47,179,0.096,209,1.37,223,0.843,234,1.321,238,1.432,239,1.351,256,0.924,294,0.929,296,1.336,298,1.973,300,2.842,301,3.09,320,3.281,483,1.424,509,2.033,777,4.395,838,6.439,907,1.754,1060,3.324,1062,3.729,1077,5.16,1078,5.16,1146,3.035,1338,1.929,1482,6.112,1936,5.607,1939,3.617,1940,5.11,1942,5.625,1943,6.302,1944,6.302,1945,6.445,1946,6.302,1947,6.112,1948,5.84,1949,6.112,1959,3.617,1960,7.145,1962,6.395,1964,7.05,1965,3.847,1966,8.005,1969,3.847,1971,3.617,1972,3.617,1974,3.617,1975,3.617,1976,3.617,1992,3.281,1994,5.11,1995,3.433,2003,3.617,2005,3.847,2006,3.847,2007,3.617,2008,3.15,2255,6.848,2256,4.621,2257,4.621,2258,6.529,2259,4.621,2260,4.621,2261,4.154,2262,4.154,2263,4.621,2264,4.621,2265,4.621]],["title/controllers/ExplorerApiController.html",[165,1.135,2266,4.254]],["body/controllers/ExplorerApiController.html",[3,0.043,4,0.043,5,0.043,7,0.323,14,0.005,17,0.174,32,0.043,77,0.004,164,0.004,165,1.866,167,1.571,168,0.208,171,1.254,173,2.228,175,0.94,177,1.3,178,0.687,179,0.141,286,3.395,322,2.666,348,3.142,349,2.451,384,3.548,630,4.395,632,3.194,799,4.317,1172,4.03,1175,4.434,1178,4.601,1180,3.258,1182,4.152,1437,5.619,1438,7.49,2093,3.631,2266,6.993,2267,7.613,2268,5.015,2269,5.619,2270,5.619,2271,4.285,2272,4.601,2273,6.751,2274,6.751]],["title/injectables/ExplorerApiInterceptor.html",[294,0.727,2270,4.254]],["body/injectables/ExplorerApiInterceptor.html",[3,0.032,4,0.032,5,0.032,7,0.24,13,0.511,14,0.005,17,0.175,29,2.028,30,1.413,32,0.032,71,1.032,77,0.003,79,1.961,107,0.944,126,1.431,164,0.003,168,0.194,171,1.031,175,0.885,177,1.069,178,0.51,179,0.104,209,1.486,232,2.633,234,1.398,238,1.376,239,1.298,245,3.716,256,1.788,261,3.415,267,3.631,294,0.983,296,1.449,298,1.87,301,3.249,321,2.418,322,2.374,481,3.631,483,2.129,505,2.761,506,2.326,509,1.855,901,3.291,902,5.517,917,2.909,954,2.091,955,3.181,957,2.991,993,4.385,995,3.291,996,3.291,997,3.291,1186,4.171,1187,6.581,1188,6.581,1193,4.171,1194,5.653,1198,5.337,1199,4.171,1205,5.75,1208,4.171,1211,5.612,1212,5.132,1213,3.181,1216,5.612,1217,4.504,1218,3.291,1219,4.171,1220,3.722,1224,3.921,1225,4.171,1226,4.904,1227,3.722,1248,2.52,1249,2.991,1252,5.75,1253,4.171,1261,3.081,1438,6.669,2267,7.093,2270,5.75,2275,5.011,2276,5.011,2277,5.011,2278,4.504,2279,4.504,2280,4.504,2281,4.504,2282,5.011,2283,4.504,2284,4.504,2285,5.011]],["title/modules/ExplorerApiModule.html",[181,1.096,1420,3.797]],["body/modules/ExplorerApiModule.html",[3,0.043,4,0.043,5,0.043,14,0.005,17,0.19,32,0.043,77,0.004,80,2.243,164,0.004,167,1.949,168,0.153,178,0.684,179,0.14,181,1.957,183,2.274,184,2.305,185,2.371,186,2.371,187,2.371,188,2.338,189,2.338,198,2.956,199,2.371,201,2.998,208,3.119,209,1.993,322,1.872,336,5.525,344,2.953,348,3.413,349,2.44,672,3.453,680,3.703,954,2.805,1065,4.403,1269,4.266,1270,3.798,1271,5.259,1272,4.413,1420,7.448,1437,6.973,1438,6.556,2266,7.597,2267,5.593,2286,6.72,2287,6.72]],["title/interfaces/FourBytesReponseEntry.html",[0,0.763,2288,4.254]],["body/interfaces/FourBytesReponseEntry.html",[0,1.362,2,0.903,3,0.022,4,0.022,5,0.022,7,0.167,8,0.841,13,0.548,14,0.005,15,0.807,17,0.155,20,2.291,29,2.04,30,0.984,32,0.056,33,4.899,35,2.768,39,2.476,44,2.377,45,5.192,46,3.77,47,3.266,48,2.079,49,3.839,71,1.242,72,2.047,73,2.291,77,0.002,78,4.063,79,1.365,85,2.415,93,2.476,104,1.456,125,1.874,126,1.836,145,5.735,147,4.564,164,0.004,238,0.607,267,4.065,270,2.73,298,1.565,315,2.291,317,1.876,401,3.694,483,2.215,509,1.726,515,4.223,808,4.263,813,3.043,1134,2.903,1195,2.73,1689,2.73,1909,5.34,1911,2.476,1912,6.053,1914,3.77,1915,4.91,1918,2.73,2288,6.782,2289,2.903,2290,6.461,2291,6.461,2292,6.461,2293,6.461,2294,4.773,2295,3.135,2296,3.135,2297,3.135,2298,3.135,2299,3.135,2300,3.135,2301,2.903,2302,3.135,2303,3.135,2304,3.135,2305,3.135,2306,6.782,2307,7.051,2308,5.352,2309,3.135,2310,3.135,2311,3.135,2312,2.73,2313,3.135,2314,7.615,2315,4.773,2316,4.773,2317,3.135,2318,3.135,2319,3.135,2320,3.135,2321,3.135,2322,3.135,2323,4.773,2324,2.73,2325,4.773,2326,3.135,2327,3.135,2328,3.135,2329,3.135,2330,3.135,2331,4.773,2332,3.135,2333,3.135,2334,3.135,2335,3.135,2336,5.78,2337,5.78,2338,4.773,2339,3.135,2340,3.135,2341,3.135,2342,3.135,2343,3.135,2344,3.135,2345,3.135,2346,3.135,2347,3.135,2348,3.135,2349,4.773,2350,3.135,2351,5.78,2352,3.135,2353,3.135,2354,3.135,2355,3.135,2356,3.135,2357,5.78,2358,3.135,2359,3.135]],["title/interfaces/FourBytesResponse.html",[0,0.763,2301,4.254]],["body/interfaces/FourBytesResponse.html",[0,1.368,2,0.92,3,0.023,4,0.023,5,0.023,7,0.17,8,0.853,13,0.469,14,0.005,15,0.777,17,0.156,20,2.333,29,2.046,30,1.002,32,0.056,33,4.945,35,2.791,39,2.521,44,2.421,45,5.219,46,3.822,47,3.311,48,2.107,49,3.881,71,1.247,72,2.075,73,2.333,77,0.002,78,4.101,79,1.39,85,2.434,93,2.521,104,1.483,125,1.9,126,1.857,145,5.767,147,4.615,164,0.004,238,0.618,267,4.098,270,2.78,298,1.578,315,2.333,317,1.911,401,1.825,483,2.236,509,1.746,515,4.27,808,4.297,813,3.076,1134,2.956,1195,5.678,1689,5.678,1909,5.39,1911,2.521,1912,6.102,1914,3.822,1915,4.949,1918,2.78,2288,7.095,2289,2.956,2290,3.193,2291,3.193,2292,3.193,2293,3.193,2294,4.84,2295,3.193,2296,3.193,2297,3.193,2298,3.193,2299,3.193,2300,3.193,2301,4.481,2302,6.522,2303,3.193,2304,3.193,2305,3.193,2306,6.83,2307,7.095,2308,5.412,2309,3.193,2310,3.193,2311,3.193,2312,2.78,2313,3.193,2314,7.663,2315,4.84,2316,4.84,2317,3.193,2318,3.193,2319,3.193,2320,3.193,2321,3.193,2322,3.193,2323,4.84,2324,2.78,2325,4.84,2326,3.193,2327,3.193,2328,3.193,2329,3.193,2330,3.193,2331,4.84,2332,3.193,2333,3.193,2334,3.193,2335,3.193,2336,5.844,2337,5.844,2338,4.84,2339,3.193,2340,3.193,2341,3.193,2342,3.193,2343,3.193,2344,3.193,2345,3.193,2346,3.193,2347,3.193,2348,3.193,2349,4.84,2350,3.193,2351,5.844,2352,3.193,2353,3.193,2354,3.193,2355,3.193,2356,3.193,2357,5.844,2358,3.193,2359,3.193]],["title/classes/FuseLegacySDK.html",[179,0.107,2360,4]],["body/classes/FuseLegacySDK.html",[0,0.296,3,0.013,4,0.013,5,0.013,7,0.095,8,0.533,12,4.193,13,0.565,14,0.005,15,0.775,17,0.134,21,0.976,23,3.357,29,2.048,30,2.265,32,0.013,35,2.723,37,0.519,42,1.358,45,1.15,47,1.218,48,3.212,51,1.239,71,0.993,72,2.583,77,0.001,79,1.715,89,2.777,107,0.842,114,2.209,125,3,126,0.566,127,1.406,139,2.415,164,0.001,175,1.011,179,0.07,223,1.146,229,0.719,234,0.681,238,0.345,239,0.325,256,1.972,265,2.632,267,2.714,290,1.257,291,0.919,298,1.427,311,2.695,313,3.647,321,0.956,355,4.129,384,3.304,421,4.526,483,1.782,509,2.348,542,2.007,629,1.504,683,1.041,723,2.292,762,1.723,763,1.01,783,0.902,802,0.841,813,0.937,818,1.257,829,1.018,861,2.007,880,2.919,907,1.663,968,2.632,992,3.255,1007,3.557,1020,1.472,1039,2.068,1143,3.647,1144,1.55,1148,1.649,1213,2.135,1288,3.391,1289,1.301,1290,1.301,1305,1.257,1310,1.638,1317,2.135,1364,1.728,1384,0.813,1441,1.018,1487,3.111,1604,0.937,1635,1.12,1678,3.62,1789,1.472,1790,1.472,1791,1.406,1797,1.472,1838,1.55,1848,1.018,1852,4.296,1916,2.498,1938,3.519,2008,1.35,2143,1.649,2205,1.649,2236,2.986,2237,2.986,2360,2.632,2361,1.649,2362,3.939,2363,3.939,2364,3.939,2365,3.939,2366,3.939,2367,3.939,2368,3.939,2369,3.939,2370,3.939,2371,3.939,2372,3.939,2373,4.642,2374,4.642,2375,3.519,2376,3.11,2377,1.981,2378,3.363,2379,3.939,2380,1.981,2381,1.981,2382,1.981,2383,1.981,2384,1.981,2385,1.981,2386,1.981,2387,1.981,2388,1.981,2389,3.023,2390,1.981,2391,1.981,2392,2.878,2393,1.981,2394,1.981,2395,1.981,2396,3.647,2397,1.981,2398,1.981,2399,1.981,2400,1.981,2401,1.649,2402,3.023,2403,4.041,2404,3.023,2405,4.642,2406,1.649,2407,1.781,2408,1.649,2409,2.799,2410,1.781,2411,1.781,2412,1.781,2413,1.781,2414,3.023,2415,1.55,2416,1.781,2417,1.781,2418,1.781,2419,1.406,2420,1.406,2421,1.406,2422,1.55,2423,1.781,2424,1.781,2425,1.781,2426,1.781,2427,1.781,2428,3.023,2429,1.781,2430,1.781,2431,1.781,2432,1.781,2433,1.781,2434,1.649,2435,1.781,2436,1.649,2437,1.781,2438,2.632,2439,1.781,2440,1.781,2441,1.781,2442,1.781,2443,1.781,2444,1.781,2445,1.649,2446,1.781,2447,4.298,2448,3.023,2449,3.939,2450,1.781,2451,1.781,2452,5.199,2453,1.781,2454,1.781,2455,1.781,2456,3.023,2457,3.023,2458,1.781,2459,1.781,2460,5.199,2461,1.781,2462,2.799,2463,1.781,2464,1.781,2465,5.651,2466,5.651,2467,1.781,2468,1.781,2469,1.781,2470,1.781,2471,1.781,2472,1.781,2473,1.781,2474,1.781,2475,1.781,2476,1.781,2477,1.781,2478,1.781,2479,1.781,2480,1.781,2481,1.781,2482,1.781,2483,3.023,2484,1.781,2485,1.781,2486,1.781,2487,1.781,2488,1.781,2489,1.781,2490,1.781,2491,3.939,2492,1.781,2493,1.781,2494,1.781,2495,1.781,2496,1.781,2497,1.781,2498,1.781,2499,1.406,2500,1.781,2501,1.781,2502,1.781,2503,1.649,2504,1.781,2505,1.781,2506,1.781,2507,3.023,2508,1.781,2509,1.781,2510,3.023,2511,1.781,2512,1.781,2513,1.781,2514,4.298,2515,1.781,2516,1.781,2517,1.781,2518,1.781,2519,1.781,2520,3.023,2521,3.939,2522,1.781,2523,3.939,2524,1.781,2525,1.781,2526,1.781,2527,4.642,2528,1.781,2529,3.255,2530,3.255,2531,3.023,2532,3.023,2533,3.023,2534,3.023,2535,3.023,2536,3.023,2537,1.781,2538,3.939,2539,3.023,2540,1.649,2541,1.781,2542,2.799,2543,3.023,2544,1.781,2545,1.781,2546,1.781,2547,3.023,2548,2.799,2549,1.781,2550,1.781,2551,1.781,2552,1.55,2553,1.781,2554,1.781,2555,1.781,2556,1.781,2557,1.781,2558,1.781,2559,1.781,2560,1.781,2561,1.781,2562,1.781]],["title/injectables/FuseLiquidStakingService.html",[294,0.727,2563,3.797]],["body/injectables/FuseLiquidStakingService.html",[0,0.484,3,0.021,4,0.021,5,0.021,7,0.155,8,0.796,13,0.397,14,0.005,15,0.487,17,0.173,25,2.549,29,2.042,30,2.406,32,0.021,48,1.966,51,1.195,71,1.207,72,1.936,77,0.002,89,1.699,104,1.354,107,0.734,125,2.793,126,1.755,164,0.002,168,0.217,171,0.75,175,1.06,177,1.158,178,0.33,179,0.068,209,0.962,223,1.443,232,1.705,234,1.016,238,1.07,239,1.009,256,1.584,294,0.714,296,0.938,298,1.772,301,2.832,311,1.013,317,1.745,509,2.351,690,2.915,813,1.535,878,2.701,907,2.333,1035,2.059,1310,1.878,1338,1.354,1463,4.062,1470,4.152,1604,2.376,1711,5.077,1730,2.211,1787,2.302,1788,2.059,1848,2.581,1915,2.059,1983,2.211,2000,2.41,2162,2.538,2499,3.565,2563,3.731,2564,8.603,2565,7.966,2566,7.966,2567,3.243,2568,4.131,2569,3.901,2570,5.199,2571,4.544,2572,3.567,2573,6.145,2574,6.145,2575,6.145,2576,6.145,2577,7.484,2578,6.145,2579,2.7,2580,5.14,2581,5.022,2582,3.243,2583,2.916,2584,4.255,2585,3.243,2586,3.243,2587,3.243,2588,2.916,2589,3.911,2590,3.243,2591,5.022,2592,3.243,2593,3.243,2594,3.243,2595,3.243,2596,3.243,2597,3.243,2598,3.243,2599,3.243,2600,3.243,2601,3.243,2602,3.243,2603,3.243,2604,3.243,2605,6.145,2606,3.243,2607,4.514,2608,2.916,2609,5.022,2610,3.243,2611,5.022,2612,3.243,2613,2.7,2614,2.7,2615,3.243,2616,1.936,2617,3.188,2618,2.538,2619,3.243,2620,3.243,2621,3.243,2622,3.243,2623,3.243,2624,3.243,2625,3.243,2626,3.243,2627,2.538,2628,3.243,2629,2.916,2630,3.423,2631,3.423,2632,5.022,2633,5.022,2634,6.23,2635,3.243,2636,3.243,2637,3.243,2638,3.243,2639,3.243,2640,3.243,2641,4.188,2642,3.243,2643,3.243,2644,6.919,2645,5.022,2646,3.298,2647,3.298,2648,2.916,2649,3.243,2650,3.243,2651,3.243,2652,3.243,2653,3.243,2654,3.243,2655,6.145,2656,3.243,2657,3.243,2658,3.243,2659,3.243,2660,3.243,2661,3.243,2662,3.243,2663,3.243,2664,3.243,2665,2.916,2666,3.243,2667,3.243,2668,2.916,2669,2.916,2670,3.243,2671,3.243,2672,2.916]],["title/injectables/GasService.html",[294,0.727,1952,3.357]],["body/injectables/GasService.html",[3,0.04,4,0.04,5,0.04,7,0.296,8,1.259,13,0.399,14,0.005,15,0.695,17,0.151,25,3.414,29,2.032,30,2.24,32,0.04,51,2.277,71,0.806,77,0.003,89,2.091,107,0.738,126,1.764,164,0.003,171,1.186,175,0.889,177,0.956,178,0.629,179,0.129,223,1.601,238,1.075,239,1.014,256,1.756,294,1.13,296,1.787,298,1.777,311,1.929,509,1.659,813,4.536,1338,2.579,1948,6.232,1949,6.884,1952,5.217,2235,6.217,2236,5.414,2237,5.414,2238,6.217,2239,6.217,2673,6.179,2674,8.779,2675,6.179,2676,6.179,2677,6.612,2678,7.943,2679,6.179,2680,5.554,2681,6.179,2682,5.554,2683,6.179,2684,6.179,2685,6.179,2686,6.179,2687,6.179,2688,6.179,2689,6.179]],["title/injectables/GraphQLService.html",[294,0.727,2690,3.797]],["body/injectables/GraphQLService.html",[3,0.042,4,0.042,5,0.042,7,0.317,13,0.428,14,0.005,17,0.172,29,1.37,32,0.042,71,0.863,77,0.003,89,2.238,107,0.991,126,1.888,164,0.003,171,1.238,175,0.928,177,1.023,178,0.673,179,0.138,223,1.206,234,1.678,238,1.444,239,1.362,255,3.948,256,1.323,294,1.18,296,1.912,298,1.834,481,4.993,509,1.775,901,4.343,902,5.961,954,2.76,956,4.198,957,3.948,1207,5.176,1218,4.343,2422,7.436,2690,6.161,2691,6.613,2692,9.061,2693,6.613,2694,6.613,2695,6.613,2696,8.294,2697,6.613,2698,5.504,2699,5.945,2700,5.504]],["title/injectables/GraphService.html",[294,0.727,2701,3.797]],["body/injectables/GraphService.html",[3,0.036,4,0.036,5,0.036,7,0.271,8,1.188,13,0.579,14,0.005,17,0.16,30,2.371,32,0.036,71,1.097,77,0.003,89,1.912,107,0.675,164,0.003,168,0.225,171,1.119,175,1.093,177,1.301,178,0.575,179,0.118,209,1.676,223,1.831,234,1.517,238,0.984,239,0.928,256,2.028,294,1.066,296,1.634,300,3.476,301,3.285,1248,2.842,1463,4.211,2701,5.568,2702,5.652,2703,7.558,2704,7.558,2705,8.408,2706,8.049,2707,8.049,2708,8.954,2709,7.494,2710,5.652,2711,10.138,2712,5.652,2713,5.652,2714,5.652,2715,5.652,2716,4.704,2717,7.494,2718,5.652,2719,7.494,2720,5.652,2721,7.494,2722,5.652]],["title/controllers/GraphqlAPIController.html",[165,1.135,2723,4.254]],["body/controllers/GraphqlAPIController.html",[3,0.04,4,0.04,5,0.04,7,0.3,13,0.518,14,0.005,15,0.779,17,0.168,32,0.04,71,1.045,77,0.003,107,0.957,157,3.082,164,0.003,165,1.39,167,1.456,168,0.201,171,1.196,173,2.124,175,0.896,177,1.239,178,0.637,179,0.13,223,1.141,234,1.267,238,1.394,239,1.315,256,1.252,322,2.594,348,2.995,349,2.272,384,3.289,428,3.633,632,2.961,907,3.535,1172,3.736,1180,3.02,1182,3.849,1282,3.289,1443,5.626,1444,7.287,2093,3.366,2271,3.973,2272,4.265,2723,6.666,2724,7.352,2725,6.258,2726,7.352,2727,7.352,2728,5.209,2729,8.009,2730,5.209,2731,5.626,2732,8.009,2733,5.626,2734,6.562,2735,6.258,2736,6.666,2737,6.258,2738,6.258]],["title/modules/GraphqlAPIModule.html",[181,1.096,1421,3.797]],["body/modules/GraphqlAPIModule.html",[3,0.04,4,0.04,5,0.04,14,0.005,17,0.187,32,0.04,77,0.003,80,2.102,107,0.752,164,0.003,167,1.871,168,0.201,178,0.641,179,0.131,181,1.9,183,2.131,184,2.161,185,2.222,186,2.222,187,2.222,188,3.082,189,2.191,198,2.837,199,2.222,201,2.878,241,3.471,249,2.102,322,2.468,336,5.435,344,2.768,348,2.355,349,2.287,677,3.56,678,4.546,679,2.768,681,3.56,682,3.56,683,3.31,685,3.56,1269,3.998,1270,3.56,1272,4.137,1282,3.31,1421,7.539,1444,6.933,1540,5.709,1548,5.243,1549,5.243,2723,7.374,2724,7.374,2734,7.326,2739,5.662,2740,5.662,2741,6.299]],["title/injectables/GraphqlAPIService.html",[294,0.727,2734,3.797]],["body/injectables/GraphqlAPIService.html",[3,0.039,4,0.039,5,0.039,7,0.291,13,0.563,14,0.005,15,0.773,17,0.175,32,0.039,71,1.026,77,0.003,107,1.04,164,0.003,168,0.209,171,1.173,175,0.974,177,1.216,178,0.618,179,0.127,223,1.108,234,1.59,238,1.516,239,1.43,249,2.028,256,1.215,294,1.118,296,1.757,298,1.977,322,2.565,483,2.838,497,2.114,679,2.67,693,5.345,724,3.527,725,3.527,726,3.527,907,3.708,1292,4.141,1444,7.207,1540,4.313,1550,5.462,1552,7.063,1559,5.057,1560,7.063,2724,7.664,2726,7.249,2727,7.249,2728,5.057,2731,5.462,2734,5.838,2742,6.076,2743,5.462,2744,6.076,2745,6.076,2746,6.076]],["title/controllers/GraphqlController.html",[165,1.135,2747,4.254]],["body/controllers/GraphqlController.html",[3,0.038,4,0.038,5,0.038,7,0.285,13,0.502,14,0.005,15,0.769,17,0.185,32,0.038,71,1.193,77,0.003,107,0.927,164,0.003,165,1.324,167,1.388,168,0.196,171,1.159,173,2.059,175,0.869,177,1.201,178,0.607,179,0.124,209,1.769,223,1.416,234,1.207,238,1.351,239,1.275,249,1.99,256,1.553,301,2.961,415,3.287,428,3.462,815,5.479,907,3.277,1463,3.664,1470,3.904,2173,4.667,2690,6.413,2716,4.964,2726,7.891,2727,7.891,2728,4.964,2747,6.462,2748,5.964,2749,7.763,2750,5.964,2751,5.964,2752,7.763,2753,5.964,2754,5.361,2755,6.979,2756,5.964,2757,5.964,2758,5.964,2759,5.964,2760,5.964,2761,5.964,2762,5.964,2763,5.964,2764,5.964,2765,5.964]],["title/modules/GraphqlModule.html",[181,1.096,1468,3.797]],["body/modules/GraphqlModule.html",[3,0.044,4,0.044,5,0.044,14,0.004,17,0.191,32,0.044,77,0.004,80,2.29,164,0.004,167,1.975,168,0.209,178,0.698,179,0.143,181,1.976,183,2.322,184,2.354,185,2.421,186,2.421,187,2.421,188,3.205,189,2.387,198,2.994,199,2.421,201,2.456,208,3.185,209,2.035,672,3.527,680,3.782,954,2.864,1065,4.46,1463,3.911,1468,7.487,1588,5.37,2690,7.487,2747,7.669,2754,6.169,2766,6.169,2767,6.169,2768,6.862,2769,6.862]],["title/interfaces/ISmartWalletUser.html",[0,0.763,2770,3.483]],["body/interfaces/ISmartWalletUser.html",[0,1.078,2,1.869,3,0.046,4,0.046,5,0.046,7,0.346,8,1.387,13,0.633,14,0.004,15,0.83,32,0.046,40,5.068,77,0.004,164,0.004,223,1.596,239,1.608,329,3.834,481,5.148,877,5.363,880,5.537,1635,5.537,2770,5.967,2771,7.219]],["title/interfaces/IValidator.html",[0,0.763,2772,4.594]],["body/interfaces/IValidator.html",[0,0.79,2,1.37,3,0.034,4,0.034,5,0.034,7,0.253,8,1.136,13,0.679,14,0.004,15,0.854,16,4.432,32,0.034,77,0.003,85,2.933,107,1.041,164,0.003,168,0.12,239,1.745,291,4.047,788,3.9,907,3.459,1029,7.258,1303,4.888,1364,2.72,1463,2.247,1932,7.838,2772,6.447,2773,5.293,2774,8.719,2775,8.719,2776,8.719,2777,8.719,2778,8.719,2779,8.719,2780,8.719,2781,8.719,2782,8.719,2783,8.719,2784,8.719,2785,5.293]],["title/guards/IsAccountOwnerGuard.html",[2786,3.357,2787,4]],["body/guards/IsAccountOwnerGuard.html",[3,0.04,4,0.04,5,0.04,7,0.298,13,0.516,14,0.005,15,0.493,17,0.152,29,1.925,32,0.04,38,2.439,42,2.517,71,1.042,77,0.003,107,0.954,164,0.003,168,0.2,169,3.024,171,1.192,175,0.894,177,0.964,178,0.634,179,0.13,202,2.788,232,3.275,234,1.616,238,1.39,239,1.311,256,1.247,294,1.136,298,1.784,401,3.202,483,2.461,509,1.673,586,4.982,597,5.789,695,5.87,720,4.093,1194,5.55,1198,4.768,1248,4.017,1249,3.72,1305,5.07,2787,6.251,2788,3.956,2789,8.814,2790,4.877,2791,6.313,2792,5.187,2793,5.602,2794,4.093,2795,5.602,2796,5.187,2797,6.648,2798,6.231,2799,5.187]],["title/guards/IsApiKeyProjectMatchGuard.html",[2786,3.357,2800,4.254]],["body/guards/IsApiKeyProjectMatchGuard.html",[3,0.034,4,0.034,5,0.034,7,0.252,13,0.462,14,0.005,15,0.721,17,0.165,29,1.988,32,0.034,38,2.064,42,2.89,71,1.06,77,0.003,107,0.854,149,4.267,164,0.003,168,0.185,171,1.068,175,0.8,177,0.816,178,0.537,179,0.11,232,2.771,234,1.448,238,1.245,239,1.174,256,1.431,294,1.018,298,1.643,321,2.545,322,2.614,323,4.367,329,3.563,330,2.906,343,5.049,344,2.317,348,2.675,349,1.915,351,3.243,379,4.083,481,3.76,483,2.205,505,2.906,506,2.448,509,1.921,544,4.74,629,3.2,1111,2.545,1180,3.918,1194,5.198,1198,4.271,1248,4.379,1249,3.148,1305,4.541,1405,4.847,2788,3.347,2790,4.127,2791,5.978,2794,3.464,2800,5.955,2801,3.743,2802,8.119,2803,5.934,2804,5.273,2805,5.273,2806,4.389,2807,5.273,2808,5.273,2809,5.273,2810,5.273,2811,5.273,2812,5.273,2813,5.273,2814,4.389,2815,3.918,2816,3.743,2817,4.74]],["title/guards/IsCreatorOwnerGuard.html",[2786,3.357,2818,4.254]],["body/guards/IsCreatorOwnerGuard.html",[3,0.041,4,0.041,5,0.041,7,0.303,13,0.522,14,0.005,17,0.153,29,1.938,32,0.041,38,2.482,42,2.561,71,1.054,77,0.003,107,0.965,164,0.003,168,0.202,169,3.049,171,1.206,175,0.904,177,0.981,178,0.645,179,0.132,202,2.836,224,2.786,232,3.332,234,1.634,238,1.406,239,1.326,256,1.268,294,1.149,298,1.798,483,2.489,509,1.702,586,5.023,695,5.897,720,4.164,1194,5.585,1198,4.821,1248,3.188,1249,3.785,2788,4.024,2790,4.962,2791,6.346,2792,5.277,2793,5.699,2794,4.164,2795,5.699,2796,5.277,2797,6.722,2799,5.277,2818,6.722,2819,7.988,2820,7.988,2821,6.34,2822,6.34]],["title/guards/IsPrdOrSbxKeyGuard.html",[1179,3.797,2786,3.357]],["body/guards/IsPrdOrSbxKeyGuard.html",[3,0.037,4,0.037,5,0.037,7,0.274,13,0.488,14,0.005,15,0.453,17,0.161,29,1.564,32,0.037,38,2.956,42,3.051,71,1.174,77,0.003,107,0.902,164,0.003,168,0.204,171,1.128,175,0.845,177,0.885,178,0.582,179,0.119,232,3.005,234,1.528,238,1.315,239,1.24,256,1.144,294,1.074,298,1.711,321,4.341,322,2.506,323,4.839,330,3.151,331,4.475,343,5.168,344,2.513,351,3.517,389,5.532,481,3.969,483,2.328,505,3.151,506,2.654,509,2.028,1179,5.611,1180,4.081,1181,5.908,1194,5.37,1198,4.509,1248,3.798,1249,3.414,1251,6.789,2788,3.63,2791,6.143,2794,3.756,2801,4.059,2815,5.611,2816,5.361,2823,5.14,2824,5.14,2825,5.14,2826,5.14,2827,5.718,2828,7.552,2829,6.286,2830,7.552]],["title/guards/IsProjectOwnerGuard.html",[2786,3.357,2831,4]],["body/guards/IsProjectOwnerGuard.html",[3,0.038,4,0.038,5,0.038,7,0.281,13,0.497,14,0.005,15,0.608,17,0.163,29,2.004,32,0.038,38,2.297,42,2.371,71,1.003,77,0.003,107,0.917,164,0.003,168,0.195,169,2.938,171,1.147,175,0.859,177,0.908,178,0.597,179,0.122,202,3.436,232,3.084,234,1.555,238,1.337,239,1.261,256,1.537,294,1.093,298,1.733,329,3.007,379,4.57,401,3.015,483,2.367,509,2.062,586,4.841,695,5.776,720,3.854,1194,5.424,1198,4.586,1248,3.863,1249,3.503,1305,4.876,2788,3.725,2790,4.592,2791,6.194,2792,4.884,2794,3.854,2796,4.884,2797,6.394,2799,4.884,2819,7.699,2831,6.012,2832,6.998,2833,5.868,2834,5.868,2835,4.884,2836,5.868,2837,5.868,2838,5.868,2839,5.868]],["title/guards/IsValidApiKeysGuard.html",[2092,3.244,2786,3.357]],["body/guards/IsValidApiKeysGuard.html",[3,0.038,4,0.038,5,0.038,7,0.283,13,0.499,14,0.005,15,0.468,17,0.163,29,1.958,32,0.038,42,2.39,71,1.008,77,0.003,107,0.922,164,0.003,168,0.207,171,1.153,175,0.864,177,0.915,178,0.602,179,0.123,232,3.109,234,1.563,238,1.344,239,1.268,256,1.183,294,1.099,298,1.74,321,2.855,322,2.751,323,4.903,330,3.26,343,5.216,344,2.599,351,3.638,394,3.531,481,4.059,483,2.38,500,4.63,501,4.395,509,2.073,526,6.044,1180,4.149,1194,5.441,1198,4.61,1248,3.884,1249,3.531,2092,4.902,2093,4.625,2788,3.755,2791,6.21,2794,3.885,2801,4.199,2814,4.924,2815,4.395,2816,4.199,2829,4.924,2840,5.317,2841,5.915,2842,5.915,2843,7.729,2844,5.915,2845,5.317,2846,5.317,2847,5.317]],["title/guards/IsValidApiKeysGuard-1.html",[104,1.776,2092,2.701,2786,2.794]],["body/guards/IsValidApiKeysGuard-1.html",[3,0.037,4,0.037,5,0.037,7,0.277,13,0.492,14,0.005,15,0.458,17,0.161,29,1.996,32,0.037,38,2.265,42,2.338,71,1.11,77,0.003,107,0.909,164,0.003,168,0.205,171,1.136,175,0.852,177,0.895,178,0.589,179,0.121,232,3.041,234,1.54,238,1.325,239,1.25,256,1.158,289,3.944,294,1.083,298,1.721,321,2.792,322,2.369,323,4.861,330,3.189,335,3.537,343,5.185,344,2.543,351,3.558,394,3.454,481,4,483,2.346,500,4.528,501,4.299,509,2.044,526,5.957,1180,4.105,1194,5.395,1198,4.544,1248,3.828,1249,3.454,2092,4.832,2093,4.576,2788,3.673,2791,6.166,2794,3.8,2801,4.107,2815,4.299,2816,4.107,2840,5.201,2843,7.646,2845,5.201,2847,5.201,2848,5.786,2849,5.786,2850,7.611,2851,5.786,2852,5.786,2853,5.786,2854,5.786,2855,5.786]],["title/guards/IsValidPublicApiKeyGuard.html",[2271,3.244,2786,3.357]],["body/guards/IsValidPublicApiKeyGuard.html",[3,0.039,4,0.039,5,0.039,7,0.287,13,0.504,14,0.005,15,0.475,17,0.164,29,1.793,32,0.039,38,2.349,42,2.424,71,1.017,77,0.003,107,0.931,164,0.003,168,0.208,171,1.164,175,0.872,177,0.929,178,0.611,179,0.125,232,3.154,234,1.577,238,1.357,239,1.28,256,1.2,294,1.109,298,1.752,321,2.896,322,2.761,323,4.93,330,3.307,343,5.237,344,2.637,351,3.69,384,4.55,481,4.097,483,2.402,505,3.307,506,2.785,509,1.611,1180,4.178,1194,5.471,1198,4.653,1248,3.92,1249,3.582,2093,4.657,2271,4.948,2788,3.809,2791,6.239,2794,3.941,2801,4.26,2814,4.995,2815,4.458,2816,4.26,2817,5.394,2823,5.394,2824,5.394,2825,5.394,2826,5.394,2829,4.995,2846,5.394]],["title/injectables/JwtAuthGuard.html",[294,0.727,635,3.357]],["body/injectables/JwtAuthGuard.html",[3,0.049,4,0.049,5,0.049,14,0.004,17,0.183,32,0.049,37,2.369,77,0.004,164,0.004,168,0.173,169,2.612,178,0.775,179,0.159,202,3.406,294,1.286,296,2.202,635,5.937,854,4.834,2856,7.615,2857,7.615,2858,9.039,2859,8.666,2860,6.338,2861,6.845]],["title/injectables/JwtStrategy.html",[294,0.727,851,3.483]],["body/injectables/JwtStrategy.html",[3,0.042,4,0.042,5,0.042,7,0.315,14,0.005,17,0.18,32,0.042,37,2.167,38,3.237,71,0.859,77,0.003,107,0.786,126,2.361,164,0.003,168,0.205,169,3.102,171,1.235,175,0.925,178,0.67,179,0.137,234,1.83,238,1.146,239,1.081,294,1.177,296,1.904,851,5.636,854,4.179,861,3.93,1954,5.48,2862,6.583,2863,6.884,2864,7.077,2865,6.583,2866,5.48,2867,6.583,2868,7.526,2869,5.48,2870,5.48,2871,5.48,2872,5.152,2873,8.27,2874,5.918,2875,5.918,2876,5.48,2877,6.583,2878,6.583,2879,6.583,2880,6.583,2881,6.583,2882,6.583,2883,6.583,2884,5.48,2885,5.48,2886,6.583,2887,6.583,2888,6.583,2889,6.583,2890,6.583,2891,6.583]],["title/injectables/JwtStrategy-1.html",[104,1.776,294,0.605,851,2.9]],["body/injectables/JwtStrategy-1.html",[3,0.042,4,0.042,5,0.042,7,0.314,13,0.424,14,0.005,17,0.18,32,0.042,37,2.161,71,0.855,77,0.003,107,0.985,126,2.355,164,0.003,168,0.205,171,1.231,175,0.923,178,0.667,179,0.137,209,1.943,223,1.195,234,1.669,238,1.435,239,1.354,256,1.311,294,1.173,296,1.895,300,4.03,301,3.418,322,2.513,763,2.71,851,5.621,854,4.16,861,3.912,865,4.869,2863,6.864,2864,7.062,2866,5.455,2868,7.511,2869,5.455,2870,5.455,2871,5.455,2872,5.129,2876,5.455,2884,5.455,2885,5.455,2892,4.637,2893,6.554,2894,6.554,2895,6.554,2896,5.891]],["title/controllers/LegacyAdminApiController.html",[165,1.135,2897,4.254]],["body/controllers/LegacyAdminApiController.html",[3,0.039,4,0.039,5,0.039,7,0.288,14,0.005,17,0.165,32,0.039,77,0.003,164,0.003,165,1.735,167,1.402,168,0.216,171,1.167,173,2.435,175,1.027,177,1.42,178,0.613,179,0.126,286,3.03,322,2.715,348,2.923,349,2.188,630,4.284,632,2.851,799,4.717,1172,3.597,1175,3.957,1178,4.107,1180,2.908,1431,4.107,1432,6.782,2092,3.825,2093,3.241,2094,4.476,2098,4.476,2268,4.476,2730,5.015,2897,6.505,2898,6.482,2899,8.024,2900,8.251,2901,8.251,2902,5.416,2903,7.816,2904,7.816,2905,6.025,2906,4.107,2907,4.476,2908,6.025]],["title/injectables/LegacyApiInterceptor.html",[294,0.727,2906,3.483]],["body/injectables/LegacyApiInterceptor.html",[3,0.024,4,0.024,5,0.024,7,0.181,8,0.894,13,0.484,14,0.005,17,0.165,25,2.759,29,2.039,30,1.904,32,0.024,40,2.034,71,0.881,76,3.847,77,0.002,79,1.48,89,1.28,100,3.847,107,0.807,126,1.08,164,0.002,168,0.182,171,0.843,175,0.838,177,0.873,178,0.385,179,0.079,209,1.122,223,1.231,232,1.988,234,1.142,238,1.175,239,1.109,245,3.036,256,1.83,261,4.602,267,2.966,294,0.803,296,1.094,298,1.7,301,2.987,311,1.181,322,2.594,329,2.209,330,2.084,343,4.52,344,1.662,348,1.414,349,1.373,351,2.326,355,4.435,481,2.966,483,1.739,505,2.084,506,1.756,509,2.01,629,2.525,630,1.633,672,3.47,763,1.695,902,5.198,917,3.92,954,1.579,955,2.401,957,2.258,993,3.583,994,2.685,995,2.484,996,2.484,997,2.484,1186,3.148,1187,5.621,1188,5.621,1193,3.148,1194,5.198,1198,4.47,1199,3.148,1205,4.698,1208,3.148,1211,4.793,1212,4.193,1213,2.401,1216,6.18,1218,2.484,1220,2.81,1224,2.96,1226,4.007,1227,2.81,1248,3.396,1249,2.258,1252,6.668,1253,3.148,1254,3.4,1256,3.4,1257,3.4,1261,2.326,1288,5.718,1289,2.484,1290,2.484,1305,2.401,1371,4.417,1432,5.262,1869,4.417,2278,3.4,2279,3.4,2280,3.4,2281,3.4,2283,3.4,2284,3.4,2445,4.698,2529,5.563,2530,2.81,2801,2.685,2816,2.685,2898,5.46,2899,4.417,2900,3.4,2901,3.4,2906,3.847,2909,5.644,2910,3.782,2911,3.782,2912,5.644,2913,3.782,2914,3.782,2915,3.782,2916,3.782,2917,3.782,2918,3.782,2919,3.4,2920,3.782,2921,3.782,2922,5.644,2923,3.782,2924,5.644,2925,3.782,2926,3.782,2927,3.782,2928,3.782,2929,3.782,2930,3.782,2931,5.644,2932,5.074,2933,3.782,2934,3.782,2935,3.4,2936,3.782,2937,3.782,2938,3.782]],["title/modules/LegacyApiModule.html",[181,1.096,1422,3.797]],["body/modules/LegacyApiModule.html",[3,0.038,4,0.038,5,0.038,14,0.005,17,0.194,32,0.038,77,0.003,80,1.982,164,0.003,167,1.802,168,0.135,178,0.604,179,0.124,181,1.847,183,2.01,184,2.038,185,2.096,186,2.096,187,2.096,188,2.066,189,2.066,198,2.732,199,2.096,201,2.771,208,2.757,209,1.761,322,2.157,336,5.35,344,2.61,348,3.697,349,2.157,672,3.052,680,3.273,954,2.479,1065,4.069,1269,3.77,1270,3.357,1271,4.648,1272,5.996,1422,7.212,1431,6.617,1432,6.766,1678,3.813,2897,7.171,2898,4.048,2899,6.06,2939,5.939,2940,5.939,2941,7.171,2942,7.171,2943,7.171,2944,7.171,2945,6.96,2946,7.598,2947,5.339]],["title/classes/LegacyEventEmitter.html",[179,0.107,2396,4.254]],["body/classes/LegacyEventEmitter.html",[0,0.346,3,0.015,4,0.015,5,0.015,12,4.443,13,0.521,14,0.005,15,0.779,17,0.143,21,1.142,23,3.67,29,2.089,30,2.273,32,0.015,35,2.885,37,1.006,42,1.551,45,1.347,47,1.427,48,3.369,51,1.414,71,1.052,72,2.779,77,0.002,79,1.922,107,0.861,114,2.521,125,3.131,126,0.662,127,1.647,139,2.706,164,0.002,179,0.08,223,0.7,229,0.842,234,0.469,256,1.69,265,3.004,267,2.999,290,1.472,291,1.077,298,1.526,311,1.533,313,1.931,321,1.119,355,4.474,384,2.017,421,3.004,483,1.948,509,2.441,542,2.292,629,1.717,683,1.219,723,2.616,762,1.905,763,1.153,783,1.057,802,0.985,813,1.098,818,1.472,829,1.192,861,2.292,880,3.226,907,1.864,968,3.004,992,3.648,1007,3.888,1020,1.723,1039,2.361,1143,4.087,1144,1.815,1148,1.931,1213,2.437,1288,3.748,1289,1.524,1290,1.524,1305,1.472,1310,1.836,1317,2.437,1364,1.973,1384,0.952,1441,1.192,1487,2.641,1604,1.098,1635,1.311,1678,3.715,1789,1.723,1790,1.723,1791,1.647,1797,1.723,1838,1.815,1848,1.192,1852,4.697,1916,2.852,1938,2.616,2008,1.581,2143,1.931,2205,1.931,2236,3.347,2237,3.347,2360,1.815,2361,1.931,2362,2.085,2363,2.085,2364,2.085,2365,2.085,2366,2.085,2367,2.085,2368,2.085,2369,2.085,2370,2.085,2371,2.085,2372,2.085,2373,3.451,2374,3.451,2375,2.616,2376,1.647,2379,3.451,2389,2.085,2392,2.521,2396,4.087,2401,1.931,2402,3.451,2403,4.466,2404,4.414,2405,5.13,2406,1.931,2407,2.085,2408,1.931,2409,3.195,2410,2.085,2411,2.085,2412,2.085,2413,2.085,2414,3.451,2415,1.815,2416,2.085,2417,2.085,2418,2.085,2419,1.647,2420,1.647,2421,1.647,2422,1.815,2423,2.085,2424,2.085,2425,2.085,2426,2.085,2427,2.085,2428,3.451,2429,2.085,2430,2.085,2431,2.085,2432,2.085,2433,2.085,2434,1.931,2435,2.085,2436,1.931,2437,2.085,2438,3.004,2439,2.085,2440,2.085,2441,2.085,2442,2.085,2443,2.085,2444,2.085,2445,1.931,2446,2.085,2447,4.75,2448,3.451,2449,4.414,2450,2.085,2451,2.085,2452,5.683,2453,2.085,2454,2.085,2455,2.085,2456,3.451,2457,3.451,2458,2.085,2459,2.085,2460,5.683,2461,2.085,2462,3.195,2463,2.085,2464,2.085,2465,6.124,2466,6.124,2467,2.085,2468,2.085,2469,2.085,2470,2.085,2471,2.085,2472,2.085,2473,2.085,2474,2.085,2475,2.085,2476,2.085,2477,2.085,2478,2.085,2479,2.085,2480,2.085,2481,2.085,2482,2.085,2483,3.451,2484,2.085,2485,2.085,2486,2.085,2487,2.085,2488,2.085,2489,2.085,2490,2.085,2491,4.414,2492,2.085,2493,2.085,2494,2.085,2495,2.085,2496,2.085,2497,2.085,2498,2.085,2499,1.647,2500,2.085,2501,2.085,2502,2.085,2503,1.931,2504,2.085,2505,2.085,2506,2.085,2507,3.451,2508,2.085,2509,2.085,2510,3.451,2511,2.085,2512,2.085,2513,2.085,2514,4.75,2515,2.085,2516,2.085,2517,2.085,2518,2.085,2519,2.085,2520,3.451,2521,4.414,2522,2.085,2523,4.414,2524,2.085,2525,2.085,2526,2.085,2527,5.13,2528,2.085,2529,3.648,2530,3.648,2531,3.451,2532,3.451,2533,3.451,2534,3.451,2535,3.451,2536,3.451,2537,2.085,2538,4.414,2539,3.451,2540,1.931,2541,2.085,2542,3.195,2543,3.451,2544,2.085,2545,2.085,2546,2.085,2547,3.451,2548,3.195,2549,2.085,2550,2.085,2551,2.085,2552,1.815,2553,2.085,2554,2.085,2555,2.085,2556,2.085,2557,2.085,2558,2.085,2559,2.085,2560,2.085,2561,2.085,2562,2.085]],["title/controllers/LegacyJobsApiController.html",[165,1.135,2942,4.254]],["body/controllers/LegacyJobsApiController.html",[3,0.043,4,0.043,5,0.043,7,0.317,14,0.005,17,0.172,32,0.043,77,0.004,164,0.004,165,1.844,167,1.542,168,0.206,171,1.24,173,2.203,175,0.929,177,1.285,178,0.675,179,0.138,286,3.333,322,2.649,348,3.106,349,2.407,630,4.378,632,3.136,799,4.268,1172,3.957,1175,4.353,1178,4.517,1180,3.199,1431,4.517,1432,6.658,2092,4.207,2093,3.565,2094,4.924,2098,4.924,2268,4.924,2730,5.517,2898,6.182,2906,4.517,2907,4.924,2942,6.913,2945,8.981,2948,6.628]],["title/controllers/LegacyTradeApiController.html",[165,1.135,2943,4.254]],["body/controllers/LegacyTradeApiController.html",[3,0.042,4,0.042,5,0.042,7,0.317,14,0.005,17,0.172,32,0.042,77,0.003,164,0.003,165,1.842,167,1.539,168,0.206,171,1.238,173,2.2,175,0.928,177,1.283,178,0.673,179,0.138,286,3.326,322,2.646,348,3.101,349,2.401,384,3.476,630,4.375,632,3.129,799,4.262,1172,3.948,1175,4.343,1178,4.507,1180,3.192,1182,4.067,1431,4.507,1432,6.655,2093,3.557,2268,4.913,2269,5.504,2271,4.198,2272,4.507,2898,6.176,2906,4.507,2907,4.913,2943,6.903,2946,8.311,2949,6.613]],["title/controllers/LegacyWalletApiController.html",[165,1.135,2941,4.254]],["body/controllers/LegacyWalletApiController.html",[3,0.038,4,0.038,5,0.038,7,0.285,14,0.005,17,0.164,32,0.038,77,0.003,164,0.003,165,1.724,167,1.388,168,0.215,171,1.159,173,2.425,175,1.023,177,1.415,178,0.607,179,0.124,286,2.999,322,2.707,348,2.903,349,2.166,384,3.134,630,4.274,631,7.746,632,2.822,799,4.699,1172,3.56,1175,3.917,1178,4.065,1180,2.878,1182,3.668,1431,4.065,1432,6.771,1678,5.04,2093,3.208,2268,4.431,2269,4.964,2271,3.786,2272,4.065,2733,5.361,2898,6.461,2906,4.065,2907,4.431,2941,6.462,2950,7.746,2951,5.361,2952,5.964]],["title/interfaces/LogFilter.html",[0,0.763,1947,3.797]],["body/interfaces/LogFilter.html",[0,1.137,2,1.972,3,0.049,4,0.049,5,0.049,7,0.365,8,1.432,13,0.584,14,0.004,15,0.818,32,0.049,34,7.079,77,0.004,164,0.004,168,0.173,907,3.785,1060,3.076,1936,5.19,1947,6.715,1991,6.845,2953,7.615]],["title/classes/NativeTransfer.html",[179,0.107,2954,4]],["body/classes/NativeTransfer.html",[2,1.226,3,0.03,4,0.03,5,0.03,7,0.227,8,1.052,13,0.566,14,0.005,15,0.693,17,0.158,29,1.722,32,0.03,35,2.377,37,1.74,71,1.001,77,0.003,85,1.478,89,1.602,107,1.136,126,1.352,164,0.003,168,0.174,171,0.991,175,1.043,177,1.405,179,0.099,229,1.719,238,1.58,239,1.49,291,3.083,298,1.552,311,2.834,762,2.56,763,2.8,764,3.858,765,5.278,768,5.378,769,3.964,770,5.003,771,5.445,772,6.003,773,4.579,774,4.215,775,4.215,776,4.215,777,5.083,778,3.109,779,3.517,780,6.618,782,5.385,783,3.495,784,3.964,785,3.858,786,2.918,787,3.142,788,2.971,791,3.005,793,3.109,794,3.226,795,3.005,796,3.109,797,3.005,798,3.109,799,2.433,802,3.53,803,3.109,804,3.66,805,3.109,806,4.717,807,2.826,809,5.114,813,2.24,815,3.005,816,3.49,817,3.572,818,3.005,819,3.226,820,2.911,822,3.36,824,3.36,826,3.517,1877,3.94,2050,3.94,2054,4.255,2954,5.197,2955,7.67,2956,4.734,2957,4.255,2958,4.734,2959,4.255,2960,4.933,2961,4.714,2962,3.36,2963,4.255,2964,4.734]],["title/classes/NftTransfer.html",[179,0.107,2415,4]],["body/classes/NftTransfer.html",[2,1.212,3,0.03,4,0.03,5,0.03,7,0.224,8,1.044,13,0.535,14,0.005,15,0.716,17,0.145,29,1.873,32,0.03,35,1.675,37,1.726,71,1.08,77,0.003,85,1.461,89,1.584,107,1.133,126,1.881,164,0.003,168,0.173,171,0.984,175,1.04,177,1.4,179,0.098,229,1.7,238,1.574,239,1.485,291,3.058,298,1.831,509,1.769,762,2.544,763,2.717,764,3.834,765,5.252,768,5.363,769,3.933,770,4.985,771,5.412,773,4.551,774,4.839,775,4.182,776,4.182,777,5.062,778,3.074,779,3.477,780,6.597,782,5.363,783,3.473,784,4.551,785,3.834,786,2.895,787,3.117,788,2.947,791,2.971,795,2.971,796,3.074,797,2.971,798,3.074,799,2.405,801,5.484,802,3.236,803,3.074,804,3.631,805,3.074,807,2.794,808,3.631,809,2.879,810,5.156,811,3.323,813,2.215,815,2.971,816,4.348,818,2.971,823,3.896,824,3.323,826,3.477,1850,5.113,2050,3.896,2055,4.894,2415,5.966,2959,4.208,2965,7.624,2966,7.624,2967,4.681,2968,4.681,2969,4.681,2970,4.681,2971,4.681,2972,4.681,2973,4.681]],["title/controllers/NotificationsController.html",[165,1.135,2974,4.254]],["body/controllers/NotificationsController.html",[3,0.028,4,0.028,5,0.028,7,0.209,13,0.602,14,0.005,15,0.78,17,0.173,32,0.028,71,1.216,77,0.003,107,1.113,149,2.294,157,2.15,164,0.003,165,0.969,167,1.016,168,0.216,171,0.936,173,2.471,175,1.042,177,1.442,178,0.444,179,0.091,223,0.796,234,0.883,238,1.622,239,1.53,256,0.873,322,2.715,329,2.454,348,2.743,349,2.277,379,2.195,428,2.534,629,3.799,630,1.885,631,3.416,632,2.066,829,3.77,1062,3.613,1111,2.107,1180,3.026,1405,5.277,1409,6.674,1652,6.92,1658,6.025,1672,4.657,1698,3.98,2087,5.218,2092,2.771,2093,2.348,2094,3.243,2098,3.243,2800,3.634,2803,5,2806,3.634,2950,6.275,2974,5.218,2975,4.365,2976,4.365,2977,5.741,2978,5.741,2979,5.741,2980,6.594,2981,3.634,2982,4.365,2983,3.416,2984,6.269,2985,4.365,2986,3.634,2987,6.269,2988,4.365,2989,3.416,2990,6.269,2991,4.365,2992,3.634,2993,6.269,2994,4.365,2995,3.416,2996,6.269,2997,4.365,2998,3.924,2999,6.269,3000,4.365,3001,3.634,3002,6.275,3003,6.269,3004,4.365,3005,4.658,3006,3.416,3007,3.243,3008,3.416,3009,4.365,3010,4.365,3011,4.365,3012,4.365,3013,7.336,3014,4.365,3015,4.365,3016,3.924,3017,4.365,3018,4.365,3019,4.365,3020,4.365]],["title/modules/NotificationsModule.html",[181,1.096,1423,3.628]],["body/modules/NotificationsModule.html",[3,0.04,4,0.04,5,0.04,14,0.005,17,0.187,32,0.04,77,0.003,80,2.093,107,0.749,164,0.003,167,1.866,168,0.143,178,0.638,179,0.131,181,1.896,183,2.122,184,2.152,185,2.213,186,2.213,187,2.213,188,3.076,189,3.076,198,2.83,199,2.213,201,2.87,241,3.456,249,2.093,322,1.747,336,5.429,344,2.756,348,3.306,349,2.277,677,3.545,678,4.533,679,2.756,681,3.545,682,3.545,683,3.296,685,3.545,1270,3.545,1423,7.269,2803,7.182,2806,5.22,2974,7.359,3021,5.638,3022,6.272,3023,5.638,3024,5.638,3025,6.272,3026,6.272,3027,5.638,3028,5.638]],["title/injectables/NotificationsService.html",[294,0.727,2803,3.483]],["body/injectables/NotificationsService.html",[3,0.027,4,0.027,5,0.027,7,0.203,13,0.609,14,0.005,15,0.776,17,0.176,32,0.027,71,1.207,77,0.003,107,1.126,164,0.003,168,0.217,171,0.917,175,1.054,177,1.431,178,0.432,179,0.088,223,0.774,234,1.243,238,1.64,239,1.547,249,1.417,256,0.849,294,0.874,296,1.227,298,2.108,322,2.665,329,2.826,483,3.112,497,1.477,679,1.865,693,4.594,724,2.464,725,2.464,726,2.464,1062,3.898,1111,2.965,1112,3.533,1405,5.626,1652,7.019,1658,6.154,1698,3.9,2803,4.921,2977,5.651,2978,5.651,2979,5.651,2983,3.322,2989,3.322,2995,3.322,3002,6.41,3005,4.564,3006,3.322,3008,3.322,3029,4.245,3030,7.221,3031,7.221,3032,7.221,3033,7.221,3034,7.221,3035,4.245,3036,4.245,3037,6.144,3038,4.245,3039,4.245,3040,4.245,3041,4.245,3042,4.245,3043,4.245,3044,4.245,3045,4.245,3046,4.245,3047,4.245,3048,4.245,3049,4.245,3050,4.245,3051,3.816,3052,4.245,3053,9.247,3054,4.245,3055,4.245,3056,4.245,3057,4.245,3058,4.245,3059,4.245,3060,4.245,3061,4.245]],["title/injectables/OperatorJwtStrategy.html",[294,0.727,3062,4]],["body/injectables/OperatorJwtStrategy.html",[3,0.042,4,0.042,5,0.042,7,0.31,13,0.419,14,0.005,17,0.185,32,0.042,37,2.146,71,0.846,77,0.003,107,0.978,126,2.338,164,0.003,168,0.204,169,3.08,171,1.223,175,0.916,178,0.66,179,0.135,202,2.899,209,1.922,223,1.182,234,1.657,238,1.425,239,1.344,256,1.296,294,1.165,296,1.874,300,3.986,301,3.408,854,4.114,861,3.869,865,4.815,2859,8.07,2861,5.826,2863,6.816,2864,7.026,2866,5.394,2868,7.472,2869,5.394,2870,5.394,2871,5.394,2872,5.072,2876,5.394,2884,5.394,2885,5.394,2896,5.826,3062,6.409,3063,8.977,3064,6.481,3065,6.481,3066,6.481]],["title/interfaces/OperatorWallet.html",[0,0.763,3067,4.594]],["body/interfaces/OperatorWallet.html",[0,1.08,2,1.874,3,0.046,4,0.046,5,0.046,7,0.346,8,1.389,13,0.61,14,0.004,15,0.808,16,4.219,17,0.137,32,0.046,37,2.297,77,0.004,164,0.004,168,0.164,169,2.483,221,4.073,222,2.351,223,1.72,224,4.308,226,6.682,877,5.376,1635,5.542,3067,7.881,3068,7.237]],["title/controllers/OperatorsController.html",[165,1.135,3069,4.254]],["body/controllers/OperatorsController.html",[3,0.02,4,0.02,5,0.02,7,0.148,13,0.557,14,0.005,15,0.783,17,0.164,21,1.518,25,1.778,29,1,30,1.678,32,0.02,64,3.426,71,1.125,77,0.002,100,3.29,104,1.287,107,1.03,126,2.313,149,3.538,157,3.817,164,0.002,165,1.072,167,0.717,168,0.2,169,3.026,171,0.721,173,2.287,175,0.965,177,1.45,178,0.314,179,0.064,180,3.064,202,3.269,223,0.88,226,3.29,234,0.624,238,1.501,239,1.415,249,1.029,256,0.966,267,4.867,285,2.771,286,1.55,290,3.064,298,2.03,379,3.898,384,3.538,401,2.48,415,1.699,436,1.55,509,1.597,512,4.017,522,3.064,586,4.985,605,7.538,629,3.011,630,1.331,632,1.459,635,2.024,636,2.188,637,2.188,638,3.691,639,2.412,645,4.778,648,5.268,762,1.611,783,3.067,829,2.48,842,2.566,861,2.881,866,7.341,907,2.258,1008,3.426,1039,2.968,1086,4.381,1110,2.188,1111,2.329,1619,6.451,1621,7.264,1678,4.499,1688,5.603,1689,5.268,1725,5.268,1856,3.777,1895,2.771,1902,3.586,1927,5.603,2091,2.412,2736,2.566,2864,5.72,3069,4.017,3070,3.082,3071,5.949,3072,5.949,3073,5.949,3074,5.949,3075,5.949,3076,5.949,3077,5.949,3078,5.949,3079,3.082,3080,4.827,3081,3.082,3082,3.082,3083,3.082,3084,3.082,3085,3.082,3086,3.082,3087,3.082,3088,3.082,3089,5.603,3090,3.082,3091,3.082,3092,3.082,3093,3.082,3094,3.082,3095,3.082,3096,4.827,3097,3.082,3098,3.082,3099,3.082,3100,6.731,3101,3.082,3102,4.827,3103,3.082,3104,4.827,3105,3.082,3106,4.827,3107,3.082,3108,3.082,3109,4.952,3110,3.082,3111,4.952,3112,2.771,3113,3.082,3114,3.082,3115,2.566,3116,3.082,3117,3.082,3118,3.082,3119,3.082,3120,3.082,3121,3.082,3122,3.082,3123,3.082,3124,3.082,3125,3.082,3126,3.082,3127,3.082,3128,3.082,3129,3.082,3130,3.082,3131,2.771,3132,3.082,3133,3.082,3134,3.082,3135,3.082]],["title/modules/OperatorsModule.html",[181,1.096,194,3.628]],["body/modules/OperatorsModule.html",[3,0.031,4,0.031,5,0.031,14,0.005,17,0.196,32,0.031,77,0.003,80,1.617,107,0.806,164,0.003,167,1.57,168,0.11,169,1.662,178,0.493,179,0.101,181,1.665,183,1.639,184,1.662,185,1.709,186,1.709,187,1.709,188,2.702,189,2.702,193,6.492,194,7.472,195,6.233,196,5.805,197,5.459,198,2.381,199,1.709,201,2.415,202,4.348,203,4.354,204,3.302,205,3.791,206,4.354,208,2.249,209,1.436,241,3.719,249,1.617,295,6.006,336,5.04,341,4.327,344,2.129,347,2.546,348,1.811,349,1.759,672,2.489,677,2.738,678,4.39,679,2.129,680,2.67,681,2.738,682,3.814,683,3.547,685,3.814,954,2.022,1065,3.547,1214,4.599,1270,2.738,1273,3.791,1274,3.791,1286,3.599,1729,3.599,2803,4.599,3027,4.354,3028,4.354,3062,7.157,3069,6.464,3111,8.353,3112,4.354,3136,4.354,3137,4.844,3138,4.354,3139,4.354,3140,4.844,3141,4.844,3142,4.844,3143,4.844,3144,6.748,3145,4.844]],["title/controllers/PaymasterApiController.html",[165,1.135,3146,4.254]],["body/controllers/PaymasterApiController.html",[3,0.037,4,0.037,5,0.037,7,0.273,14,0.005,15,0.451,17,0.171,29,1.18,30,1.606,32,0.037,71,0.743,76,5.134,77,0.003,107,0.68,164,0.003,165,1.673,167,1.325,168,0.171,171,1.125,173,1.511,175,0.637,177,1.166,178,0.58,179,0.119,223,1.039,234,1.153,238,0.991,239,0.935,256,1.139,267,2.993,281,4.232,286,2.865,289,5.753,322,2.098,348,2.817,349,2.068,389,3.503,483,1.755,629,4.018,630,3.645,632,2.695,799,2.927,1026,4.741,1043,4.782,1172,3.4,1179,4.232,1180,2.749,1181,3.741,1182,3.503,1183,4.741,1248,2.865,1282,2.993,1439,4.458,1440,6.606,1516,4.741,1856,4.458,3109,7.774,3146,6.27,3147,6.27,3148,7.587,3149,5.696,3150,9.596,3151,5.596,3152,8.44,3153,8.073,3154,4.741,3155,5.696,3156,4.043,3157,5.696,3158,5.696,3159,7.533,3160,7.533,3161,5.696,3162,5.696,3163,5.696,3164,7.533,3165,5.696,3166,7.533,3167,5.12,3168,5.12,3169,5.696,3170,5.696,3171,5.696,3172,5.696,3173,5.696,3174,5.696,3175,5.696]],["title/modules/PaymasterApiModule.html",[181,1.096,1424,3.797]],["body/modules/PaymasterApiModule.html",[3,0.031,4,0.031,5,0.031,14,0.005,17,0.189,29,1.9,32,0.031,42,2.745,51,1.803,71,0.887,77,0.003,80,1.633,107,0.933,164,0.003,167,1.581,168,0.111,178,0.498,179,0.102,181,1.674,183,1.656,184,1.679,185,1.726,186,1.726,187,1.726,188,2.716,189,1.702,198,2.398,199,1.726,201,3.019,208,3.624,209,1.451,241,2.697,249,1.633,298,1.375,301,3.228,322,1.363,336,5.056,344,2.15,348,3.155,349,1.777,389,4.179,497,2.364,672,2.514,677,2.766,678,3.841,679,2.15,680,2.697,681,2.766,682,2.766,683,2.571,685,2.766,863,3.945,917,4.897,954,2.042,1065,3.571,1181,4.463,1241,2.84,1261,5.188,1269,3.106,1270,2.766,1271,3.829,1272,3.214,1282,2.571,1315,5.988,1317,3.106,1338,2.042,1384,2.79,1424,7.328,1439,6.11,1440,6.11,1463,2.885,1589,3.473,1592,4.824,1595,5.988,1596,4.631,1597,4.824,1713,6.025,1721,4.073,1727,4.824,1732,4.073,1733,4.073,3146,6.499,3147,4.073,3151,6.815,3176,4.398,3177,4.398,3178,4.893,3179,4.893,3180,6.795,3181,4.893]],["title/injectables/PaymasterApiService.html",[294,0.727,3151,3.797]],["body/injectables/PaymasterApiService.html",[3,0.015,4,0.015,5,0.015,7,0.112,8,0.612,12,3.987,13,0.468,14,0.005,15,0.761,17,0.164,23,1.356,25,2.112,29,2.074,30,2.432,32,0.015,35,1.382,48,0.915,51,1.423,71,1.055,72,0.901,77,0.002,79,3.07,85,2.644,89,0.791,104,0.975,107,0.937,125,2.552,126,1.812,164,0.002,168,0.188,171,0.576,175,0.904,177,1.171,178,0.238,179,0.049,209,0.693,223,1.247,234,0.781,238,1.365,239,1.288,248,1.829,249,0.78,255,1.395,256,1.912,261,2.632,267,3.013,294,0.549,296,0.676,298,1.799,301,2.482,311,0.729,322,2.308,329,3.07,348,0.874,379,1.175,389,1.437,401,1.201,497,0.813,505,1.288,506,1.085,509,2.225,515,5.561,629,3.058,630,1.009,679,1.027,693,3.327,724,1.356,725,1.356,726,1.356,813,1.106,902,4.319,917,1.356,954,0.975,955,2.451,956,2.451,957,1.395,993,2.451,1003,4.771,1008,3.503,1009,4.108,1010,1.945,1011,5.475,1012,1.945,1019,1.945,1020,1.736,1025,4.771,1035,4.029,1181,1.535,1189,4.436,1201,2.1,1203,4.506,1206,1.945,1209,2.1,1211,2.741,1212,2.869,1213,1.483,1216,1.659,1218,1.535,1219,1.945,1220,1.736,1224,1.829,1225,1.945,1226,2.741,1228,2.1,1239,3.471,1241,4.811,1250,4.436,1255,2.1,1258,2.1,1259,2.1,1260,3.471,1261,1.437,1262,2.1,1263,3.471,1264,2.1,1265,2.1,1292,1.592,1305,1.483,1316,2.1,1338,0.975,1439,1.829,1440,6.486,1678,1.151,1727,1.659,1795,1.945,1816,2.869,1852,3.666,1863,1.535,1983,1.592,2401,1.945,2436,1.945,2499,2.741,2503,1.945,2580,5.62,3147,6.898,3148,2.1,3151,2.869,3154,1.945,3182,4.935,3183,4.935,3184,4.935,3185,4.935,3186,4.935,3187,6.347,3188,4.935,3189,2.336,3190,4.935,3191,4.935,3192,3.471,3193,3.861,3194,2.336,3195,8.625,3196,8.625,3197,2.336,3198,5.283,3199,2.336,3200,5.283,3201,2.336,3202,2.336,3203,4.935,3204,2.336,3205,2.336,3206,7.88,3207,2.336,3208,2.336,3209,2.336,3210,2.336,3211,2.336,3212,2.336,3213,5.662,3214,2.336,3215,3.861,3216,1.945,3217,2.336,3218,3.861,3219,3.861,3220,2.336,3221,2.336,3222,2.336,3223,2.336,3224,2.336,3225,2.336,3226,2.336,3227,2.336,3228,2.336,3229,3.861,3230,3.861,3231,2.336,3232,2.336,3233,2.336,3234,2.336,3235,5.153,3236,2.1,3237,3.861,3238,2.336,3239,3.861,3240,3.861,3241,2.336,3242,3.861,3243,3.861,3244,3.861,3245,2.336,3246,2.336,3247,2.336,3248,3.861,3249,2.336,3250,2.336,3251,4.935,3252,2.336,3253,3.861,3254,3.861,3255,2.336,3256,2.336,3257,2.336,3258,3.861,3259,2.336,3260,2.336,3261,4.935,3262,2.336,3263,2.336,3264,2.1,3265,2.336,3266,2.336,3267,2.336,3268,2.336,3269,2.336,3270,3.861,3271,2.336,3272,2.336,3273,2.336,3274,2.336,3275,2.336,3276,5.732,3277,6.347,3278,6.347,3279,2.336,3280,3.861,3281,3.861,3282,2.336,3283,2.336,3284,2.336,3285,2.336,3286,2.336,3287,2.336,3288,2.336,3289,2.336]],["title/controllers/PaymasterController.html",[165,1.135,3290,4.254]],["body/controllers/PaymasterController.html",[3,0.036,4,0.036,5,0.036,7,0.266,13,0.539,14,0.005,15,0.754,17,0.176,21,2.736,32,0.036,55,3.869,71,1.161,77,0.003,104,2.319,107,0.996,157,2.736,164,0.003,165,1.645,167,1.292,168,0.211,169,3.178,171,1.106,173,2.359,175,0.995,177,1.376,178,0.565,179,0.116,202,3.729,223,1.013,234,1.124,238,1.451,239,1.368,249,1.854,256,1.111,286,2.794,379,2.794,401,4.57,415,3.061,604,6.66,630,2.399,632,2.628,635,3.648,636,3.943,637,3.943,645,6.576,829,4.284,1008,3.943,2831,6.524,3007,4.127,3156,5.917,3290,6.166,3291,5.555,3292,8.336,3293,7.493,3294,7.993,3295,5.555,3296,5.555,3297,5.555,3298,5.555,3299,7.408,3300,5.555,3301,6.66,3302,5.555,3303,4.993,3304,5.555,3305,5.555,3306,5.555,3307,4.993,3308,4.993,3309,5.555,3310,5.555,3311,5.555,3312,6.166,3313,5.555,3314,5.555,3315,4.993,3316,5.555,3317,5.555]],["title/interfaces/PaymasterInfo.html",[0,0.763,3213,4]],["body/interfaces/PaymasterInfo.html",[0,0.985,2,1.708,3,0.042,4,0.042,5,0.042,7,0.316,8,1.312,13,0.655,14,0.004,15,0.848,16,4.049,17,0.125,32,0.042,37,2.17,77,0.003,164,0.003,168,0.15,169,2.264,221,3.909,222,2.143,223,1.847,329,3.716,1011,6.026,1203,6.739,3198,7.901,3200,7.901,3213,6.482,3318,6.598,3319,8.533,3320,8.533]],["title/modules/PaymasterModule.html",[181,1.096,195,3.483]],["body/modules/PaymasterModule.html",[3,0.039,4,0.039,5,0.039,14,0.005,17,0.193,32,0.039,77,0.003,80,2.019,164,0.003,167,1.823,168,0.138,169,2.076,178,0.616,179,0.126,181,1.864,183,2.047,184,2.076,185,2.135,186,2.135,187,2.135,188,3.024,189,3.024,195,7.12,196,6.193,197,5.825,198,2.765,199,2.135,201,2.805,202,4.365,204,4.124,205,4.735,208,2.809,209,1.794,341,4.617,347,3.18,672,3.109,680,3.334,1286,4.495,3156,7.378,3290,7.235,3308,5.439,3321,5.439,3322,5.439,3323,5.439,3324,6.05,3325,6.05,3326,6.05,3327,7.837,3328,6.05]],["title/injectables/PaymasterService.html",[294,0.727,3156,3.628]],["body/injectables/PaymasterService.html",[3,0.039,4,0.027,5,0.027,7,0.203,13,0.566,14,0.005,15,0.794,17,0.166,21,3.023,23,2.46,29,1.738,30,2.035,32,0.027,38,3.096,42,1.712,48,1.659,51,1.562,71,1.142,72,1.634,77,0.003,79,2.402,107,1.045,126,2.397,139,2.336,164,0.003,168,0.21,169,3.171,171,0.916,175,1.01,177,1.354,178,0.431,179,0.088,202,2.745,209,1.257,222,1.377,234,1.242,238,1.523,239,1.437,256,1.228,294,0.873,296,1.226,298,2.03,301,3.096,329,3.834,389,2.607,412,3.149,468,4.065,497,1.475,509,2.123,829,3.708,1008,5.122,1011,3.896,1161,2.889,1165,4.803,1181,2.784,1203,5.122,1206,3.528,3156,4.357,3198,5.108,3200,5.108,3213,3.317,3264,3.81,3293,6.486,3294,7.11,3301,5.517,3319,7.11,3320,3.81,3329,4.238,3330,5.647,3331,7.215,3332,7.215,3333,4.238,3334,4.238,3335,6.137,3336,4.238,3337,7.909,3338,4.238,3339,4.238,3340,4.238,3341,4.238,3342,4.238,3343,4.238,3344,4.238,3345,4.238,3346,4.238,3347,4.238,3348,4.238,3349,4.238,3350,4.238,3351,4.238,3352,6.137,3353,4.238,3354,4.238,3355,3.317,3356,4.238,3357,4.238,3358,4.238,3359,5.108,3360,6.137,3361,4.238,3362,7.215,3363,4.238,3364,4.238,3365,4.238,3366,6.137,3367,4.238,3368,4.238,3369,4.238,3370,4.238,3371,4.238,3372,4.238,3373,4.238,3374,6.137,3375,4.238]],["title/interfaces/PaymentAccount.html",[0,0.763,2180,4]],["body/interfaces/PaymentAccount.html",[0,1.108,2,1.921,3,0.048,4,0.048,5,0.048,7,0.355,8,1.41,13,0.575,14,0.004,15,0.813,17,0.141,32,0.048,37,2.333,77,0.004,164,0.004,168,0.169,221,4.117,222,2.411,223,1.623,224,4.345,335,2.905,1602,6.494,2058,6.671,2180,6.966,3376,6.671]],["title/interfaces/PaymentLink.html",[0,0.763,2145,4]],["body/interfaces/PaymentLink.html",[0,0.866,2,1.501,3,0.037,4,0.037,5,0.037,7,0.278,8,1.208,13,0.671,14,0.004,15,0.858,17,0.11,32,0.037,37,1.997,77,0.003,85,2.658,164,0.003,168,0.132,221,3.677,222,1.883,223,1.793,224,3.974,291,4.198,335,2.269,542,5.083,788,4.046,1310,3.382,1364,4.648,1602,5.94,1603,7.078,1604,4.279,1605,5.94,2060,5.212,2061,8.13,2062,8.13,2063,8.13,2145,5.965,3376,5.212,3377,9.044]],["title/controllers/PaymentsController.html",[165,1.135,3378,4.254]],["body/controllers/PaymentsController.html",[3,0.027,4,0.027,5,0.027,7,0.203,13,0.584,14,0.005,15,0.817,17,0.176,32,0.027,71,1.207,77,0.003,107,1.079,157,2.094,164,0.003,165,0.944,167,0.989,168,0.214,171,0.918,173,2.454,175,1.035,177,1.431,178,0.433,179,0.089,223,0.775,224,4.206,234,0.86,238,1.572,239,1.483,249,1.419,256,0.85,322,1.184,335,3.69,349,1.544,415,2.343,428,2.468,436,4.406,578,5.13,581,5.13,583,5.369,592,6.305,595,2.538,622,5.97,629,3.919,630,1.836,632,2.011,640,3.158,641,3.018,642,3.158,643,3.158,659,3.538,661,3.538,1086,4.952,1110,3.018,1111,3.488,1180,2.051,1295,6.015,1320,3.538,2067,5.656,2068,7.119,2069,5.656,2070,3.327,2073,3.327,2076,6.795,2079,3.327,2080,5.529,2082,4.813,2083,3.821,2086,3.821,2087,5.119,2091,3.327,2092,2.698,2093,2.287,2094,3.158,2095,3.821,2098,5.884,2099,3.821,2104,3.821,3378,5.119,3379,4.251,3380,4.251,3381,6.15,3382,4.251,3383,4.251,3384,4.251,3385,4.251,3386,4.251,3387,4.251,3388,4.251,3389,4.251,3390,4.251,3391,4.251,3392,4.251,3393,6.15,3394,4.251,3395,4.251,3396,5.369,3397,3.821,3398,4.251,3399,4.251,3400,4.251,3401,4.251,3402,4.251,3403,4.251,3404,4.251,3405,4.251,3406,4.251,3407,4.251,3408,4.251,3409,4.251,3410,4.251,3411,4.251]],["title/modules/PaymentsModule.html",[181,1.096,1458,3.797]],["body/modules/PaymentsModule.html",[3,0.038,4,0.038,5,0.038,14,0.005,17,0.196,32,0.038,77,0.003,80,1.982,164,0.003,167,1.802,168,0.135,178,0.604,179,0.124,181,1.847,183,2.01,184,2.038,185,2.096,186,2.096,187,2.096,188,2.997,189,2.066,198,2.732,199,2.096,201,2.771,208,2.757,209,1.761,335,2.325,341,4.594,344,2.61,347,3.122,349,2.157,436,4.882,450,6.617,672,3.052,680,3.273,941,3.273,954,2.479,1059,6.163,1065,4.069,1070,4.216,1071,4.216,1270,3.357,1275,6.891,1281,4.216,1286,4.413,1433,4.648,1458,7.776,3378,7.171,3396,7.212,3397,5.339,3412,5.339,3413,5.939,3414,5.339,3415,5.939,3416,5.939,3417,7.743,3418,5.939]],["title/injectables/PaymentsService.html",[294,0.727,3396,3.797]],["body/injectables/PaymentsService.html",[3,0.016,4,0.016,5,0.016,7,0.123,8,0.66,13,0.539,14,0.005,15,0.72,16,1.146,17,0.173,25,2.233,29,1.925,30,1.88,32,0.016,71,1.187,77,0.002,79,2.06,89,0.867,107,0.996,126,2.15,139,1.412,164,0.002,168,0.211,171,0.622,175,1.029,177,1.29,178,0.261,179,0.053,209,0.76,222,0.832,223,1.216,224,3.822,234,0.843,238,1.451,239,1.368,245,2.83,246,1.626,256,1.569,269,3.467,272,2.005,276,1.819,291,2.442,294,0.592,296,0.741,298,1.975,301,2.582,311,0.8,335,3.638,401,1.317,436,4.192,459,1.746,468,3.869,497,0.891,505,1.412,506,1.189,509,2.335,522,1.626,578,3.735,581,3.735,582,4.302,583,3.909,592,5.928,595,1.53,596,2.133,597,1.683,622,4.868,640,1.904,641,1.819,642,1.904,643,1.904,690,2.418,734,2.133,754,2.303,759,2.303,783,1.897,786,1.83,874,4.302,876,2.133,909,1.904,941,2.9,942,1.904,943,1.904,951,1.576,959,3.467,1059,4.778,1070,1.819,1071,1.819,1086,5.001,1110,1.819,1144,2.005,1244,2.005,1280,5.071,1281,1.819,1282,1.347,1295,4.38,1310,0.958,1320,2.133,1342,2.303,1356,4.38,1362,2.303,1364,2.704,1405,1.53,1602,2.735,1846,2.133,2067,4.118,2069,4.118,2070,2.005,2073,2.005,2076,3.735,2079,2.005,2082,4.118,2091,2.005,2120,4.73,2121,4.73,2122,4.73,2123,4.73,2124,4.73,2125,4.73,2127,4.73,2128,4.73,2135,2.303,2138,2.303,2142,2.303,2145,6.675,2149,2.303,2151,2.303,2153,2.303,2155,2.303,2156,2.303,2161,2.303,2167,3.744,2168,2.303,2169,2.303,2171,3.744,2172,2.303,2173,2.005,2175,3.744,2176,2.303,2177,2.303,2180,5.59,2181,2.303,2182,2.303,2188,2.303,2192,3.744,2195,2.303,2196,2.303,2197,2.303,2198,2.303,2208,2.303,2210,3.744,2211,3.744,2212,2.303,2216,4.73,2217,2.303,2218,4.73,2219,2.303,2220,2.303,2221,5.447,2222,2.303,2223,2.303,2224,2.303,2225,2.303,2226,3.744,2227,2.303,2228,2.303,2229,2.303,2230,2.303,2231,2.303,3396,3.094,3419,2.562,3420,5.262,3421,2.562,3422,4.165,3423,2.562,3424,2.562,3425,2.562,3426,2.562,3427,2.562,3428,2.562,3429,2.562,3430,2.562,3431,2.562,3432,2.562,3433,2.562,3434,2.562,3435,4.165,3436,2.562,3437,2.562,3438,2.562,3439,2.562,3440,2.562,3441,2.562,3442,2.562,3443,2.562,3444,4.165,3445,2.562,3446,2.562,3447,2.562,3448,2.562,3449,2.562,3450,2.562,3451,2.562,3452,2.562,3453,2.562,3454,2.562,3455,2.562,3456,2.562,3457,2.562,3458,2.303,3459,4.165,3460,2.562,3461,4.165,3462,5.262,3463,2.562,3464,2.562,3465,2.562,3466,4.165,3467,2.562,3468,2.303,3469,2.562,3470,2.562,3471,2.562,3472,2.562,3473,2.562,3474,2.562,3475,2.562,3476,2.562,3477,2.562,3478,2.562,3479,2.562,3480,2.562,3481,2.562,3482,2.562,3483,2.562,3484,2.562,3485,2.303,3486,2.562,3487,2.562,3488,2.303,3489,2.562,3490,2.562]],["title/interfaces/PrdOrSbxKeyRequest.html",[0,0.763,3491,4.594]],["body/interfaces/PrdOrSbxKeyRequest.html",[0,1.111,2,1.926,3,0.048,4,0.048,5,0.048,7,0.356,8,1.413,13,0.576,14,0.004,15,0.813,17,0.141,32,0.048,37,2.336,77,0.004,164,0.004,168,0.169,169,2.552,329,3.873,389,4.575,1203,7.025,1248,4.801,3115,6.193,3491,8.014,3492,7.44,3493,7.44]],["title/interfaces/Project.html",[0,0.763,379,2.57]],["body/interfaces/Project.html",[0,1.083,2,1.878,3,0.047,4,0.047,5,0.047,7,0.347,8,1.391,13,0.61,14,0.004,15,0.831,17,0.138,32,0.047,37,2.301,77,0.004,107,1.172,164,0.004,168,0.165,169,2.489,221,4.077,222,2.357,223,1.722,224,4.312,379,4.416,788,4.389,3494,7.255]],["title/controllers/ProjectsController.html",[165,1.135,3495,4.254]],["body/controllers/ProjectsController.html",[3,0.031,4,0.015,5,0.015,7,0.11,13,0.572,14,0.005,15,0.806,17,0.148,21,1.127,30,1.908,32,0.015,38,1.904,42,1.534,55,1.762,64,2.695,71,1.154,77,0.002,104,0.955,107,1.056,125,1.997,149,5.034,157,4.144,164,0.002,165,0.843,167,0.533,168,0.204,169,3.073,171,0.567,173,2.346,175,0.99,177,1.464,178,0.233,179,0.048,202,3.207,223,0.417,234,0.463,238,1.539,239,1.452,249,0.764,256,0.458,286,1.151,322,2.697,329,3.79,361,3.807,364,3.453,366,3.807,368,3.453,369,1.905,372,5.296,374,7.028,376,4.711,377,4.711,379,5.064,383,5.028,384,3.557,385,6.244,389,4.613,394,5.204,395,4.018,396,3.717,397,4.927,401,4.79,402,1.905,408,1.905,411,3.16,412,2.82,413,3.16,414,4.804,415,1.261,429,4.43,457,4.048,459,3.315,462,3.613,465,4.048,474,1.905,477,1.905,485,1.905,493,1.905,586,2.146,602,2.057,606,5.871,629,2.176,630,1.639,631,1.791,632,1.083,635,1.503,636,1.625,637,1.625,638,3.546,639,1.791,645,6.759,648,1.791,788,1.698,829,2.5,835,1.791,1011,2.41,1644,5.325,1672,3.984,1677,3.412,1902,5.028,2818,3.16,2820,2.057,2831,6.442,2832,3.453,2835,1.905,3007,2.82,3016,6.444,3089,4.711,3303,2.057,3307,3.412,3312,3.16,3315,2.057,3330,3.807,3495,3.16,3496,2.289,3497,4.864,3498,4.372,3499,4.372,3500,4.864,3501,2.289,3502,2.289,3503,3.796,3504,2.057,3505,2.289,3506,2.289,3507,2.289,3508,2.289,3509,2.289,3510,2.289,3511,2.289,3512,2.057,3513,2.289,3514,3.796,3515,4.864,3516,2.289,3517,3.796,3518,5.088,3519,5.66,3520,2.289,3521,2.289,3522,2.057,3523,2.289,3524,2.289,3525,2.289,3526,3.796,3527,2.057,3528,2.289,3529,2.289,3530,2.289,3531,2.289,3532,2.289,3533,2.289,3534,2.289,3535,2.289,3536,2.057,3537,6.091,3538,2.289,3539,2.289,3540,3.412,3541,2.289,3542,2.289,3543,2.289,3544,1.905,3545,3.16,3546,2.057,3547,2.289,3548,2.289,3549,3.796,3550,2.289,3551,2.289,3552,2.289,3553,2.289,3554,2.289,3555,2.289,3556,2.289,3557,2.289,3558,2.289,3559,2.289,3560,2.289,3561,2.289,3562,2.289,3563,2.289,3564,3.796,3565,2.289,3566,2.289,3567,2.289,3568,2.289,3569,2.289]],["title/modules/ProjectsModule.html",[181,1.096,196,3.244]],["body/modules/ProjectsModule.html",[3,0.037,4,0.037,5,0.037,14,0.005,17,0.189,32,0.037,77,0.003,80,1.905,107,0.901,164,0.003,167,1.755,168,0.13,169,1.958,178,0.581,179,0.119,181,1.812,183,1.931,184,1.958,185,2.014,186,2.014,187,2.014,188,2.939,189,2.939,196,6.498,197,5.732,198,2.661,199,2.014,201,2.7,202,4.021,204,3.89,241,4.157,249,1.905,341,4.543,347,2.999,677,3.226,678,4.776,679,2.508,681,4.264,682,4.264,683,3.964,685,4.264,1728,5.903,1734,5.13,1735,5.13,2832,7.315,2835,4.75,3051,6.78,3495,7.032,3570,5.13,3571,5.707,3572,5.13,3573,5.13,3574,5.707,3575,5.707,3576,7.543,3577,5.707,3578,5.707,3579,5.707]],["title/injectables/ProjectsService.html",[294,0.727,2832,3.628]],["body/injectables/ProjectsService.html",[3,0.02,4,0.02,5,0.02,7,0.15,13,0.608,14,0.005,15,0.817,17,0.171,29,1.616,30,1.378,32,0.02,38,1.913,42,1.265,71,1.228,77,0.002,107,1.123,126,2.408,164,0.002,168,0.216,169,3.26,171,0.73,175,1.052,177,1.438,178,0.319,179,0.065,202,3.294,222,1.017,223,0.891,224,2.984,234,0.989,238,1.637,239,1.544,249,1.045,256,1.358,294,0.695,296,0.906,298,2.112,329,3.9,331,3.825,348,1.171,349,1.137,361,4.704,364,4.266,366,4.704,368,4.266,369,2.607,379,1.575,390,2.815,391,6.378,394,3.588,401,3.49,402,2.607,408,2.607,416,2.607,417,2.815,457,5.003,459,4.096,462,4.465,465,5.003,468,3.49,474,2.607,483,2.73,485,2.607,493,2.607,497,1.09,509,2.095,586,2.763,679,1.376,693,4.274,695,4.865,720,2.057,724,1.818,725,1.818,726,1.818,737,2.815,749,2.815,751,4.393,752,2.815,753,2.815,829,3.089,835,2.451,1011,3.815,1644,5.797,1672,3.815,1728,2.451,1748,4.393,1794,2.815,1897,7.788,2076,2.223,2832,3.469,3236,2.815,3330,4.704,3499,5.403,3504,2.815,3512,2.815,3527,2.815,3536,2.815,3537,6.599,3544,2.607,3545,4.068,3546,2.815,3580,3.132,3581,6.01,3582,3.132,3583,6.01,3584,3.132,3585,3.132,3586,3.132,3587,3.132,3588,3.132,3589,3.132,3590,3.132,3591,3.132,3592,3.132,3593,3.132,3594,3.132,3595,3.132,3596,3.132,3597,3.132,3598,3.132,3599,3.132,3600,3.132,3601,3.132,3602,3.132,3603,3.132,3604,3.132,3605,3.132,3606,3.132,3607,3.132,3608,4.887,3609,3.132,3610,3.132,3611,3.132,3612,4.887,3613,3.132,3614,3.132,3615,3.132,3616,3.132,3617,3.132,3618,3.132,3619,3.132,3620,3.132]],["title/injectables/RelayAPIService.html",[294,0.727,3621,3.797]],["body/injectables/RelayAPIService.html",[3,0.029,4,0.029,5,0.029,7,0.213,13,0.411,14,0.005,17,0.163,29,2.004,30,1.257,32,0.029,35,2.278,71,1.117,77,0.003,79,1.745,89,1.509,107,1.139,126,2.312,164,0.003,168,0.208,171,0.95,175,0.996,177,1.253,178,0.454,179,0.093,209,1.322,223,1.161,234,1.288,238,1.49,239,1.406,245,3.424,255,2.662,256,1.713,261,5.059,294,0.906,296,1.289,298,2.001,301,3.144,509,2.174,630,2.749,690,3.695,762,3.058,763,2.752,901,2.929,902,5.315,917,4.309,954,1.861,955,2.83,956,2.83,957,2.662,993,2.83,994,3.165,995,2.929,996,2.929,997,2.929,1207,3.49,1211,6.505,1213,2.83,1216,6.32,1218,2.929,1226,4.518,1227,3.313,1248,2.242,1292,3.039,1305,6.141,1326,4.008,1487,4.355,1551,4.008,1635,3.598,2375,5.518,2698,3.711,2699,4.008,2700,3.711,3621,4.729,3622,7.627,3623,5.269,3624,7.423,3625,7.423,3626,4.459,3627,4.459,3628,4.008,3629,4.459,3630,4.459,3631,4.459,3632,4.008,3633,4.459,3634,4.459,3635,4.459,3636,8.903,3637,4.459,3638,7.423,3639,4.459,3640,4.459]],["title/interfaces/RelayAccount.html",[0,0.763,3641,4.254]],["body/interfaces/RelayAccount.html",[0,1.052,2,1.824,3,0.045,4,0.045,5,0.045,7,0.337,8,1.367,13,0.628,14,0.004,15,0.827,17,0.134,32,0.045,37,2.26,77,0.004,85,2.91,164,0.004,168,0.16,221,4.025,222,2.288,223,1.771,329,3.803,330,5.354,1007,5.974,1487,3.789,3641,7.179,3642,5.513,3643,6.332,3644,7.044,3645,8.733]],["title/controllers/RelayAccountsController.html",[165,1.135,3646,4.254]],["body/controllers/RelayAccountsController.html",[3,0.041,4,0.041,5,0.041,7,0.308,13,0.416,14,0.005,15,0.709,17,0.17,32,0.041,71,0.84,77,0.003,107,0.769,125,2.877,157,3.171,164,0.003,165,1.811,167,1.498,168,0.185,171,1.217,173,1.708,175,0.72,177,1.262,178,0.655,179,0.134,223,1.174,234,1.303,238,1.121,239,1.057,249,2.149,256,1.288,329,3.503,374,6.058,379,4.101,383,6.058,395,5.789,396,5.356,397,5.356,415,3.548,597,6.514,1487,5.335,1492,5.038,1493,5.038,1494,7.004,3642,6.382,3646,6.787,3647,6.438,3648,8.045,3649,5.787,3650,8.154,3651,6.438,3652,6.649,3653,5.787,3654,6.438]],["title/modules/RelayAccountsModule.html",[181,1.096,1491,3.797]],["body/modules/RelayAccountsModule.html",[3,0.042,4,0.042,5,0.042,14,0.004,17,0.185,32,0.042,77,0.003,80,2.168,164,0.003,167,1.908,168,0.148,178,0.661,179,0.135,181,1.927,183,2.198,184,2.228,185,2.292,186,2.292,187,2.292,188,3.126,189,3.126,198,2.893,199,2.292,201,2.935,341,4.703,347,3.414,1487,3.494,1491,7.655,1492,7.033,1493,7.033,1494,7.387,3642,5.083,3646,7.48,3652,7.798,3653,5.839,3655,5.839,3656,5.839,3657,6.495,3658,5.839,3659,6.495,3660,6.495,3661,8.2,3662,6.495]],["title/injectables/RelayAccountsService.html",[294,0.727,3652,3.797]],["body/injectables/RelayAccountsService.html",[3,0.039,4,0.039,5,0.039,7,0.293,13,0.511,14,0.005,15,0.692,17,0.186,29,1.811,32,0.039,71,0.8,77,0.003,107,0.944,126,1.749,164,0.003,168,0.199,171,1.179,175,0.884,177,0.948,178,0.624,179,0.128,222,1.99,234,1.599,238,1.375,239,1.297,256,1.226,294,1.124,296,1.772,298,1.77,329,3.423,330,4.819,468,4.747,497,2.131,502,4.552,1487,4.704,1492,6.183,1493,6.183,1494,7.229,1678,4.306,3641,5.1,3642,6.843,3643,5.507,3645,7.102,3648,7.86,3649,5.507,3652,5.869,3663,6.127,3664,6.127,3665,6.127,3666,7.9,3667,6.127,3668,5.507,3669,6.127,3670,6.127,3671,6.127,3672,6.127,3673,6.127,3674,6.127,3675,6.127,3676,6.127,3677,6.127,3678,6.127,3679,6.127]],["title/classes/RelayDto.html",[179,0.107,3680,3.628]],["body/classes/RelayDto.html",[3,0.032,4,0.032,5,0.032,7,0.239,8,1.091,12,4.345,13,0.652,14,0.005,15,0.824,17,0.095,32,0.032,35,2.822,55,3.195,77,0.003,85,2.655,164,0.003,168,0.231,173,2.675,175,1.128,179,0.143,229,1.81,446,5.22,449,2.271,762,3.39,763,3.051,783,3.592,870,4.936,880,4.457,1007,4.849,1463,3.347,1617,6.211,1626,5.114,2236,5.374,2237,5.374,2514,6.563,2542,6.563,2548,6.563,2892,5.22,3680,4.887,3681,4.985,3682,7.885,3683,4.985,3684,4.985,3685,6.884,3686,4.985,3687,4.985,3688,4.985,3689,4.985,3690,4.985,3691,3.901,3692,4.985,3693,4.985,3694,4.985,3695,4.985,3696,4.985,3697,4.985,3698,7.885,3699,6.188]],["title/classes/ScannerService.html",[179,0.107,1962,3.628]],["body/classes/ScannerService.html",[3,0.033,4,0.033,5,0.033,7,0.245,13,0.454,14,0.005,17,0.163,25,2.948,29,1.782,32,0.033,38,2.006,48,2.006,51,1.888,72,1.975,77,0.003,85,3.029,104,2.139,107,0.838,125,2.476,164,0.003,168,0.205,171,1.047,175,0.963,177,1.238,179,0.107,209,1.52,223,1.279,229,1.861,234,1.42,238,1.221,239,1.152,291,2.379,298,1.883,300,3.152,301,3.192,483,2.162,509,2.419,769,5.136,886,4.011,1060,3.641,1062,2.524,1077,5.864,1078,5.864,1118,4.607,1155,3.808,1338,2.139,1787,3.638,1788,3.253,1942,5.944,1945,6.493,1948,5.679,1949,6.392,1960,5.944,1962,4.981,1995,3.808,2008,3.493,2255,7.161,3700,8.1,3701,5.125,3702,5.125,3703,5.125,3704,5.125,3705,5.125,3706,7.016,3707,5.125,3708,5.125,3709,9.305,3710,5.125,3711,5.125,3712,9.011,3713,7.016,3714,8,3715,5.125,3716,4.607,3717,5.125,3718,5.125,3719,5.125,3720,5.125,3721,5.125]],["title/interfaces/ScannerStatus.html",[0,0.763,3722,4.594]],["body/interfaces/ScannerStatus.html",[0,1.108,2,1.921,3,0.048,4,0.048,5,0.048,7,0.355,8,1.41,13,0.575,14,0.004,15,0.755,17,0.141,32,0.048,37,2.333,77,0.004,85,2.977,164,0.004,168,0.169,221,4.117,222,2.411,223,1.623,787,4.679,1060,2.998,1992,7.019,3722,8.002,3723,7.421,3724,7.421]],["title/classes/ScannerStatusService.html",[179,0.107,1945,3.483]],["body/classes/ScannerStatusService.html",[3,0.04,4,0.04,5,0.04,7,0.298,13,0.403,14,0.005,29,1.654,32,0.04,38,2.439,71,1.042,77,0.003,85,2.752,107,0.954,126,1.779,164,0.003,168,0.211,171,1.192,175,0.986,177,1.236,179,0.13,223,1.456,229,2.263,234,1.616,238,1.39,239,1.311,291,4.092,298,1.99,509,2.367,533,4.877,769,4.768,787,4.171,1060,3.756,1945,5.443,1992,6.257,3700,8.357,3725,6.231,3726,9.296,3727,8.814,3728,6.231,3729,8.814,3730,6.231,3731,7.987,3732,6.231,3733,6.231,3734,6.231,3735,6.231,3736,8.814,3737,7.987,3738,6.231,3739,6.231]],["title/interfaces/SmartContractWallet.html",[0,0.763,3740,4.254]],["body/interfaces/SmartContractWallet.html",[0,1.072,2,1.86,3,0.046,4,0.046,5,0.046,7,0.344,8,1.383,13,0.608,14,0.004,15,0.83,17,0.136,32,0.046,37,2.287,77,0.004,164,0.004,168,0.163,221,4.06,222,2.334,223,1.714,329,3.828,762,2.397,763,2.158,877,5.337,880,5.528,1035,4.56,1635,5.528,2892,3.692,3740,7.265,3741,5.099]],["title/interfaces/SmartWallet.html",[0,0.763,2392,3.357]],["body/interfaces/SmartWallet.html",[0,1.073,2,1.375,3,0.034,4,0.034,5,0.034,7,0.254,8,1.139,13,0.67,14,0.005,15,0.856,17,0.136,21,4.301,32,0.046,37,1.884,55,4.366,77,0.003,164,0.003,168,0.121,221,3.519,222,1.726,223,1.898,483,1.637,762,1.773,763,2.448,802,2.255,843,3.372,880,4.936,1161,3.62,1635,4.936,2392,4.722,2419,6.199,2420,6.199,2421,6.199,2892,2.73,3741,3.771,3742,4.775,3743,7.268,3744,6.834,3745,6.834,3746,7.268,3747,7.268,3748,7.268,3749,7.268,3750,7.268,3751,7.268,3752,5.012,3753,3.489,3754,3.489,3755,4.775,3756,3.946]],["title/interfaces/SmartWalletService.html",[0,0.763,3756,3.797]],["body/interfaces/SmartWalletService.html",[0,1.224,2,1.682,3,0.042,4,0.042,5,0.042,7,0.311,8,1.299,13,0.42,14,0.004,15,0.835,17,0.156,21,3.199,32,0.053,37,1.702,45,4.76,55,3.806,77,0.003,164,0.003,168,0.148,221,3.541,222,2.11,223,1.941,483,2.002,762,2.168,763,2.699,802,2.757,843,5.992,880,3.671,1161,4.427,1635,3.671,2392,4.266,2419,4.611,2420,4.611,2421,4.611,2892,3.338,3741,4.611,3742,5.839,3743,5.406,3744,5.083,3745,5.083,3746,5.406,3747,5.406,3748,5.406,3749,5.406,3750,5.406,3751,5.406,3752,5.527,3753,4.266,3754,4.266,3755,5.839,3756,6.092]],["title/injectables/SmartWalletsAAEventsService.html",[294,0.727,1710,3.797]],["body/injectables/SmartWalletsAAEventsService.html",[3,0.022,4,0.022,5,0.022,7,0.163,8,0.828,13,0.41,14,0.005,15,0.64,17,0.165,25,2.619,29,1.879,30,1.473,32,0.022,35,1.87,48,2.999,51,1.258,71,0.446,72,2.953,77,0.002,78,2.953,89,1.155,107,0.965,125,3.379,164,0.002,168,0.197,171,0.78,175,0.941,177,1.186,178,0.347,179,0.071,223,1.397,234,1.057,238,1.406,239,1.327,249,1.14,256,1.682,282,5.281,290,3.316,294,0.743,295,5.523,296,0.987,298,1.956,311,1.066,321,2.521,329,1.337,379,1.717,384,1.794,401,1.755,414,3.709,497,1.188,509,2.387,597,2.243,638,3.49,679,1.5,693,4.127,724,1.982,725,1.982,726,1.982,762,2.967,763,2.927,768,2.953,785,3.853,815,5.759,1146,4.669,1241,1.982,1337,2.424,1338,1.425,1364,2.685,1384,1.402,1503,5.505,1621,4.715,1623,2.537,1678,1.682,1710,3.881,1711,5.171,1725,6.788,1727,2.424,1729,2.537,1730,2.327,1749,5.705,1795,2.842,1816,2.537,1880,3.069,1883,4.696,1884,3.069,1885,3.069,1889,3.069,1892,3.069,1894,3.069,1899,6.39,1900,4.966,1902,2.537,2892,4.457,3757,3.069,3758,6.346,3759,6.346,3760,6.346,3761,6.346,3762,6.346,3763,3.414,3764,6.726,3765,5.225,3766,3.414,3767,3.414,3768,3.414,3769,3.414,3770,7.559,3771,3.414,3772,3.414,3773,3.414,3774,3.414,3775,3.414,3776,3.414,3777,5.225,3778,2.672,3779,3.414,3780,3.414,3781,7.68,3782,8.89,3783,4.696,3784,5.564,3785,5.564,3786,4.696,3787,5.225,3788,3.414,3789,2.842,3790,3.414,3791,3.414,3792,3.069,3793,3.414,3794,3.414,3795,3.069,3796,3.069,3797,3.414,3798,5.225,3799,3.414,3800,3.414,3801,3.414,3802,3.414,3803,3.414,3804,3.414,3805,3.414,3806,3.414,3807,5.225,3808,5.225,3809,3.414]],["title/injectables/SmartWalletsAAService.html",[294,0.727,3810,3.797]],["body/injectables/SmartWalletsAAService.html",[3,0.037,4,0.025,5,0.025,7,0.185,8,0.909,12,2.131,13,0.489,14,0.005,15,0.542,17,0.178,25,2.789,29,1.675,30,2.135,32,0.025,48,2.678,51,1.425,71,0.749,72,2.637,77,0.002,79,2.246,89,1.309,107,0.904,125,3.094,126,1.639,139,3.163,164,0.002,168,0.193,171,0.857,175,0.905,177,1.059,178,0.394,179,0.081,209,1.147,222,1.256,223,1.38,232,2.033,234,1.161,238,1.318,239,1.243,245,2.08,246,2.455,256,1.944,276,2.745,282,5.083,294,0.816,296,1.118,298,1.862,301,3.009,311,1.207,329,1.514,330,2.131,436,1.945,468,3.89,497,1.345,509,2.032,762,3.006,763,3.025,768,2.186,783,3.117,802,3.213,843,4.806,858,2.745,861,4.519,880,3.244,907,2.179,941,2.131,951,2.378,1035,3.643,1039,2.378,1060,2.318,1280,6.225,1281,2.745,1282,2.033,1338,1.614,1405,3.426,1441,3.516,1503,2.455,1635,4.789,1678,3.37,1791,2.745,2892,4.354,3216,3.219,3458,3.476,3740,3.219,3741,4.074,3752,5.842,3753,2.54,3754,2.54,3756,4.263,3784,5.355,3785,3.027,3810,4.263,3811,6.63,3812,3.867,3813,6.842,3814,6.842,3815,3.476,3816,7.615,3817,6.842,3818,5.739,3819,2.873,3820,3.867,3821,3.867,3822,3.867,3823,3.867,3824,3.867,3825,5.739,3826,3.476,3827,3.476,3828,3.476,3829,3.219,3830,3.867,3831,3.867,3832,3.476,3833,3.476,3834,6.151,3835,3.476,3836,6.805,3837,5.159,3838,3.867,3839,3.476,3840,3.476,3841,3.476,3842,3.867,3843,3.476,3844,3.867,3845,3.867,3846,3.476,3847,3.476,3848,3.476,3849,3.476,3850,3.476,3851,3.867,3852,3.867,3853,3.867,3854,3.867,3855,3.476]],["title/controllers/SmartWalletsAPIController.html",[165,1.135,3856,4.254]],["body/controllers/SmartWalletsAPIController.html",[3,0.03,4,0.03,5,0.03,7,0.221,13,0.561,14,0.005,17,0.179,21,2.272,32,0.03,71,1.132,77,0.003,104,1.926,107,1.036,164,0.003,165,1.448,167,1.074,168,0.205,171,0.974,173,2.301,175,0.97,177,1.342,178,0.47,179,0.096,223,0.841,234,0.934,238,1.51,239,1.424,256,0.923,286,2.32,322,2.578,348,2.439,349,1.675,384,2.425,481,4.558,629,3.384,630,1.992,632,2.183,638,4.44,762,1.54,763,3.097,802,2.768,843,4.802,854,2.929,951,2.838,1172,2.755,1180,2.227,1182,2.838,1282,2.425,1441,3.352,1442,6.57,1487,4.069,1678,2.272,2093,2.482,2271,2.929,2272,3.145,2375,5.156,2376,5.37,2770,6.837,2860,3.841,2892,4.627,2902,4.148,2951,4.148,3623,5.37,3680,6.391,3752,5.537,3753,3.03,3754,3.03,3819,3.428,3856,5.428,3857,5.863,3858,4.148,3859,4.614,3860,4.614,3861,4.614,3862,4.614,3863,4.614,3864,4.148,3865,4.614,3866,3.611,3867,4.614,3868,4.614,3869,5.37,3870,3.611,3871,7.797,3872,4.148,3873,4.148,3874,3.428,3875,4.148,3876,7.39,3877,4.614,3878,4.614,3879,4.614,3880,4.614,3881,4.148,3882,4.148,3883,4.614,3884,4.614,3885,4.148,3886,4.614]],["title/modules/SmartWalletsAPIModule.html",[181,1.096,1425,3.628]],["body/modules/SmartWalletsAPIModule.html",[3,0.035,4,0.035,5,0.035,14,0.005,17,0.192,29,1.114,32,0.035,71,0.702,77,0.003,80,1.796,107,0.643,164,0.003,167,1.687,168,0.122,178,0.548,179,0.112,181,1.759,183,1.82,184,1.846,185,1.898,186,1.898,187,1.898,188,2.854,189,1.872,198,2.559,199,1.898,201,2.936,208,3.366,209,1.596,214,4.478,241,2.965,249,1.796,298,1.089,301,3.012,322,2.02,336,5.203,344,2.364,348,3.427,349,1.954,394,3.212,497,1.872,677,3.041,678,4.099,679,2.364,681,3.041,682,3.041,683,2.828,685,3.041,763,2.986,851,6.434,853,4.837,854,3.415,857,4.478,858,3.819,859,4.837,860,4.837,861,3.212,862,4.478,863,3.123,864,6.036,865,3.997,1214,4.943,1269,3.415,1270,3.041,1272,3.534,1273,4.211,1274,4.211,1282,2.828,1425,7.132,1441,4.511,1442,6.232,2892,2.765,2947,4.837,3856,6.828,3869,6.702,3887,4.837,3888,5.38,3889,4.837,3890,6.828,3891,5.38]],["title/injectables/SmartWalletsAPIService.html",[294,0.727,3869,3.628]],["body/injectables/SmartWalletsAPIService.html",[3,0.024,4,0.024,5,0.024,7,0.176,8,0.876,13,0.558,14,0.005,17,0.168,25,2.721,30,1.559,32,0.024,71,1.185,77,0.002,89,1.244,100,2.506,107,1.06,125,1.297,126,1.05,164,0.002,168,0.216,171,0.825,175,1.051,177,1.405,178,0.374,179,0.077,223,1.346,234,1.118,238,1.545,239,1.457,249,1.227,256,1.477,294,0.786,296,1.063,298,2.075,311,1.148,322,2.65,483,2.994,497,1.279,638,4.136,679,1.616,693,4.286,724,2.135,725,2.135,726,2.135,763,3.114,783,3.025,802,2.818,843,4.687,951,2.261,1111,2.667,1214,2.506,1215,3.061,1292,2.506,1310,2.761,1384,2.269,1441,2.84,1442,6.754,1487,3.972,1670,5.196,1678,1.811,1679,2.878,1681,2.878,1682,5.902,1684,4.933,1697,2.732,1698,2.334,1759,6.146,1859,2.878,1864,6.146,2375,4.525,2376,4.713,2743,4.968,2770,6.303,2892,4.89,3192,3.305,3623,4.713,3628,3.305,3632,3.305,3680,6.123,3752,5.304,3753,2.415,3754,2.415,3819,2.732,3858,3.305,3864,3.305,3866,2.878,3869,3.923,3870,2.878,3874,2.732,3892,6.146,3893,6.64,3894,6.146,3895,3.677,3896,5.527,3897,3.677,3898,3.677,3899,2.878,3900,3.677,3901,3.677,3902,3.677,3903,3.677,3904,3.677,3905,5.527,3906,9.078,3907,3.677,3908,3.677,3909,3.677,3910,3.677,3911,3.677,3912,3.677,3913,3.677]],["title/controllers/SmartWalletsAPIV2Controller.html",[165,1.135,3890,4.254]],["body/controllers/SmartWalletsAPIV2Controller.html",[3,0.03,4,0.03,5,0.03,7,0.221,13,0.489,14,0.005,15,0.788,17,0.183,21,2.276,25,2.406,30,1.303,32,0.03,35,1.654,71,0.988,77,0.003,107,0.904,126,1.32,164,0.003,165,1.45,167,1.075,168,0.187,171,0.975,173,2.008,175,0.847,177,1.172,178,0.47,179,0.096,180,4.145,223,1.191,234,0.935,238,1.318,239,1.243,256,1.306,267,2.429,286,2.324,298,1.532,310,5.925,322,2.634,329,2.963,348,2.442,349,1.678,379,3.284,389,2.842,481,2.429,629,3.387,630,1.996,632,2.187,638,2.975,762,1.542,763,3.035,802,2.771,843,4.806,854,2.934,951,2.842,1111,2.23,1179,4.851,1180,2.23,1181,3.035,1182,2.842,1183,3.847,1248,2.324,1282,2.429,1310,3.077,1384,1.898,1441,3.355,1442,6.161,1670,5.925,1678,2.276,1681,3.617,1682,6.573,1684,3.433,1697,3.433,1698,2.934,1759,6.848,1857,4.154,1864,6.848,2770,5.607,2860,3.847,2892,4.228,3131,4.154,3623,5.374,3752,5.694,3753,3.035,3754,3.035,3846,4.154,3855,4.154,3857,4.154,3869,5.374,3871,5.869,3872,4.154,3873,4.154,3874,3.433,3875,4.154,3876,4.154,3890,5.435,3899,3.617,3914,4.154,3915,4.621,3916,4.621,3917,4.621,3918,4.621,3919,4.621,3920,4.621,3921,6.529,3922,7.571,3923,4.621,3924,4.621,3925,4.621,3926,4.621,3927,4.621,3928,4.621,3929,4.621,3930,4.621,3931,4.621,3932,4.621,3933,4.621,3934,4.621]],["title/classes/SmartWalletsAuthDto.html",[179,0.107,3752,3.143]],["body/classes/SmartWalletsAuthDto.html",[3,0.04,4,0.04,5,0.04,7,0.3,8,1.269,12,4.868,13,0.622,14,0.004,15,0.817,17,0.119,32,0.04,77,0.003,164,0.003,168,0.224,173,2.553,175,1.077,179,0.167,229,2.272,329,3.457,446,5.059,449,2.851,762,3.286,763,3.137,870,5.405,880,4.993,1617,5.801,1626,4.649,1635,4.993,1852,6.562,3691,4.898,3752,4.925,3935,9.845,3936,6.258,3937,6.258,3938,6.258,3939,6.258,3940,6.258,3941,6.258]],["title/controllers/SmartWalletsController.html",[165,1.135,3942,4.254]],["body/controllers/SmartWalletsController.html",[3,0.029,4,0.029,5,0.029,7,0.218,13,0.558,14,0.005,17,0.175,32,0.029,71,1.229,77,0.003,107,1.03,164,0.003,165,1.434,167,1.059,168,0.214,171,0.964,173,2.445,175,1.031,177,1.426,178,0.463,179,0.095,223,1.177,234,0.921,238,1.502,239,1.416,249,1.518,256,1.292,415,2.507,629,2.888,638,2.942,762,3.144,763,3.046,802,3.468,843,4.765,951,2.798,1441,3.857,1487,4.038,1503,5.979,2375,5.116,2376,5.328,2770,6.622,2892,4.84,3623,5.328,3680,6.362,3752,5.511,3753,2.988,3754,2.988,3810,4.797,3811,5.053,3819,3.38,3836,4.089,3866,3.56,3870,3.56,3874,3.38,3892,6.8,3894,6.8,3899,3.56,3942,5.374,3943,4.549,3944,6.457,3945,4.549,3946,4.089,3947,6.457,3948,4.549,3949,6.8,3950,6.457,3951,4.549,3952,6.457,3953,4.549,3954,4.089,3955,6.457,3956,4.549,3957,6.457,3958,4.549,3959,6.457,3960,4.549,3961,4.797,3962,4.089,3963,4.089,3964,4.549,3965,4.549,3966,4.549,3967,4.549,3968,4.549,3969,4.549,3970,4.549,3971,4.549,3972,4.549,3973,4.549]],["title/injectables/SmartWalletsEventsService.html",[294,0.727,3974,4]],["body/injectables/SmartWalletsEventsService.html",[3,0.016,4,0.016,5,0.016,7,0.119,8,0.645,13,0.502,14,0.005,17,0.161,21,2.542,25,2.196,29,1.663,30,1.456,32,0.016,35,2.352,38,1.594,48,2.333,71,0.858,72,2.297,74,1.851,76,5.071,77,0.002,89,0.843,107,0.987,125,3.045,164,0.002,168,0.21,171,0.608,175,1.023,177,1.309,178,0.254,179,0.052,209,0.739,222,0.81,223,1.286,234,0.824,238,1.438,239,1.356,256,1.488,265,3.187,282,4.428,290,2.585,294,0.579,296,0.721,298,2.037,300,1.533,301,2.419,311,0.778,468,3.063,483,1.255,497,0.867,506,1.157,509,2.358,638,1.135,690,2.364,762,3.139,763,3.061,802,2.53,829,1.281,880,4.387,886,1.95,943,1.851,1039,2.504,1062,1.227,1077,4.063,1146,2.674,1317,1.582,1441,3.063,1503,5.92,1635,4.205,1672,1.582,1678,2.005,1787,1.769,1788,1.582,1789,1.851,1790,1.851,1791,2.89,1809,7.219,1810,2.24,1811,5.951,1829,2.24,1830,2.24,1900,1.95,2392,1.637,2403,6.074,2419,4.664,2420,3.665,2421,3.665,2677,2.074,2892,4.748,3741,1.769,3743,2.074,3744,3.187,3745,4.04,3746,2.074,3747,2.074,3748,2.074,3749,2.074,3750,2.074,3751,2.074,3757,2.24,3764,6.193,3770,5.358,3778,1.95,3781,5.869,3783,2.24,3784,4.665,3785,4.665,3786,3.66,3795,2.24,3796,4.641,3829,2.074,3949,3.389,3974,3.187,3975,5.162,3976,5.162,3977,5.162,3978,5.162,3979,5.162,3980,5.162,3981,5.162,3982,5.162,3983,5.961,3984,4.641,3985,5.162,3986,5.162,3987,4.641,3988,4.072,3989,2.492,3990,2.492,3991,2.492,3992,2.492,3993,2.492,3994,2.492,3995,2.492,3996,2.492,3997,2.492,3998,2.492,3999,2.492,4000,2.492,4001,2.492,4002,2.492,4003,2.492,4004,2.492,4005,2.492,4006,2.492,4007,2.492,4008,2.492,4009,4.072,4010,2.24,4011,2.492,4012,2.492,4013,2.492,4014,2.492,4015,2.492,4016,2.24,4017,2.24,4018,2.24,4019,2.492,4020,2.492,4021,2.492,4022,2.492,4023,2.492,4024,7.44,4025,2.492,4026,2.492,4027,2.492,4028,2.492,4029,2.492,4030,2.492,4031,2.492,4032,2.492,4033,2.492,4034,2.492,4035,2.492,4036,2.492,4037,2.24,4038,2.492,4039,2.492,4040,2.492,4041,5.961,4042,3.66,4043,2.492,4044,3.66,4045,4.072,4046,2.492,4047,2.492,4048,2.492,4049,2.492,4050,7.44,4051,2.492,4052,2.492,4053,2.492,4054,2.492,4055,2.492,4056,2.492,4057,5.961,4058,2.492,4059,4.072,4060,5.358,4061,3.66,4062,2.492]],["title/injectables/SmartWalletsLegacyService.html",[294,0.727,3961,3.797]],["body/injectables/SmartWalletsLegacyService.html",[3,0.028,4,0.017,5,0.017,7,0.13,8,0.691,12,1.495,13,0.474,14,0.005,17,0.17,21,2.148,25,2.308,29,1.929,30,2.333,32,0.017,38,2.141,48,2.452,51,0.999,71,1.006,72,2.415,77,0.002,79,3.017,89,0.918,107,0.876,125,2.587,126,1.96,139,4.247,164,0.002,168,0.207,171,0.651,175,0.971,177,1.193,178,0.276,179,0.057,209,0.804,222,0.881,223,1.405,232,1.426,234,0.883,238,1.276,239,1.204,245,1.459,246,1.722,256,1.603,269,2.258,276,4.447,282,4.654,294,0.62,296,0.784,298,1.961,301,2.644,311,0.847,330,1.495,396,1.781,468,3.22,497,0.944,509,1.968,515,2.864,522,1.722,638,2.854,690,2.531,762,3.139,763,3.053,802,2.659,843,3.977,858,1.925,861,2.603,880,4.798,907,2.076,951,1.668,1039,1.668,1161,2.972,1244,2.123,1282,1.426,1338,1.132,1441,2.811,1487,3.37,1503,1.722,1635,3.091,1678,2.148,1788,1.722,1791,1.925,1869,2.123,1902,3.24,2375,3.727,2376,3.882,2392,4.115,2419,5.205,2420,3.096,2421,3.096,2770,5.785,2892,4.541,3216,2.258,3359,3.63,3485,2.438,3488,2.438,3621,5.726,3622,2.258,3623,3.882,3680,5.471,3741,1.925,3744,4.28,3752,4.509,3753,1.781,3754,1.781,3756,3.24,3764,6.415,3778,2.123,3781,3.63,3784,4.903,3785,4.903,3792,3.92,3811,6.916,3815,2.438,3816,6.591,3819,2.015,3826,2.438,3827,2.438,3828,2.438,3829,2.258,3832,2.438,3833,2.438,3834,5.632,3835,2.438,3837,2.438,3839,2.438,3840,2.438,3841,2.438,3847,3.92,3848,2.438,3849,2.438,3850,4.916,3866,2.123,3870,2.123,3874,2.015,3881,2.438,3882,2.438,3885,2.438,3892,5.215,3894,5.215,3899,2.123,3946,2.438,3949,6.671,3954,2.438,3961,3.24,3984,4.916,3987,4.916,4010,2.438,4016,2.438,4018,2.438,4037,2.438,4042,4.916,4044,3.92,4060,7.204,4061,3.92,4063,2.712,4064,5.469,4065,4.361,4066,2.712,4067,2.712,4068,2.712,4069,2.712,4070,2.712,4071,2.712,4072,2.712,4073,4.361,4074,2.712,4075,2.712,4076,2.712,4077,4.361,4078,2.712,4079,2.712,4080,2.712,4081,2.712,4082,2.712,4083,2.712,4084,4.361,4085,4.361,4086,4.28,4087,2.712,4088,4.361,4089,2.712,4090,2.712,4091,2.712,4092,4.361,4093,4.361,4094,2.712,4095,2.712,4096,2.712,4097,2.712,4098,2.712,4099,2.712,4100,2.712]],["title/modules/SmartWalletsModule.html",[181,1.096,1502,3.797]],["body/modules/SmartWalletsModule.html",[3,0.026,4,0.026,5,0.026,13,0.264,14,0.005,17,0.197,29,0.846,32,0.026,71,0.533,77,0.003,80,1.363,107,0.488,164,0.003,167,1.39,168,0.161,178,0.416,179,0.085,181,1.515,183,1.382,184,1.401,185,1.441,186,1.441,187,1.441,188,2.457,189,1.421,194,6.133,196,5.484,197,5.157,198,2.108,199,1.441,201,2.782,202,3.16,204,2.784,205,3.196,208,3.279,209,1.211,213,3.671,214,3.399,241,2.251,249,1.363,286,3.004,295,5.674,298,1.209,301,3.061,341,4.088,347,2.146,348,1.527,394,2.438,436,2.054,497,2.078,672,3.07,677,2.309,678,3.377,679,1.795,681,2.309,682,2.309,683,2.146,685,2.309,762,2.357,763,2.887,802,3.51,857,3.399,858,2.899,862,3.399,863,3.468,864,4.972,865,3.034,941,2.251,954,1.705,1065,2.146,1275,6.133,1281,2.899,1282,2.146,1287,3.196,1288,2.682,1289,2.682,1290,2.682,1423,6.133,1433,3.196,1434,3.671,1441,4.25,1502,7.782,1503,4.934,1588,3.196,1711,5.313,1723,5.37,1724,3.671,1726,3.399,1727,4.241,1729,3.034,1730,2.784,1732,3.399,1733,3.399,2529,3.034,2530,3.034,2892,2.099,3621,6.418,3622,3.399,3810,6.418,3811,4.675,3942,5.879,3961,6.418,3962,3.671,3963,3.671,3974,6.761,4101,3.671,4102,3.671,4103,4.084,4104,4.084,4105,4.084,4106,5.974,4107,4.084,4108,5.974,4109,4.084,4110,4.084,4111,4.084,4112,4.084,4113,4.084,4114,4.084,4115,4.084,4116,4.084]],["title/classes/StakeDto.html",[179,0.107,4117,2.967]],["body/classes/StakeDto.html",[3,0.045,4,0.045,5,0.045,7,0.336,8,1.365,13,0.602,14,0.004,15,0.802,17,0.133,32,0.045,77,0.004,164,0.004,168,0.221,173,2.47,175,1.042,179,0.18,229,2.552,446,4.786,449,3.202,870,5.781,878,5.009,1310,3.482,1463,4.12,2627,7.288,4117,4.999,4118,7.027,4119,7.027,4120,7.027,4121,7.027]],["title/classes/StakeTokens.html",[179,0.107,4122,4.594]],["body/classes/StakeTokens.html",[2,0.956,3,0.024,4,0.024,5,0.024,7,0.177,8,0.878,13,0.587,14,0.005,15,0.628,17,0.164,29,1.947,32,0.024,35,1.984,37,1.452,51,2.042,71,1.186,77,0.002,85,1.152,89,1.249,107,1.161,126,2.264,164,0.002,168,0.189,171,0.827,175,1.036,177,1.406,179,0.077,229,1.34,238,1.582,239,1.492,291,2.573,298,1.984,311,2.475,506,1.713,509,2.129,762,2.779,763,2.823,764,4.187,765,5.482,768,5.022,769,3.309,770,4.589,771,4.724,773,3.973,774,3.518,775,3.518,776,3.518,777,4.602,778,2.424,779,2.742,780,3.934,782,5.464,783,2.525,784,3.309,785,2.787,786,2.435,787,2.623,788,2.479,791,2.343,793,2.424,794,2.516,795,2.343,796,2.424,797,2.343,798,2.424,799,1.897,800,4.944,802,3.365,803,2.424,804,3.055,805,2.424,806,4.093,807,2.204,808,3.055,809,4.093,811,2.62,813,2.623,814,4.118,816,1.94,817,1.986,818,2.343,819,2.516,820,2.27,822,2.62,824,2.62,826,4.118,1863,3.64,2960,4.118,2961,3.934,2962,2.62,4122,5.982,4123,3.691,4124,6.655,4125,6.655,4126,6.655,4127,6.655,4128,6.931,4129,7.395,4130,3.691,4131,3.691,4132,3.691,4133,3.691,4134,3.691,4135,3.691,4136,3.691,4137,3.691,4138,3.691,4139,3.691,4140,3.072,4141,3.072,4142,3.318,4143,3.318,4144,4.613,4145,3.072,4146,2.742,4147,3.691,4148,3.691,4149,3.318,4150,3.072,4151,3.318,4152,3.691,4153,3.318,4154,3.072,4155,3.691,4156,3.691,4157,3.318,4158,3.691,4159,4.982,4160,5.542,4161,3.691,4162,3.691,4163,3.072,4164,3.072,4165,3.318,4166,3.072,4167,3.072,4168,3.072]],["title/interfaces/StakedToken.html",[0,0.763,2569,3.244]],["body/interfaces/StakedToken.html",[0,1.417,2,1.55,3,0.038,4,0.038,5,0.038,7,0.287,8,1.233,13,0.592,14,0.005,15,0.822,17,0.148,32,0.059,37,2.266,77,0.003,85,3.271,164,0.003,168,0.136,483,2.665,878,3.221,907,2.273,1043,3.801,1310,2.239,1384,3.76,1463,2.542,1470,3.915,1604,2.834,1848,3.077,2568,3.575,2569,5.49,2570,6.39,2571,5.113,2572,3.476,2584,6.092,2589,4.889,2616,3.575,2617,3.801,2630,4.081,2631,4.081,2641,6.241,2646,6.015,2647,6.015,4117,5.021,4169,4.449,4170,3.683,4171,4.251,4172,4.081,4173,4.251,4174,4.251,4175,3.801]],["title/modules/StakingAPIModule.html",[181,1.096,1426,3.797]],["body/modules/StakingAPIModule.html",[3,0.041,4,0.041,5,0.041,14,0.005,17,0.188,32,0.041,77,0.003,80,2.116,107,0.757,164,0.003,167,1.879,168,0.144,178,0.645,179,0.132,181,1.906,183,2.145,184,2.175,185,2.237,186,2.237,187,2.237,188,3.091,189,2.206,198,2.849,199,2.237,201,2.89,241,3.494,249,2.116,322,1.766,336,5.444,344,2.786,348,3.323,349,2.302,677,3.584,678,4.565,679,2.786,681,3.584,682,3.584,683,3.332,685,3.584,1269,4.024,1270,3.584,1272,4.164,1282,3.332,1426,7.549,1435,6.722,1436,6.955,1540,5.732,1548,5.277,1549,5.277,4176,5.699,4177,6.34,4178,5.699,4179,7.339,4180,5.277,4181,7.396]],["title/injectables/StakingAPIService.html",[294,0.727,4179,3.797]],["body/injectables/StakingAPIService.html",[3,0.034,4,0.034,5,0.034,7,0.251,13,0.562,14,0.005,15,0.641,17,0.182,32,0.034,71,1.134,77,0.003,107,1.038,164,0.003,168,0.213,171,1.064,175,1.016,177,1.344,178,0.534,179,0.109,223,0.956,234,1.442,238,1.512,239,1.426,249,1.75,256,1.049,294,1.014,296,1.517,298,2.058,322,2.61,483,3.006,497,1.825,679,2.305,693,5.043,724,3.045,725,3.045,726,3.045,878,4.355,1292,3.575,1301,4.715,1436,7.333,1470,4.072,1540,3.723,1559,4.366,2568,5.186,2572,5.043,2584,3.226,2589,5.418,2616,3.131,2618,4.105,4117,5.564,4170,3.226,4172,3.575,4175,5.14,4179,5.295,4180,7.799,4182,6.799,4183,5.245,4184,5.245,4185,7.128,4186,4.105,4187,5.245,4188,4.105,4189,5.245,4190,4.105,4191,5.245,4192,8.687,4193,5.245,4194,5.245]],["title/controllers/StakingApiController.html",[165,1.135,4181,4.254]],["body/controllers/StakingApiController.html",[3,0.035,4,0.035,5,0.035,7,0.262,13,0.535,14,0.005,15,0.656,17,0.175,32,0.035,71,1.154,77,0.003,107,0.989,157,2.7,164,0.003,165,1.217,167,1.275,168,0.21,171,1.096,173,2.346,175,0.99,177,1.369,178,0.558,179,0.114,223,1,234,1.109,238,1.441,239,1.359,256,1.097,322,2.644,348,2.746,349,1.99,384,2.881,428,3.182,629,3.704,630,2.367,632,2.594,878,3.95,1172,3.272,1174,4.928,1180,2.645,1182,3.371,1282,2.881,1435,4.563,1436,7.429,1470,3.693,1516,4.563,1520,4.928,1522,4.928,2093,2.949,2271,3.48,2272,3.736,2568,4.943,2572,4.807,2589,5.365,2616,3.272,4117,5.51,4170,3.371,4175,5.256,4179,6.152,4180,7.676,4181,6.112,4182,6.922,4186,4.29,4188,4.29,4190,4.29,4195,5.482,4196,7.343,4197,7.343,4198,7.343,4199,7.343,4200,5.482,4201,5.482,4202,5.482,4203,5.482,4204,5.482,4205,5.482]],["title/controllers/StakingController.html",[165,1.135,4206,4.254]],["body/controllers/StakingController.html",[3,0.037,4,0.037,5,0.037,7,0.277,13,0.55,14,0.005,15,0.673,17,0.178,32,0.037,71,1.18,77,0.003,107,1.016,164,0.003,165,1.285,167,1.346,168,0.213,171,1.136,173,2.397,175,1.011,177,1.398,178,0.589,179,0.121,223,1.055,234,1.171,238,1.481,239,1.396,249,1.931,256,1.158,415,3.189,428,3.359,878,4.094,1463,3.985,1470,4.278,2568,5.395,2572,4.938,2589,5.448,2616,3.454,4117,5.595,4170,3.558,4175,5.399,4182,7.073,4186,4.528,4188,4.528,4190,4.528,4206,6.335,4207,5.786,4208,7.611,4209,5.786,4210,7.611,4211,5.786,4212,7.611,4213,5.786,4214,7.611,4215,5.786,4216,6.319,4217,5.201,4218,5.786,4219,5.786,4220,5.786,4221,5.786,4222,5.786]],["title/modules/StakingModule.html",[181,1.096,1469,3.797]],["body/modules/StakingModule.html",[3,0.034,4,0.034,5,0.034,14,0.005,17,0.192,29,1.693,32,0.034,42,2.158,51,1.968,71,0.697,77,0.003,80,1.783,107,0.638,164,0.003,167,1.679,168,0.164,178,0.544,179,0.111,181,1.752,183,1.807,184,1.832,185,1.885,186,1.885,187,1.885,188,2.843,189,2.843,198,2.546,199,1.885,201,2.583,208,3.35,209,1.584,289,4.918,298,1.081,301,3.003,317,2.873,497,1.858,672,2.745,680,2.944,863,3.1,917,4.189,954,2.229,1065,3.792,1261,4.438,1315,5.122,1338,2.229,1384,2.193,1463,3.469,1469,7.705,1470,4.597,1588,4.18,1589,3.791,1592,3.791,1593,4.18,1594,3.968,1595,5.122,1596,3.64,1597,3.791,1711,5.793,1730,3.64,2563,6.999,2565,4.446,2566,4.446,2701,6.999,4206,6.802,4216,7.578,4217,4.801,4223,4.801,4224,4.801,4225,4.801,4226,6.999,4227,5.341,4228,5.341,4229,6.487,4230,4.446,4231,4.801,4232,4.801,4233,4.801]],["title/interfaces/StakingOption.html",[0,0.763,2584,3.143]],["body/interfaces/StakingOption.html",[0,1.42,2,1.56,3,0.039,4,0.039,5,0.039,7,0.288,8,1.238,13,0.561,14,0.005,15,0.83,17,0.148,32,0.059,37,2.273,77,0.003,85,3.201,164,0.003,168,0.137,239,1.507,483,2.673,878,3.241,907,2.287,1043,3.825,1310,2.253,1384,3.769,1463,2.558,1470,3.931,1604,2.851,1848,3.097,2568,3.597,2569,4.961,2570,6.401,2571,6.247,2572,3.498,2584,6.185,2589,4.903,2616,3.597,2617,3.825,2630,4.107,2631,4.107,2641,4.107,2646,3.957,2647,3.957,4117,5.036,4169,4.476,4170,3.706,4171,6.516,4172,4.107,4173,4.277,4174,4.277,4175,3.825]],["title/interfaces/StakingProvider.html",[0,0.763,2617,3.244]],["body/interfaces/StakingProvider.html",[0,1.406,2,1.513,3,0.038,4,0.038,5,0.038,7,0.28,8,1.214,13,0.625,14,0.005,15,0.827,17,0.145,32,0.058,37,2.008,45,5.92,77,0.003,85,3.018,164,0.003,168,0.133,483,2.634,878,3.144,907,3.444,1043,3.71,1310,2.186,1384,3.51,1463,2.481,1470,3.853,1604,2.765,1848,3.003,2568,5.416,2569,5.979,2570,6.348,2571,6.186,2572,5.266,2584,6.057,2589,4.832,2616,3.489,2617,4.863,2630,3.983,2631,3.983,2641,3.983,2646,3.838,2647,3.838,4117,4.962,4169,4.342,4170,3.594,4171,4.149,4172,3.983,4173,4.149,4174,4.149,4175,3.71]],["title/injectables/StakingService.html",[294,0.727,4216,3.797]],["body/injectables/StakingService.html",[3,0.024,4,0.024,5,0.024,7,0.181,8,0.894,13,0.543,14,0.005,15,0.665,17,0.174,25,2.757,29,2.003,30,1.59,32,0.024,48,1.479,71,1.168,72,1.456,77,0.002,89,1.278,107,1.003,125,1.99,126,2.137,164,0.002,168,0.212,171,0.842,175,1.023,177,1.3,178,0.384,179,0.079,209,1.12,223,1.531,234,1.141,238,1.462,239,1.379,256,1.914,294,0.802,296,1.092,298,1.937,301,2.986,311,1.179,506,1.753,509,1.812,690,3.273,813,1.787,878,3.033,1043,3.579,1310,2.523,1371,2.956,1463,3.952,1470,4.224,1816,2.806,1869,2.956,2563,6.465,2565,3.144,2566,3.144,2568,4.028,2569,2.398,2570,3.704,2571,3.704,2572,3.917,2584,5.885,2589,4.747,2616,2.255,2617,5.524,2618,2.956,2646,2.481,2647,2.481,4117,4.875,4165,3.395,4170,2.323,4173,2.681,4174,2.681,4175,5.082,4182,5.856,4186,2.956,4188,2.956,4190,2.956,4216,4.189,4226,6.239,4229,5.069,4230,3.144,4231,3.395,4233,3.395,4234,3.777,4235,6.747,4236,6.747,4237,6.747,4238,3.777,4239,5.639,4240,3.777,4241,3.777,4242,3.777,4243,3.777,4244,3.777,4245,3.777,4246,3.777,4247,3.777,4248,5.639,4249,3.777,4250,3.777,4251,3.777,4252,5.639,4253,5.069,4254,3.395,4255,3.777,4256,5.639,4257,5.639,4258,7.483,4259,3.777,4260,3.777,4261,3.777,4262,3.777,4263,5.639,4264,5.639,4265,5.639,4266,3.777,4267,3.777,4268,3.777,4269,3.777,4270,3.777,4271,3.777,4272,5.639,4273,3.777,4274,3.777,4275,5.639,4276,3.777,4277,3.777]],["title/modules/StudioLegacyJwtModule.html",[181,1.096,342,3.797]],["body/modules/StudioLegacyJwtModule.html",[3,0.041,4,0.041,5,0.041,13,0.416,14,0.005,17,0.179,32,0.041,77,0.003,80,2.149,164,0.003,168,0.146,178,0.655,179,0.134,181,1.919,183,2.178,184,2.209,185,2.272,186,2.272,187,2.272,188,3.114,189,3.114,198,2.877,199,2.272,201,2.919,208,3.785,209,1.909,298,1.303,301,3.228,322,1.793,342,7.483,348,2.408,354,5.359,355,6.18,356,6.382,469,7.789,497,2.24,504,5.787,863,3.737,954,2.687,1065,3.383,1287,5.038,1288,4.228,1289,4.228,1290,4.228,2529,4.783,2530,4.783,4278,5.787,4279,5.787,4280,5.787,4281,5.787,4282,6.438,4283,6.438]],["title/injectables/StudioLegacyJwtService.html",[294,0.727,469,3.797]],["body/injectables/StudioLegacyJwtService.html",[3,0.033,4,0.033,5,0.033,7,0.249,13,0.521,14,0.005,15,0.717,17,0.164,29,1.937,30,1.469,32,0.033,71,1.053,77,0.003,79,2.038,89,1.762,107,0.963,164,0.003,168,0.197,171,1.059,175,0.903,177,1.098,178,0.53,179,0.109,225,5.498,234,1.435,238,1.404,239,1.324,245,3.816,255,3.109,256,1.042,294,1.009,296,1.506,298,1.892,311,1.626,322,2.524,327,5.551,328,5.904,355,6.485,356,6.778,469,5.27,483,2.669,502,3.869,509,1.398,630,2.249,788,2.329,901,3.42,902,5.582,919,5.904,954,2.174,955,3.306,956,4.503,957,3.109,989,4.334,992,3.869,993,4.503,994,3.697,995,3.42,996,3.42,997,3.42,1034,4.334,1218,3.42,2899,4.075,3167,4.681,4281,7.786,4284,5.207,4285,8.067,4286,8.067,4287,5.207,4288,5.207,4289,5.207,4290,7.093,4291,5.207,4292,5.207,4293,7.093,4294,5.207,4295,4.681,4296,5.207,4297,5.207,4298,5.207,4299,5.207,4300,5.207,4301,5.207,4302,5.207,4303,5.207,4304,5.207,4305,5.207,4306,5.207,4307,5.207,4308,5.207,4309,5.207,4310,5.207,4311,5.207,4312,5.207]],["title/classes/SubmitQuestionnaireDto.html",[179,0.107,4313,4]],["body/classes/SubmitQuestionnaireDto.html",[3,0.048,4,0.048,5,0.048,7,0.36,8,1.421,13,0.486,14,0.004,17,0.143,32,0.048,55,4.164,77,0.004,164,0.004,168,0.204,169,3.077,173,1.994,175,0.841,179,0.187,229,2.729,449,3.424,3699,8.063,4313,7.02,4314,8.97,4315,7.517,4316,7.503,4317,7.517,4318,7.517,4319,8.97]],["title/classes/SwapTokens.html",[179,0.107,4320,4.594]],["body/classes/SwapTokens.html",[2,0.615,3,0.015,4,0.015,5,0.015,7,0.114,8,0.62,13,0.612,14,0.005,15,0.66,17,0.131,29,2.148,32,0.015,35,1.786,37,1.025,51,0.875,71,1.03,77,0.002,89,0.803,107,1.138,126,0.678,164,0.002,168,0.054,171,0.584,175,0.716,177,0.896,179,0.049,229,0.862,238,1.008,239,0.95,286,3.465,291,3.534,298,1.01,311,2.932,506,1.102,509,2.236,762,0.792,763,1.923,764,1.194,765,2.484,768,4.304,769,2.336,770,3.797,773,3.456,774,3.169,775,2.484,776,2.484,777,3.717,778,1.56,782,2.407,783,3.469,784,4.545,785,3.829,786,3.346,787,3.603,788,3.406,791,1.507,793,1.56,794,1.618,795,1.507,796,1.56,797,1.507,798,1.56,799,1.22,800,6.189,802,2.457,803,1.56,804,2.157,805,1.56,806,5.62,807,1.417,808,4.196,809,2.407,810,4.531,811,2.778,813,3.603,814,4.301,818,4.833,819,5.189,820,4.682,1337,1.686,1338,0.991,1513,1.764,1863,5.001,2960,5.413,2961,5.172,2962,1.686,4128,7.212,4129,6.764,4140,1.976,4141,1.976,4144,4.155,4145,1.976,4146,1.764,4150,1.976,4154,1.976,4157,2.134,4159,7.648,4163,7.683,4164,6.337,4166,4.819,4167,4.819,4168,3.257,4320,7.305,4321,2.374,4322,2.134,4323,3.913,4324,2.374,4325,2.374,4326,3.913,4327,2.374,4328,2.374,4329,2.374,4330,7.89,4331,2.374,4332,5.657,4333,2.374,4334,4.991,4335,3.913,4336,6.89,4337,6.89,4338,4.991,4339,4.991,4340,6.403,4341,4.991,4342,3.913,4343,8.508,4344,4.991,4345,7.614,4346,7.614,4347,7.614,4348,6.89,4349,7.614,4350,6.403,4351,7.614,4352,6.403,4353,7.614,4354,6.89,4355,2.374,4356,3.913,4357,4.991,4358,3.913,4359,4.991,4360,2.374,4361,2.374,4362,5.789,4363,5.789,4364,2.374,4365,4.991,4366,4.991,4367,2.374,4368,2.374,4369,3.913,4370,3.913]],["title/interfaces/Token.html",[0,0.763,1384,2.098]],["body/interfaces/Token.html",[0,1.413,2,1.535,3,0.038,4,0.038,5,0.038,7,0.284,8,1.225,13,0.612,14,0.005,15,0.847,17,0.147,32,0.059,37,2.026,77,0.003,85,3.029,164,0.003,168,0.135,483,2.652,878,3.188,907,2.25,1043,3.763,1310,3.411,1384,3.745,1463,2.516,1470,3.889,1604,4.316,1848,4.688,2568,3.539,2569,4.909,2570,5.653,2571,5.079,2572,3.441,2584,6.078,2589,4.865,2616,3.539,2617,3.763,2630,6.217,2631,6.217,2641,4.04,2646,3.893,2647,3.893,4117,4.996,4169,4.404,4170,3.645,4171,4.208,4172,4.04,4173,4.208,4174,4.208,4175,3.763]],["title/interfaces/Token-1.html",[0,0.635,104,1.776,1384,1.747]],["body/interfaces/Token-1.html",[0,1.35,2,1.704,3,0.042,4,0.042,5,0.042,7,0.315,8,1.31,13,0.645,14,0.004,15,0.854,32,0.042,77,0.003,85,3.114,107,1.191,164,0.003,168,0.15,311,2.055,762,2.197,763,1.977,764,3.311,806,5.086,807,3.93,816,5.242,817,5.365,907,3.786,1384,3.713,1850,3.721,2055,6.144,2056,5.918]],["title/interfaces/TokenEventData.html",[0,0.763,1985,3.483]],["body/interfaces/TokenEventData.html",[0,1.22,2,1.383,3,0.034,4,0.034,5,0.034,7,0.256,8,1.143,13,0.664,14,0.005,15,0.857,16,3.915,32,0.052,37,2.293,55,2.479,77,0.003,85,3.133,164,0.003,168,0.121,311,2.733,542,6.089,785,2.686,786,4.017,787,4.325,1007,3.285,1044,3.39,1048,3.791,1051,3.791,1060,2.158,1096,5.08,1310,3.273,1604,4.141,1811,5.225,1848,4.498,1849,5.748,1850,4.947,1985,4.918,2026,6.23,2029,6.213,2030,6.502,2233,4.446,2234,4.446,2235,4.18,2236,3.64,2237,3.64,2238,4.18,2239,4.18,2240,3.968]],["title/interfaces/TokenInfo.html",[0,0.763,1989,4]],["body/interfaces/TokenInfo.html",[0,1.313,2,1.883,3,0.056,4,0.047,5,0.047,7,0.348,8,1.393,13,0.611,14,0.004,15,0.836,32,0.056,77,0.004,107,1.173,164,0.004,168,0.165,816,5.161,817,5.283,1060,2.938,1310,2.72,1936,4.957,1989,7.398,1990,6.054,4371,6.538,4372,6.054]],["title/interfaces/TokenInfoCache.html",[0,0.763,4372,4.254]],["body/interfaces/TokenInfoCache.html",[0,1.339,2,1.946,3,0.062,4,0.048,5,0.048,14,0.004,15,0.803,32,0.058,77,0.004,107,0.898,164,0.004,168,0.204,175,0.841,816,3.95,817,4.043,1060,3.624,1310,3.354,1936,6.113,1989,7.503,1990,7.466,4371,6.757,4372,7.466,4373,7.517,4374,7.517]],["title/classes/TokenReceive.html",[179,0.107,3789,4.254]],["body/classes/TokenReceive.html",[2,0.819,3,0.02,4,0.02,5,0.02,7,0.151,8,0.78,13,0.609,14,0.005,15,0.844,17,0.13,29,1.532,32,0.02,35,1.763,37,1.29,40,2.649,71,1.068,77,0.002,85,3.1,107,1.186,164,0.002,168,0.178,171,0.735,175,0.994,177,1.345,179,0.066,229,1.148,238,1.513,239,1.427,256,1.21,291,2.807,298,0.997,310,4.733,311,2.713,483,0.975,762,2.615,763,2.668,764,3.94,765,5.192,768,4.781,769,2.94,770,4.318,771,4.293,772,4.733,773,2.94,774,3.126,775,3.126,776,3.126,777,4.294,778,2.077,780,5.561,782,1.945,783,2.755,784,3.61,786,3.904,787,4.204,788,3.505,791,2.008,793,2.077,794,2.155,795,2.008,796,2.077,797,2.008,798,2.077,799,1.625,801,6.157,802,2.897,803,2.077,804,2.714,805,2.077,806,4.549,807,1.888,809,4.198,816,4.831,817,4.779,819,2.155,820,1.945,822,2.245,907,3.211,1044,2.008,1096,5.408,1303,3.356,1317,3.126,1384,2.483,1850,5.328,1863,3.234,1915,3.126,2055,3.659,2957,2.843,2960,3.659,2961,3.496,2962,2.245,2963,2.843,3789,5.034,4375,7.834,4376,3.163,4377,6.048,4378,6.048,4379,6.048,4380,3.163,4381,3.163,4382,8.179,4383,3.163,4384,3.163,4385,6.826,4386,3.163,4387,3.163,4388,3.163,4389,3.163,4390,3.163,4391,4.924,4392,3.163,4393,3.163,4394,3.163,4395,3.163,4396,3.163,4397,3.163,4398,3.163,4399,4.924,4400,3.163,4401,3.163,4402,3.163,4403,3.163]],["title/injectables/TokenService.html",[294,0.727,770,2.817]],["body/injectables/TokenService.html",[2,1.419,3,0.035,4,0.035,5,0.035,7,0.262,13,0.475,14,0.005,15,0.656,17,0.175,29,1.966,30,1.546,32,0.035,48,2.146,51,2.02,71,1.081,72,2.113,77,0.003,107,1.158,125,1.934,164,0.003,168,0.188,171,1.096,175,0.822,177,0.848,178,0.558,179,0.114,223,1,234,1.486,238,1.278,239,1.205,256,1.097,294,1.045,296,1.585,298,1.676,317,2.949,483,2.263,509,1.971,762,2.764,763,2.851,770,4.047,802,3.515,804,3.021,807,3.272,813,2.594,816,4.847,817,4.961,907,3.603,1035,3.48,1338,2.288,1384,3.4,1983,3.736,2000,4.072,2499,5.213,2552,4.29,2579,4.563,2580,6.571,2634,4.563,2682,6.601,2961,3.891,2962,3.891,4404,5.482,4405,8.28,4406,5.482,4407,5.482,4408,5.482,4409,7.343,4410,5.482,4411,7.343,4412,5.482,4413,5.482,4414,5.482,4415,5.482,4416,7.343,4417,7.343,4418,5.482,4419,8.845,4420,5.482]],["title/classes/TokenTransferWebhookDto.html",[179,0.107,1682,3.628]],["body/classes/TokenTransferWebhookDto.html",[3,0.034,4,0.034,5,0.034,7,0.252,8,1.134,13,0.658,14,0.004,15,0.834,32,0.034,77,0.003,85,2.718,164,0.003,168,0.233,175,1.139,179,0.11,229,1.915,239,1.671,311,2.535,762,3.419,763,3.077,786,3.568,787,3.842,1096,4.713,1310,3.036,1604,3.842,1659,4.389,1662,4.74,1682,5.078,1684,7.612,1697,7.612,1845,5.763,1848,4.172,1849,5.333,1850,4.589,2892,5.265,4421,5.273,4422,5.273,4423,5.273,4424,5.273,4425,5.273,4426,5.273,4427,5.273,4428,5.273,4429,5.273,4430,5.273,4431,5.273]],["title/controllers/TradeApiController.html",[165,1.135,2944,4.254]],["body/controllers/TradeApiController.html",[3,0.042,4,0.042,5,0.042,7,0.314,14,0.005,17,0.171,32,0.042,77,0.003,164,0.003,165,1.834,167,1.528,168,0.205,171,1.233,173,2.19,175,0.924,177,1.278,178,0.668,179,0.137,286,3.303,322,2.818,348,3.088,349,2.385,384,3.452,630,4.369,632,3.108,799,4.244,1175,4.314,1178,4.477,1180,3.17,1182,4.039,1431,4.477,1432,6.645,2093,3.533,2271,4.17,2272,4.477,2898,6.157,2906,4.477,2907,4.88,2944,6.874,2946,8.297,3914,5.904,4432,6.568,4433,6.568,4434,6.568]],["title/injectables/TradeService.html",[294,0.727,1711,3.143]],["body/injectables/TradeService.html",[3,0.042,4,0.042,5,0.042,7,0.312,13,0.531,14,0.005,15,0.712,17,0.179,29,1.348,32,0.042,71,0.85,77,0.003,89,2.203,107,0.981,126,1.859,164,0.003,171,1.226,175,0.919,177,1.007,178,0.663,179,0.136,209,1.93,223,1.497,234,1.662,238,1.429,239,1.348,255,3.886,256,1.643,294,1.168,296,1.882,298,1.821,301,3.464,509,1.748,901,4.276,902,5.937,954,2.717,956,4.132,957,3.886,1207,5.095,1218,4.276,1310,3.071,1711,5.05,2698,5.418,2700,5.418,4435,6.51,4436,8.996,4437,6.51,4438,6.51,4439,6.51,4440,6.51,4441,6.51]],["title/modules/TransactionsScannerModule.html",[181,1.096,1479,3.797]],["body/modules/TransactionsScannerModule.html",[3,0.035,4,0.035,5,0.035,14,0.005,17,0.193,25,2.695,29,1.129,32,0.035,42,2.202,51,2.008,71,0.711,77,0.003,80,1.819,107,0.651,164,0.003,168,0.124,178,0.555,179,0.114,181,1.771,183,1.844,184,1.87,185,1.923,186,1.923,187,1.923,188,2.873,189,1.896,198,2.581,199,1.923,201,2.955,208,2.53,209,1.616,298,1.103,301,3.028,317,2.932,341,4.484,347,2.865,497,1.896,863,3.164,1052,6.459,1057,6.224,1060,2.202,1062,4.667,1064,4.266,1066,5.725,1067,4.266,1068,4.266,1261,4.499,1338,2.275,1384,2.238,1463,2.314,1479,7.689,1480,4.537,1484,6.576,1485,6.873,1589,3.869,1592,3.869,1594,4.05,1595,3.869,1596,3.715,1597,3.869,1952,6.224,1993,4.266,1996,4.05,2245,4.9,2246,4.9,2247,4.9,2249,4.9,2251,6.576,2252,4.9,2253,4.9,4442,4.9,4443,5.451,4444,4.9,4445,7.417,4446,4.9,4447,7.315,4448,5.451,4449,4.9,4450,5.451]],["title/injectables/TransactionsScannerService.html",[294,0.727,4445,4]],["body/injectables/TransactionsScannerService.html",[3,0.025,4,0.025,5,0.025,7,0.186,8,0.914,13,0.524,14,0.005,15,0.308,17,0.185,23,2.26,25,1.435,29,1.423,30,1.098,32,0.025,35,1.393,37,1.511,38,1.524,42,1.573,48,1.524,51,1.435,71,0.508,72,1.501,77,0.002,78,2.201,85,2.818,89,1.317,107,0.907,125,2.424,164,0.002,168,0.184,171,0.861,173,1.822,175,0.983,177,1.255,178,0.396,179,0.081,209,1.154,223,1.385,234,1.167,238,1.322,239,1.247,256,1.622,294,0.82,296,1.126,298,1.949,300,2.394,301,2.913,311,1.801,315,2.557,317,2.094,320,2.764,483,1.2,497,1.354,505,2.146,506,1.807,509,1.548,542,2.324,777,3.987,786,1.711,787,2.729,813,2.729,1039,2.394,1060,3.276,1062,4.328,1077,4.682,1078,4.682,1096,3.348,1111,1.879,1146,2.557,1155,2.892,1310,1.456,1317,3.661,1338,1.625,1485,6.75,1604,1.842,1688,5.718,1811,3.443,1848,2.001,1849,2.557,1850,2.201,1938,2.653,1939,3.047,1942,5.103,1945,6.151,1948,5.391,1951,5.99,1952,5.772,1959,3.047,1960,5.642,1962,6.028,1964,5.944,1971,3.047,1972,3.047,1973,3.5,1974,3.047,1975,3.047,1976,3.047,1982,3.24,1983,2.653,1985,3.931,1986,2.892,1987,2.892,1988,3.047,1992,4.876,1994,4.513,1995,2.892,1996,2.892,2003,3.047,2007,3.047,2008,3.931,2021,4.8,2022,3.24,2024,3.24,2026,2.653,2029,2.764,2030,2.892,2039,3.5,2162,3.047,2261,3.5,2552,3.047,2580,5.642,2613,3.24,4332,2.892,4445,4.513,4446,7.289,4449,3.5,4451,5.767,4452,6.869,4453,5.767,4454,5.767,4455,3.893,4456,3.893,4457,3.893,4458,3.893,4459,3.893,4460,5.767,4461,3.893,4462,7.595,4463,5.767,4464,3.893,4465,3.893,4466,3.893,4467,3.893,4468,3.893,4469,3.893,4470,3.893,4471,3.893,4472,3.893,4473,5.767,4474,3.893,4475,3.893,4476,3.893,4477,3.893,4478,3.893,4479,3.893,4480,3.893,4481,3.893,4482,3.893,4483,3.893]],["title/classes/TransferToken.html",[179,0.107,2438,4]],["body/classes/TransferToken.html",[3,0.032,4,0.032,5,0.032,7,0.242,8,1.101,13,0.553,14,0.005,15,0.815,17,0.162,29,2.076,30,2.529,32,0.032,35,2.487,38,1.978,48,2.72,51,2.926,71,0.907,72,2.679,77,0.003,79,2.72,89,2.351,107,0.604,125,2.452,164,0.003,175,1.037,179,0.105,229,1.835,234,1.406,238,0.88,239,0.83,256,1.963,298,1.406,311,2.893,355,5.216,421,5.439,509,2.488,1338,2.11,2360,5.439,2434,6.611,2438,5.439,2447,6.611,2614,4.207,3109,6.611,4484,5.054,4485,7.942,4486,7.942,4487,7.942,4488,5.054,4489,8.553,4490,6.949,4491,7.942,4492,5.054,4493,5.054,4494,5.054,4495,5.054,4496,6.949,4497,4.543,4498,4.543,4499,4.543,4500,5.054,4501,5.054,4502,5.054,4503,5.054,4504,5.054,4505,6.949,4506,6.949,4507,5.054,4508,5.054,4509,6.949,4510,5.054,4511,5.054,4512,5.054,4513,6.949,4514,5.054,4515,5.054,4516,5.054,4517,5.054]],["title/classes/TransferTokensDto.html",[179,0.107,622,3.483]],["body/classes/TransferTokensDto.html",[3,0.042,4,0.042,5,0.042,7,0.312,8,1.301,13,0.63,14,0.004,15,0.822,17,0.124,32,0.042,77,0.003,164,0.003,168,0.226,173,2.583,175,1.09,179,0.171,224,3.953,229,2.364,335,3.893,446,4.855,449,2.966,622,5.597,870,5.773,1310,3.364,1364,4.623,1617,5.908,1626,4.836,3691,5.095,4518,9.945,4519,6.51,4520,6.51,4521,6.51,4522,6.51,4523,6.51,4524,6.51]],["title/classes/TransferTokensEthereumDto.html",[179,0.107,4525,4.594]],["body/classes/TransferTokensEthereumDto.html",[3,0.041,4,0.041,5,0.041,7,0.303,8,1.28,13,0.625,14,0.004,15,0.819,17,0.12,32,0.041,77,0.003,164,0.003,168,0.224,173,2.563,175,1.081,179,0.168,224,3.905,229,2.302,335,3.867,446,4.808,449,2.888,870,5.734,883,6.075,1310,3.323,1364,4.567,1371,7.731,1617,5.836,1626,4.71,3691,4.962,4525,7.259,4526,9.878,4527,6.34,4528,6.34,4529,6.34,4530,6.34,4531,6.34,4532,6.34]],["title/classes/UnstakeDto.html",[179,0.107,2589,2.889]],["body/classes/UnstakeDto.html",[3,0.045,4,0.045,5,0.045,7,0.336,8,1.365,13,0.602,14,0.004,15,0.802,17,0.133,32,0.045,77,0.004,164,0.004,168,0.221,173,2.47,175,1.042,179,0.18,229,2.552,446,4.786,449,3.202,870,5.781,878,5.009,1310,3.482,1463,4.12,2589,4.868,2627,7.288,4533,7.027,4534,7.027,4535,7.027,4536,7.027]],["title/classes/UnstakeTokens.html",[179,0.107,4537,4.594]],["body/classes/UnstakeTokens.html",[2,0.992,3,0.025,4,0.025,5,0.025,7,0.183,8,0.903,13,0.613,14,0.005,15,0.451,17,0.16,29,2.103,32,0.025,35,2.04,37,1.494,71,0.888,77,0.002,89,1.296,107,1.146,126,1.094,164,0.002,168,0.087,171,0.851,175,0.901,177,1.166,179,0.08,229,1.391,238,1.312,239,1.237,291,3.159,298,1.377,311,2.866,506,1.779,509,2.163,762,1.279,763,2.536,764,1.927,765,3.618,768,5.078,769,3.402,770,4.653,773,4.063,774,3.618,775,3.618,776,3.618,777,4.676,778,2.517,782,3.505,783,3.1,784,4.063,785,3.422,786,2.99,787,3.22,788,3.044,791,2.432,793,2.517,794,2.612,795,2.432,796,2.517,797,2.432,798,2.517,799,1.969,800,6.272,802,3.419,803,2.517,804,3.141,805,2.517,806,5.377,807,2.288,808,4.653,809,3.505,810,6.608,811,4.046,813,3.995,814,5.056,816,3.576,817,3.661,818,4.32,819,4.638,820,4.185,822,4.831,824,2.72,1513,2.847,1863,4.47,2572,3.95,2960,4.234,2961,4.046,2962,2.72,4128,7.028,4129,7.028,4140,3.189,4141,3.189,4142,6.117,4143,3.444,4144,4.744,4145,3.189,4146,2.847,4149,6.117,4150,3.189,4151,3.444,4153,3.444,4154,3.189,4163,7.028,4164,5.664,4166,5.664,4167,5.664,4168,5.664,4322,3.444,4537,7.241,4538,3.832,4539,3.832,4540,3.832,4541,5.699,4542,7.536,4543,5.699]],["title/classes/UpdateProjectDto.html",[179,0.107,3537,4]],["body/classes/UpdateProjectDto.html",[3,0.05,4,0.05,5,0.05,14,0.004,17,0.173,32,0.05,37,2.387,77,0.004,164,0.004,168,0.175,169,2.647,179,0.161,202,3.452,229,2.802,315,5.068,1644,5.732,1646,6.936,3537,7.13,3544,6.422,3545,6.422,4544,7.716,4545,9.11,4546,6.936,4547,6.422]],["title/classes/UpdateWebhookDto.html",[179,0.107,3002,3.628]],["body/classes/UpdateWebhookDto.html",[3,0.046,4,0.046,5,0.046,7,0.346,8,1.389,13,0.468,14,0.004,15,0.694,17,0.179,32,0.046,37,2.297,77,0.004,164,0.004,168,0.199,173,1.919,175,0.81,179,0.183,229,2.628,315,4.753,446,4.847,449,3.297,1060,3.542,1062,3.564,1405,5.631,1658,4.932,1659,6.024,1698,4.594,3002,6.224,3005,5.376,4546,6.505,4547,6.024,4548,8.767,4549,8.767,4550,7.237]],["title/interfaces/User.html",[0,0.763,638,2.328]],["body/interfaces/User.html",[0,1.057,2,1.833,3,0.045,4,0.045,5,0.045,7,0.339,8,1.371,13,0.629,14,0.004,15,0.828,17,0.134,32,0.045,37,2.267,55,4.336,77,0.004,107,1.162,164,0.004,168,0.161,169,2.428,221,4.034,222,2.3,223,1.774,586,5.5,638,3.941,1623,7.229,4316,7.615,4551,7.079]],["title/interfaces/UserOp.html",[0,0.763,1036,3.483]],["body/interfaces/UserOp.html",[0,0.988,2,1.22,3,0.03,4,0.03,5,0.03,7,0.226,8,1.049,12,4.216,13,0.602,14,0.005,15,0.841,16,3.712,17,0.089,30,1.329,32,0.042,35,2.369,37,1.734,55,3.551,77,0.003,85,2.967,149,2.476,164,0.003,168,0.107,221,3.304,222,1.53,278,3.921,311,1.471,321,2.274,322,1.312,379,2.369,395,3.344,638,2.146,762,1.572,763,1.988,764,2.369,773,2.812,785,4.396,786,3.841,808,3.647,815,4.201,820,4.07,829,2.421,907,2.904,1000,5.431,1001,3.5,1002,4.235,1003,5.509,1004,5.949,1005,5.949,1006,5.949,1007,4.07,1008,5.89,1009,5.509,1010,5.509,1011,4.201,1012,5.509,1013,6.877,1014,6.877,1015,4.235,1016,4.235,1017,3.344,1018,8.04,1019,6.906,1020,6.164,1021,7.459,1022,3.687,1023,7.858,1024,7.459,1025,7.749,1026,6.368,1027,5.949,1028,3.921,1029,5.509,1030,5.949,1031,5.949,1032,4.235,1033,4.235,1034,5.509,1035,2.99,1036,4.511,1037,4.235,1038,4.235,1039,2.897,1040,4.235,1041,6.906,1042,6.164,1043,4.856,1044,5.549,1045,6.877,1046,4.235,1047,3.921,1048,6.205,1049,5.949,1050,4.235,1051,6.205]],["title/interfaces/UserOpEventData.html",[0,0.763,2240,3.797]],["body/interfaces/UserOpEventData.html",[0,1.304,2,1.583,3,0.039,4,0.039,5,0.039,7,0.293,8,1.25,13,0.618,14,0.004,15,0.856,16,4.129,32,0.056,37,2.419,55,2.838,77,0.003,85,2.882,164,0.003,168,0.139,311,1.909,542,5.51,785,4.642,786,3.467,787,3.733,1007,5.676,1044,5.859,1048,6.552,1051,6.552,1060,2.47,1096,3.549,1310,2.286,1604,2.893,1811,5.51,1848,3.142,1849,4.016,1850,3.456,1985,4.167,2026,5.377,2029,4.34,2030,4.542,2233,5.089,2234,5.089,2235,4.785,2236,4.167,2237,4.167,2238,4.785,2239,4.785,2240,5.861]],["title/injectables/UserOpEventsScannerService.html",[294,0.727,2244,4]],["body/injectables/UserOpEventsScannerService.html",[3,0.025,4,0.025,5,0.025,7,0.189,13,0.494,14,0.005,17,0.188,25,1.454,29,1.689,30,1.113,32,0.025,37,1.526,48,2.28,51,1.454,71,0.515,72,2.245,77,0.002,85,2.938,107,0.913,125,2.055,126,1.127,164,0.002,168,0.132,171,0.87,173,1.545,175,0.955,177,1.262,178,0.402,179,0.082,209,1.17,223,0.72,234,1.179,238,1.331,239,1.255,249,1.317,256,1.165,294,0.829,296,1.141,298,1.954,300,2.427,301,2.928,317,2.123,320,2.801,483,1.216,497,1.373,509,1.859,638,3.154,679,1.734,693,4.438,724,2.291,725,2.291,726,2.291,777,4.733,785,1.984,786,1.734,787,1.867,838,4.559,1007,2.427,1044,2.505,1048,2.801,1051,2.801,1060,2.353,1062,4.203,1077,4.719,1078,4.719,1146,2.592,1155,4.327,1192,6.224,1214,2.689,1215,3.284,1240,3.547,1241,4.019,1338,1.647,1481,3.088,1482,2.931,1672,4.395,1787,2.801,1788,2.505,1811,2.356,1838,4.559,1936,3.97,1938,4.719,1939,3.088,1940,6.382,1942,5.144,1943,5.763,1944,4.848,1945,6.175,1946,6.363,1947,5.679,1948,5.427,1949,5.679,1952,5.797,1959,3.088,1960,6.558,1962,4.915,1964,5.983,1965,3.284,1966,7.7,1969,3.284,1970,3.547,1971,3.088,1972,3.088,1974,3.088,1975,3.088,1976,3.088,1979,3.547,1982,3.284,1983,2.689,1986,2.931,1987,2.931,1992,2.801,1993,3.088,1994,3.088,1995,2.931,1996,2.931,2000,2.931,2003,3.088,2005,3.284,2006,3.284,2007,3.088,2008,2.689,2011,3.547,2012,3.547,2014,3.547,2016,3.547,2021,4.848,2022,3.284,2023,5.236,2024,3.284,2025,3.547,2026,2.689,2027,3.547,2240,4.327,2244,4.559,2250,5.236,2262,3.547,4332,4.327,4552,3.946,4553,5.825,4554,3.946,4555,5.825,4556,3.946,4557,3.946,4558,3.946,4559,5.825,4560,3.946,4561,3.946,4562,3.946,4563,3.946,4564,3.946,4565,3.946,4566,3.946,4567,3.946,4568,3.946]],["title/injectables/UserOpFactory.html",[294,0.727,1712,3.797]],["body/injectables/UserOpFactory.html",[3,0.041,4,0.041,5,0.041,7,0.304,13,0.411,14,0.005,17,0.169,29,1.316,32,0.041,71,0.829,77,0.003,107,1.118,164,0.003,168,0.202,171,1.207,175,0.905,177,0.983,178,0.647,179,0.132,223,1.159,234,1.637,238,1.408,239,1.328,256,1.271,294,1.15,296,1.837,298,1.8,483,2.492,509,1.706,762,2.969,763,2.904,802,3.433,804,3.502,1000,6.314,1001,4.72,1036,4.33,1041,5.288,1042,6.008,1241,5.435,1696,5.288,1712,6.008,1713,6.491,1719,5.288,1721,5.288,4569,7.996,4570,6.354,4571,8.895,4572,6.354,4573,6.354,4574,6.354,4575,6.354,4576,6.354]],["title/injectables/UserOpParser.html",[294,0.727,1713,3.357]],["body/injectables/UserOpParser.html",[3,0.032,4,0.032,5,0.032,7,0.326,13,0.441,14,0.005,15,0.727,17,0.149,23,2.855,29,1.989,30,1.387,32,0.032,35,2.441,49,2.936,51,1.812,71,1.199,77,0.003,79,1.925,107,1.125,114,5.142,126,2.235,164,0.003,171,1.018,175,0.946,177,1.308,178,0.5,179,0.103,238,1.471,239,1.388,256,1.566,294,0.97,296,1.422,298,1.974,311,2.444,509,2.102,723,3.352,808,5.294,809,4.814,1042,5.066,1241,5.154,1338,2.053,1713,4.479,1797,3.653,1911,3.491,1914,5.557,1915,3.122,2312,3.849,2324,3.849,2954,3.849,3355,3.849,4146,3.653,4332,3.653,4577,8.88,4578,4.421,4579,7.037,4580,7.037,4581,7.037,4582,4.421,4583,4.421,4584,4.421,4585,4.421,4586,7.599,4587,4.421,4588,4.421,4589,4.421,4590,4.421,4591,4.421,4592,4.421,4593,4.421,4594,4.421,4595,4.421,4596,4.421,4597,4.421,4598,6.13,4599,6.13,4600,6.13,4601,4.421,4602,4.421,4603,4.421,4604,4.421,4605,6.13,4606,4.421,4607,4.421,4608,4.421,4609,6.13,4610,6.13,4611,4.421,4612,6.13,4613,4.421,4614,4.421,4615,4.421,4616,4.421]],["title/injectables/UserOpParser-1.html",[104,1.776,294,0.605,1713,2.794]],["body/injectables/UserOpParser-1.html",[3,0.031,4,0.031,5,0.031,7,0.321,13,0.434,14,0.005,15,0.722,17,0.147,23,2.789,29,1.978,30,1.355,32,0.031,35,2.401,49,2.868,51,1.77,71,1.19,77,0.003,79,1.88,107,1.118,114,5.078,126,2.208,164,0.003,168,0.2,171,1.002,175,0.936,177,1.295,178,0.489,179,0.1,238,1.457,239,1.374,256,1.547,294,0.954,296,1.389,298,1.963,311,2.414,509,2.076,723,3.274,762,2.938,763,2.644,808,5.263,809,4.755,1042,4.985,1241,5.111,1338,2.005,1713,4.407,1797,3.569,1911,3.41,1914,5.488,1915,3.05,2312,3.76,2324,3.76,2954,3.76,3355,3.76,4146,3.569,4332,3.569,4569,7.915,4578,4.319,4579,6.95,4580,6.95,4581,6.95,4582,4.319,4583,4.319,4584,4.319,4585,4.319,4586,6.95,4587,4.319,4588,4.319,4589,4.319,4590,4.319,4591,4.319,4592,4.319,4593,4.319,4594,4.319,4595,4.319,4596,4.319,4597,4.319,4598,6.031,4599,6.031,4600,6.031,4601,4.319,4602,4.319,4603,4.319,4604,4.319,4605,6.031,4606,4.319,4607,4.319,4608,4.319,4609,6.031,4610,6.031,4611,4.319,4612,6.031,4613,4.319,4614,4.319,4615,4.319,4616,4.319]],["title/interfaces/UserStakedTokens.html",[0,0.763,4172,3.483]],["body/interfaces/UserStakedTokens.html",[0,1.426,2,1.58,3,0.039,4,0.039,5,0.039,7,0.292,8,1.248,13,0.564,14,0.005,15,0.837,17,0.15,32,0.059,37,2.065,77,0.003,85,3.053,164,0.003,168,0.139,483,2.689,878,3.282,907,2.316,1043,5.54,1310,2.282,1384,3.583,1463,2.59,1470,3.962,1604,2.887,1848,3.135,2568,3.642,2569,5.001,2570,5.732,2571,5.175,2572,3.542,2584,6.119,2589,4.933,2616,3.642,2617,3.873,2630,4.158,2631,4.158,2641,4.158,2646,4.007,2647,4.007,4117,5.066,4169,4.533,4170,3.752,4171,4.331,4172,5.37,4173,6.547,4174,6.547,4175,5.854]],["title/controllers/UsersController.html",[165,1.135,4617,4.254]],["body/controllers/UsersController.html",[3,0.035,4,0.035,5,0.035,7,0.263,13,0.475,14,0.005,15,0.752,17,0.18,21,2.705,32,0.035,71,0.96,77,0.003,104,2.292,107,0.878,157,4.082,164,0.003,165,1.633,167,1.278,168,0.188,169,2.843,171,1.098,173,1.95,175,0.823,177,1.138,178,0.559,179,0.114,202,3.96,223,1.001,234,1.111,238,1.28,239,1.207,249,1.833,256,1.099,286,2.762,374,6.576,401,5.227,414,5.219,415,3.027,597,3.607,606,5.754,629,3.289,630,2.371,632,2.599,635,3.607,636,3.899,637,3.899,638,4.595,645,5.219,695,4.948,720,3.607,788,2.457,2787,5.754,3007,4.08,3089,6.12,3312,4.571,3498,7.451,3518,6.609,3522,4.937,4313,7.813,4316,5.754,4617,6.12,4618,5.492,4619,7.451,4620,5.492,4621,4.937,4622,5.492,4623,5.492,4624,7.352,4625,7.352,4626,4.937,4627,4.937,4628,4.937,4629,4.937,4630,5.492,4631,5.492,4632,5.492]],["title/modules/UsersModule.html",[181,1.096,197,3.051]],["body/modules/UsersModule.html",[3,0.042,4,0.042,5,0.042,14,0.005,17,0.189,32,0.042,77,0.003,80,2.163,164,0.003,167,1.905,168,0.147,169,2.223,178,0.66,179,0.135,181,1.925,183,2.193,184,2.223,185,2.287,186,2.287,187,2.287,188,3.123,189,3.123,197,6.149,198,2.889,199,2.287,201,2.931,202,4.219,341,4.701,347,3.406,597,4.257,695,6.264,720,4.257,2787,6.409,3007,4.815,4617,7.472,4628,5.826,4633,5.826,4634,5.826,4635,6.481,4636,5.826,4637,6.481,4638,6.481,4639,8.189,4640,6.481]],["title/injectables/UsersService.html",[294,0.727,695,3.051]],["body/injectables/UsersService.html",[3,0.031,4,0.031,5,0.031,7,0.231,13,0.57,14,0.005,15,0.769,17,0.173,29,1,30,1.899,32,0.031,38,1.89,71,1.151,77,0.003,79,1.89,107,1.053,125,1.704,126,1.379,145,3.171,164,0.003,168,0.213,169,3.216,171,1.005,175,1.022,177,1.365,178,0.491,179,0.101,202,3.752,222,1.568,234,1.363,238,1.535,239,1.448,244,4.34,256,0.966,281,3.587,294,0.958,296,1.396,298,2.07,396,4.422,397,4.422,401,4.992,459,5.283,468,4.31,483,2.947,497,1.68,509,1.296,586,2.729,638,3.532,695,4.019,829,3.984,830,4.34,831,7.149,835,3.779,841,4.34,842,4.019,1161,3.291,1596,3.291,3330,6.564,4313,7.336,4316,3.779,4619,6.969,4621,4.34,4626,4.34,4627,4.34,4641,4.828,4642,7.752,4643,4.828,4644,4.828,4645,6.733,4646,4.828,4647,4.828,4648,4.828,4649,4.828,4650,4.828,4651,4.828,4652,4.828,4653,4.828,4654,4.828,4655,4.828,4656,4.828,4657,4.828,4658,4.828,4659,4.828,4660,4.828,4661,6.733,4662,4.34,4663,6.733,4664,4.828,4665,4.828]],["title/injectables/VoltBarService.html",[294,0.727,4226,3.797]],["body/injectables/VoltBarService.html",[0,0.423,3,0.018,4,0.018,5,0.018,7,0.27,8,0.716,13,0.483,14,0.005,15,0.592,17,0.175,25,2.368,29,1.981,30,1.813,32,0.018,35,2.017,48,2.516,51,1.045,71,1.201,72,2.477,77,0.002,85,1.759,89,1.529,104,1.184,107,0.893,125,3.246,126,1.835,164,0.002,168,0.212,171,0.675,175,1.029,177,1.157,178,0.289,179,0.059,209,0.841,223,1.431,232,1.491,234,0.915,238,1.302,239,1.228,256,1.722,294,0.643,296,0.82,298,1.81,301,2.692,311,0.886,317,1.526,481,1.491,509,2.107,690,2.624,813,3.539,878,3.776,907,2.139,1035,1.801,1123,4.41,1146,1.863,1310,2.403,1338,1.184,1463,3.951,1470,4.097,1604,2.139,1711,4.825,1730,1.933,1816,2.107,1848,2.323,1859,2.22,1915,1.801,1983,1.933,2000,2.107,2076,3.209,2162,2.22,2499,3.209,2564,8.367,2568,3.364,2569,3.577,2570,4.912,2571,3.701,2572,3.271,2579,2.361,2580,4.775,2583,2.55,2584,4.825,2588,2.55,2589,3.633,2607,4.063,2608,2.55,2613,2.361,2614,2.361,2616,1.693,2617,2.869,2618,2.22,2627,3.537,2629,4.063,2630,3.081,2631,3.081,2634,2.361,2641,3.84,2646,2.969,2647,2.969,2648,2.55,2665,2.55,2668,4.063,2669,4.063,2672,2.55,2701,5.829,2703,5.065,2704,5.065,2706,2.55,2707,2.55,2755,2.55,2919,2.55,4117,3.731,4170,1.744,4171,4,4226,3.358,4230,7.747,4232,2.55,4253,4.063,4254,2.55,4666,2.836,4667,5.635,4668,5.635,4669,5.635,4670,4.52,4671,2.836,4672,2.836,4673,2.836,4674,2.836,4675,2.836,4676,2.836,4677,2.836,4678,2.836,4679,2.836,4680,4.52,4681,2.836,4682,2.836,4683,2.836,4684,2.836,4685,2.836,4686,2.836,4687,2.836,4688,2.836,4689,2.836,4690,2.836,4691,2.836,4692,4.52,4693,2.836,4694,4.52,4695,2.836,4696,4.52,4697,2.836,4698,2.836,4699,2.55,4700,2.836,4701,2.836,4702,2.836,4703,2.836,4704,2.836,4705,2.836,4706,2.836,4707,2.836,4708,2.836,4709,6.427,4710,4.52,4711,2.836,4712,2.836,4713,2.836,4714,2.836,4715,2.55,4716,2.836,4717,2.836,4718,5.635,4719,2.836,4720,4.52,4721,2.836,4722,5.635,4723,2.836,4724,2.836,4725,2.836,4726,4.52,4727,2.836,4728,2.836,4729,2.836,4730,2.836,4731,4.52,4732,2.836,4733,2.836,4734,2.836,4735,2.836,4736,4.52,4737,2.836,4738,2.836,4739,2.836,4740,4.063,4741,2.836,4742,2.836,4743,2.836,4744,2.836,4745,2.836,4746,2.836,4747,2.836,4748,2.836,4749,2.836,4750,2.836,4751,2.836,4752,4.52,4753,2.836,4754,2.836,4755,2.836,4756,2.836,4757,2.836]],["title/classes/WalletAction.html",[179,0.107,768,2.889]],["body/classes/WalletAction.html",[3,0.036,4,0.036,5,0.036,7,0.271,8,1.188,13,0.602,14,0.005,15,0.666,17,0.142,32,0.036,35,3.205,40,4.523,51,2.082,71,1.097,77,0.003,89,1.912,107,1.069,164,0.003,168,0.218,171,1.119,175,1.042,177,1.386,179,0.118,229,2.052,238,1.558,239,1.47,298,1.702,483,2.31,762,3.196,763,2.934,764,4.816,765,6.078,768,4.236,769,5.019,770,5.671,773,5.019,774,5.337,775,5.337,776,5.337,782,5.171,791,3.588,793,3.712,795,3.588,797,3.588,799,3.851,802,2.399,1337,4.012,1338,2.359,1722,4.704,1835,5.08,2255,4.704,4758,5.652,4759,5.652,4760,5.652,4761,5.652,4762,5.652,4763,5.652,4764,5.652,4765,5.652,4766,5.652,4767,5.652,4768,5.652]],["title/interfaces/WalletActionDocument.html",[0,0.763,1775,4.254]],["body/interfaces/WalletActionDocument.html",[0,0.841,2,1.458,3,0.036,4,0.036,5,0.036,13,0.682,14,0.005,15,0.823,17,0.142,29,1.548,30,1.588,32,0.048,37,1.959,38,4.049,42,2.274,77,0.003,85,2.62,89,2.529,104,3.12,107,0.893,164,0.003,168,0.128,222,2.726,291,2.613,311,2.334,762,1.879,763,1.691,764,2.831,783,3.405,784,3.361,785,3.759,786,2.474,787,2.664,788,2.518,813,2.664,816,2.959,817,3.028,907,2.137,1775,6.222,1776,5.061,1850,3.182,1863,3.698,4086,4.406,4769,5.63,4770,7.475,4771,6.719,4772,8.392,4773,9.76,4774,5.63,4775,8.94,4776,5.63,4777,5.63,4778,5.63,4779,7.475,4780,5.63]],["title/interfaces/WalletActionInterface.html",[0,0.763,1783,4.254]],["body/interfaces/WalletActionInterface.html",[0,0.864,2,1.498,3,0.037,4,0.037,5,0.037,7,0.277,8,1.206,13,0.68,14,0.004,15,0.857,32,0.037,77,0.003,85,3.113,107,1.151,164,0.003,168,0.131,239,1.671,291,4.195,311,3.009,762,1.931,763,1.738,764,2.91,783,4.117,784,5.395,785,4.545,786,3.971,787,4.276,788,4.043,816,4,817,4.094,907,2.889,1303,6.159,1783,6.335,1784,5.201,1850,4.302,1863,5.935,4781,5.786]],["title/interfaces/Webhook.html",[0,0.763,1111,2.466]],["body/interfaces/Webhook.html",[0,1.083,2,1.878,3,0.047,4,0.047,5,0.047,7,0.347,8,1.391,13,0.61,14,0.004,15,0.831,17,0.138,32,0.047,37,2.301,77,0.004,164,0.004,168,0.165,221,4.077,222,2.357,223,1.722,329,3.841,1060,2.931,1094,7.68,1111,4.238,1605,6.445,4782,7.255]],["title/interfaces/WebhookAddress.html",[0,0.763,4783,4.254]],["body/interfaces/WebhookAddress.html",[0,1.108,2,1.921,3,0.048,4,0.048,5,0.048,7,0.355,8,1.41,13,0.575,14,0.004,15,0.813,17,0.141,32,0.048,37,2.333,77,0.004,164,0.004,168,0.169,221,4.117,222,2.411,223,1.623,907,3.753,1060,2.998,1405,5.903,4783,7.409,4784,7.421,4785,7.421]],["title/interfaces/WebhookEvent.html",[0,0.763,1086,2.889]],["body/interfaces/WebhookEvent.html",[0,0.88,2,1.525,3,0.038,4,0.038,5,0.038,7,0.282,8,1.22,13,0.673,14,0.004,15,0.859,17,0.112,32,0.038,37,2.018,77,0.003,85,2.679,164,0.003,168,0.134,221,3.705,222,1.914,223,1.898,311,2.841,335,2.306,786,3.999,787,4.306,1086,4.354,1096,5.283,1310,3.403,1604,4.306,1845,6.46,1848,4.677,1849,5.977,2026,6.202,2029,6.46,4786,5.891,4787,5.296]],["title/interfaces/WebhookEvent-1.html",[0,0.635,104,1.776,1086,2.405]],["body/interfaces/WebhookEvent-1.html",[0,0.93,2,1.613,3,0.04,4,0.04,5,0.04,7,0.298,8,1.266,13,0.661,14,0.004,15,0.81,16,3.943,17,0.152,32,0.04,37,2.093,55,4.461,77,0.003,85,2.752,164,0.003,168,0.142,221,3.806,222,2.024,223,1.753,329,3.639,1044,5.901,1060,2.517,1062,3.069,1086,4.515,1092,8.357,1111,4.486,1121,8.357,1123,6.898,1811,6.196,1845,6.599,1986,4.629,1987,4.629,3168,8.357,4787,5.602,4788,6.231,4789,7.738]],["title/injectables/WebhookSendService.html",[294,0.727,1059,3.244]],["body/injectables/WebhookSendService.html",[3,0.034,4,0.034,5,0.034,7,0.254,8,1.139,13,0.527,14,0.005,15,0.645,17,0.166,25,3.218,29,1.89,30,2.298,32,0.034,35,2.573,40,2.857,71,0.938,77,0.003,79,2.079,89,2.432,107,0.859,126,1.517,164,0.003,171,1.073,175,0.912,177,0.822,178,0.541,179,0.111,223,1.592,234,1.455,238,1.251,239,1.18,245,3.867,255,3.171,256,1.747,261,3.62,294,1.023,296,1.536,298,1.649,310,4.157,311,1.658,329,2.079,630,2.294,901,3.489,902,5.615,917,3.083,954,2.217,955,3.372,956,3.372,957,3.171,993,4.564,994,3.771,995,3.489,996,3.489,997,3.489,1059,4.564,1086,4.606,1111,2.564,1129,4.775,1211,5.103,1212,6.054,1213,3.372,1216,5.103,1220,3.946,1226,3.771,1227,3.946,1248,2.671,1288,4.722,1289,3.489,1290,3.489,1605,5.352,1845,3.771,3468,4.775,3716,4.775,4789,4.421,4790,8.732,4791,5.312,4792,8.149,4793,7.189,4794,5.312,4795,9.124,4796,5.312,4797,7.189,4798,7.189,4799,5.312,4800,5.312,4801,5.312,4802,5.312,4803,5.312,4804,5.312,4805,5.312,4806,5.312]],["title/controllers/WebhooksController.html",[165,1.135,4807,4.254]],["body/controllers/WebhooksController.html",[3,0.028,4,0.028,5,0.028,7,0.207,13,0.612,14,0.005,15,0.797,17,0.167,32,0.028,71,1.236,77,0.003,107,1.131,157,2.131,164,0.003,165,0.961,167,1.007,168,0.218,171,0.93,173,2.511,175,1.059,177,1.465,178,0.44,179,0.09,223,0.789,234,0.876,238,1.648,239,1.554,249,1.444,256,0.866,329,2.438,415,2.384,428,2.511,629,4.235,829,3.751,907,2.365,1060,3.883,1062,3.933,1111,2.088,1405,5.261,1652,6.907,1658,6.007,1672,4.633,1698,3.954,1951,4.975,1988,3.386,2736,3.601,2950,5.713,2977,5.713,2978,5.713,2979,5.713,2980,6.561,2981,3.601,2983,3.386,2986,3.601,2989,3.386,2992,3.601,2995,3.386,2998,3.889,3001,3.601,3002,6.256,3005,4.628,3006,3.386,3008,3.386,4807,5.185,4808,4.326,4809,4.326,4810,6.561,4811,6.229,4812,4.326,4813,6.229,4814,4.326,4815,6.229,4816,4.326,4817,6.229,4818,4.326,4819,6.229,4820,4.326,4821,6.229,4822,4.326,4823,3.889,4824,6.229,4825,4.326,4826,4.326,4827,6.229,4828,4.326,4829,6.229,4830,4.326,4831,4.326,4832,4.326,4833,4.326,4834,4.326,4835,4.326,4836,4.326,4837,4.326,4838,4.326,4839,4.326,4840,4.326,4841,4.326,4842,4.326]],["title/modules/WebhooksModule.html",[181,1.096,1057,3.357]],["body/modules/WebhooksModule.html",[3,0.042,4,0.042,5,0.042,14,0.005,17,0.189,32,0.042,77,0.003,80,2.168,164,0.003,167,1.908,168,0.148,178,0.661,179,0.135,181,1.927,183,2.198,184,2.228,185,2.292,186,2.292,187,2.292,188,3.126,189,3.126,198,2.893,199,2.292,201,2.935,341,4.703,347,3.414,1057,6.768,1060,2.624,1062,4.649,1066,6.418,1067,5.083,1068,5.083,1951,7.154,1988,5.083,4807,7.48,4843,5.839,4844,5.839,4845,5.839,4846,6.495,4847,6.495,4848,6.495,4849,8.2,4850,6.495]],["title/injectables/WebhooksService.html",[294,0.727,1951,3.483]],["body/injectables/WebhooksService.html",[3,0.016,4,0.016,5,0.016,7,0.192,8,0.637,13,0.544,14,0.005,15,0.713,16,1.799,17,0.169,25,2.176,29,1.907,30,1.838,32,0.016,38,1.574,42,1.625,48,1.574,71,1.202,72,1.55,77,0.002,78,2.887,79,0.961,89,0.83,107,1.061,125,1.802,126,0.701,139,3.255,149,1.29,164,0.002,168,0.207,171,0.6,175,1.007,177,1.353,178,0.25,179,0.051,222,0.797,223,0.931,234,0.814,238,1.546,239,1.458,256,1.598,267,1.29,275,3.615,290,1.558,294,0.572,296,0.71,298,2.033,311,0.766,329,3.02,468,4.223,481,1.29,483,2.807,497,0.854,505,1.353,506,1.139,509,2.26,515,3.879,542,3.526,829,2.625,840,2.206,907,2.242,1017,1.742,1022,1.921,1060,3.68,1062,4.146,1076,4.592,1083,4.592,1086,1.387,1093,2.206,1094,6.432,1096,2.965,1104,1.921,1105,2.043,1106,2.206,1107,2.206,1108,2.206,1109,2.206,1110,1.742,1111,3.145,1112,2.043,1113,2.206,1161,1.673,1162,2.206,1163,2.206,1164,2.206,1165,1.921,1166,2.206,1167,2.043,1168,2.206,1241,1.425,1310,0.918,1405,5.301,1605,4.281,1652,6.466,1658,4.771,1672,3.243,1698,2.553,1811,4.768,1845,4.193,1846,2.043,1858,2.206,1859,1.921,1872,2.206,1900,1.921,1951,2.741,1985,5.038,1986,1.823,1987,1.823,2013,1.921,2015,2.043,2173,3.147,2540,2.043,2680,3.615,2950,3.998,2977,3.998,2978,3.998,2979,3.998,2981,2.043,2983,1.921,2986,2.043,2989,1.921,2992,2.043,2995,1.921,3001,2.043,3002,5.247,3005,2.987,3006,1.921,3008,1.921,4662,3.615,4715,2.206,4783,4.916,4789,4.916,4810,4.592,4823,2.206,4851,2.454,4852,5.108,4853,5.108,4854,5.108,4855,5.108,4856,2.454,4857,5.108,4858,4.021,4859,4.021,4860,2.454,4861,2.454,4862,5.906,4863,2.454,4864,2.454,4865,2.454,4866,2.454,4867,2.454,4868,2.454,4869,2.454,4870,2.454,4871,2.454,4872,2.454,4873,2.454,4874,2.454,4875,2.454,4876,2.454,4877,2.454,4878,4.021,4879,2.454,4880,2.454,4881,2.454,4882,2.454,4883,2.454,4884,2.206,4885,2.454,4886,2.454,4887,2.454,4888,2.454,4889,2.454,4890,2.454,4891,2.454,4892,2.454,4893,2.454,4894,2.454,4895,2.454,4896,2.454,4897,2.454,4898,2.454,4899,2.454,4900,2.454,4901,2.454,4902,2.454,4903,4.021,4904,2.454,4905,2.454,4906,2.454,4907,2.454,4908,2.454,4909,2.454,4910,5.108,4911,5.108,4912,4.021,4913,5.108,4914,2.454,4915,2.454,4916,2.454,4917,2.454,4918,4.021,4919,2.454,4920,2.454,4921,2.454,4922,2.454,4923,2.454,4924,5.108,4925,2.454,4926,2.454,4927,2.454,4928,2.454,4929,2.454,4930,2.454,4931,2.454,4932,2.454,4933,2.454,4934,2.454,4935,2.454,4936,2.454,4937,2.454,4938,4.021,4939,2.454,4940,2.454,4941,2.454,4942,2.454,4943,4.021,4944,2.454,4945,2.454,4946,2.454,4947,4.021,4948,4.021,4949,2.454,4950,2.454,4951,2.454,4952,2.454,4953,2.454]],["title/dependencies.html",[184,2.111,4954,3.824]],["body/dependencies.html",[14,0.005,51,2.765,77,0.003,164,0.003,178,0.576,179,0.156,184,1.943,209,1.679,222,2.438,247,5.09,249,1.89,255,3.38,289,3.859,315,3.719,316,5.09,317,3.046,449,2.58,501,4.207,502,4.207,503,4.713,506,2.629,611,5.09,854,3.595,858,4.02,861,4.48,954,2.364,1123,4.432,1213,3.595,1248,2.848,1338,2.364,1529,4.02,1530,5.327,1586,5.09,1678,2.789,1954,4.713,2403,4.432,2406,4.713,2408,4.713,2716,6.246,2872,5.873,2874,5.09,2875,5.09,3115,4.713,3153,5.09,3154,4.713,3668,6.745,3778,4.432,4086,4.432,4295,5.09,4497,5.09,4498,5.09,4499,5.09,4547,4.713,4699,5.09,4771,5.09,4955,5.663,4956,5.663,4957,5.663,4958,5.663,4959,5.663,4960,5.663,4961,8.96,4962,5.663,4963,5.663,4964,5.663,4965,5.663,4966,5.663,4967,5.663,4968,5.663,4969,5.663,4970,7.504,4971,5.663,4972,5.663,4973,5.663,4974,5.663,4975,5.663,4976,5.663,4977,5.663,4978,5.663,4979,5.663,4980,5.663,4981,5.663,4982,5.663,4983,5.663,4984,5.663,4985,5.663,4986,5.663,4987,5.663,4988,5.663,4989,5.663,4990,5.663,4991,5.663,4992,5.663,4993,5.663,4994,5.663,4995,5.663,4996,5.663,4997,5.663,4998,5.663,4999,5.663,5000,5.663,5001,5.09,5002,5.663,5003,5.663,5004,5.663,5005,5.663,5006,5.663,5007,5.663,5008,5.663,5009,5.663]],["title/miscellaneous/enumerations.html",[5010,3.33,5011,5.532]],["body/miscellaneous/enumerations.html",[7,0.247,14,0.005,77,0.003,164,0.003,168,0.224,291,4.005,311,3.351,335,3.378,595,4.209,762,2.353,763,2.117,875,2.542,883,4.336,907,2.676,909,6.411,942,3.834,947,5.005,1047,7.182,1060,3.244,1096,4.093,1104,5.518,1317,5.478,1384,3.543,1678,3.472,1789,5.238,1790,3.834,1865,6.338,2160,6.338,2677,4.296,2892,3.623,2935,6.338,3355,5.518,3745,5.518,4017,4.64,4086,5.518,4884,6.338,5010,4.039,5011,4.64,5012,5.161,5013,7.05,5014,5.161,5015,7.05,5016,8.629,5017,5.161,5018,5.161,5019,7.05,5020,7.05,5021,9.325,5022,5.161,5023,7.05,5024,5.161,5025,5.161,5026,7.05,5027,8.629,5028,7.05,5029,7.05,5030,7.05,5031,7.05,5032,8.629,5033,8.629,5034,7.05,5035,5.161,5036,5.161,5037,8.629,5038,8.629,5039,5.161,5040,5.161,5041,5.161,5042,5.161,5043,5.161,5044,5.161,5045,5.161,5046,5.161,5047,5.161,5048,5.161,5049,5.161,5050,5.161,5051,5.161]],["title/index.html",[7,0.204,3235,3.824,5052,4.254]],["body/index.html",[14,0.004,35,2.961,77,0.003,96,4.065,164,0.003,168,0.216,169,1.877,322,2.869,575,4.918,590,4.918,597,3.594,638,2.493,672,2.812,723,3.729,762,1.826,763,1.643,788,2.448,947,3.884,1022,4.282,1028,4.554,1039,3.365,1078,3.729,1165,4.282,1167,4.554,1181,3.594,1195,4.282,1203,3.884,1317,3.473,1384,2.246,1463,3.512,1487,3.945,1672,3.473,1678,4.074,1679,4.282,1856,4.282,1938,3.729,2422,4.282,2462,4.554,2932,4.918,3206,6.593,3359,4.554,3540,4.918,3843,4.918,4629,4.918,4740,4.918,5053,6.593,5054,5.471,5055,7.334,5056,7.334,5057,5.471,5058,5.471,5059,5.471,5060,7.334,5061,7.334,5062,5.471,5063,5.471,5064,5.471,5065,5.471,5066,5.471,5067,5.471,5068,5.471,5069,5.471,5070,5.471,5071,5.471,5072,5.471,5073,5.471,5074,7.334,5075,5.471,5076,5.471,5077,5.471,5078,5.471,5079,7.334,5080,5.471,5081,5.471,5082,5.471,5083,5.471,5084,5.471,5085,5.471,5086,5.471,5087,7.334,5088,5.471,5089,7.334,5090,5.471,5091,5.471,5092,8.273,5093,5.471,5094,5.471,5095,5.471,5096,5.471,5097,5.471,5098,5.471,5099,5.471,5100,5.471,5101,5.471,5102,8.273,5103,9.487,5104,5.471,5105,7.334,5106,8.838,5107,5.471,5108,8.273,5109,8.273,5110,5.471,5111,5.471,5112,5.471,5113,5.471,5114,5.471,5115,7.334,5116,5.471,5117,9.487,5118,5.471,5119,7.334,5120,5.471,5121,5.471,5122,5.471,5123,5.471,5124,5.471,5125,5.471,5126,7.334,5127,5.471,5128,5.471]],["title/modules.html",[183,2.369]],["body/modules.html",[14,0.003,77,0.003,164,0.003,182,4.211,183,1.82,192,3.997,193,3.819,194,3.819,195,3.667,196,3.415,197,3.212,260,4.837,336,2.965,341,2.546,342,3.997,450,3.667,1052,3.667,1057,3.534,1266,3.997,1275,3.819,1415,4.211,1419,3.997,1420,3.997,1421,3.997,1422,3.997,1423,3.819,1424,3.997,1425,3.819,1426,3.997,1453,4.211,1457,3.997,1458,3.997,1464,4.211,1467,3.997,1468,3.997,1469,3.997,1475,4.211,1478,3.997,1479,3.997,1488,4.211,1491,3.997,1498,4.211,1501,3.997,1502,3.997,5129,10.815,5130,10.815,5131,10.815,5132,10.823,5133,5.38]],["title/overview.html",[5134,6.295]],["body/overview.html",[2,0.6,14,0.005,77,0.002,80,0.774,164,0.002,167,0.539,181,0.497,182,6.845,183,0.784,184,0.795,185,0.818,186,0.818,187,0.818,188,0.806,189,0.806,190,2.084,191,2.084,192,5.809,193,5.353,194,6.775,195,5.961,196,5.552,197,5.222,198,1.353,199,0.818,229,0.842,295,4.151,296,0.67,336,5.26,337,2.084,338,2.084,339,2.084,340,2.084,341,4.385,342,5.059,343,4.335,450,5.493,451,2.084,469,5.355,633,3.646,667,2.084,668,2.084,695,4.303,770,2.705,848,2.084,850,2.084,851,3.888,882,3.646,1052,5.961,1053,2.084,1054,2.084,1055,2.084,1056,2.084,1057,5.429,1058,5.642,1059,4.012,1266,4.695,1267,2.084,1275,5.551,1276,2.084,1278,2.084,1279,2.084,1280,5.117,1415,7.513,1416,2.084,1417,2.084,1418,2.084,1419,4.695,1420,4.695,1421,5.355,1422,4.695,1423,5.551,1424,5.809,1425,5.721,1426,5.355,1427,3.841,1453,6.307,1454,2.084,1455,2.084,1456,2.084,1457,6.393,1458,6.393,1459,3.841,1464,5.901,1465,2.084,1466,2.084,1467,5.059,1468,4.695,1469,6.498,1475,6.61,1476,2.084,1477,2.084,1478,6.592,1479,6.393,1488,4.464,1489,2.084,1490,2.084,1491,5.602,1498,5.329,1499,2.084,1500,2.084,1501,6.885,1502,7.242,1526,3.646,1538,2.084,1539,2.084,1574,6,1581,2.084,1582,2.084,1583,2.084,1694,3.646,1707,2.084,1709,2.084,1710,3.646,1711,3.886,1712,3.646,1713,3.746,1935,3.841,1951,4.913,1952,3.746,2089,3.646,2108,2.084,2110,2.084,2241,2.084,2242,2.084,2244,3.841,2563,3.646,2690,3.646,2701,3.646,2734,3.646,2739,2.084,2740,2.084,2766,2.084,2767,2.084,2788,1.471,2803,4.913,2832,5.117,3021,2.084,3023,2.084,3024,2.084,3062,3.841,3111,6,3136,2.084,3138,2.084,3139,2.084,3151,3.646,3156,5.117,3176,2.084,3177,2.084,3321,2.084,3322,2.084,3323,2.084,3396,3.646,3412,2.084,3414,2.084,3570,2.084,3572,2.084,3573,2.084,3621,3.646,3652,5.355,3655,2.084,3656,2.084,3658,2.084,3810,3.646,3869,3.484,3887,2.084,3889,2.084,3961,3.646,3974,3.841,4101,2.084,4102,2.084,4176,2.084,4178,2.084,4179,3.646,4216,5.355,4223,2.084,4224,2.084,4225,2.084,4226,3.646,4278,2.084,4279,2.084,4280,2.084,4442,2.084,4444,2.084,4445,3.841,4633,2.084,4634,2.084,4636,2.084,4843,2.084,4844,2.084,4845,2.084,5134,2.084,5135,2.318,5136,2.318,5137,2.318,5138,2.318,5139,2.318,5140,2.318]],["title/properties.html",[8,0.975,4954,3.824]],["body/properties.html",[8,1.277,14,0.004,21,3.968,77,0.004,164,0.004,788,3.604,947,5.719,5001,7.242,5053,7.242,5141,8.057,5142,8.057,5143,8.057,5144,8.057,5145,8.057]],["title/miscellaneous/typealiases.html",[5010,3.33,5146,6.154]],["body/miscellaneous/typealiases.html",[6,5.643,7,0.364,13,0.623,14,0.004,36,5.391,41,5.391,44,6.151,77,0.004,78,4.293,90,6.705,91,5.643,164,0.004,1303,6.151,2289,6.322,2306,7.512,2307,7.512,2308,7.512,2361,6.322,2392,5.928,2409,7.512,5010,5.944,5147,7.595,5148,9.025,5149,9.025,5150,9.025]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":813,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"classes/ERC20Transfer.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/PaymasterApiService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"classes/SwapTokens.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{}}}],["0.0.1",{"_index":5001,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.001",{"_index":4501,"title":{},"body":{"classes/TransferToken.html":{}}}],["0.14.1",{"_index":4979,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":5003,"title":{},"body":{"dependencies.html":{}}}],["0.3.4",{"_index":4958,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4978,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4998,"title":{},"body":{"dependencies.html":{}}}],["0_1_0",{"_index":3314,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["0x",{"_index":1797,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["0x${inputarr.map((hexstr",{"_index":2494,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["0x00",{"_index":2489,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["0x19",{"_index":2488,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",{"_index":2205,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["1",{"_index":104,"title":{"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsValidApiKeysGuard-1.html":{},"injectables/JwtStrategy-1.html":{},"interfaces/Token-1.html":{},"injectables/UserOpParser-1.html":{},"interfaces/WebhookEvent-1.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/FuseLiquidStakingService.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"classes/ScannerService.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/UsersController.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{}}}],["1.0.2",{"_index":4970,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4997,"title":{},"body":{"dependencies.html":{}}}],["1.1.24",{"_index":4957,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":4955,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":4971,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":4991,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":4996,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2327,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["10.0.3",{"_index":4966,"title":{},"body":{"dependencies.html":{}}}],["10.0.6",{"_index":4965,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":4963,"title":{},"body":{"dependencies.html":{}}}],["10.3.8",{"_index":4961,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2665,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["1000",{"_index":1547,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/EventsScannerModule.html":{}}}],["11000",{"_index":275,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/WebhooksService.html":{}}}],["140000",{"_index":3232,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["15",{"_index":3287,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["16",{"_index":2507,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["16.4.5",{"_index":4983,"title":{},"body":{"dependencies.html":{}}}],["16.8.1",{"_index":4987,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":2552,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{}}}],["1].balance",{"_index":4737,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["1].totalvoltstaked",{"_index":4738,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["2",{"_index":3925,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["2.0",{"_index":3154,"title":{},"body":{"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"dependencies.html":{}}}],["2.2.2",{"_index":4960,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":4973,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1865,"title":{},"body":{"injectables/DataLayerService.html":{},"miscellaneous/enumerations.html":{}}}],["200",{"_index":2343,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["3.0.1",{"_index":4972,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4959,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4992,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4962,"title":{},"body":{"dependencies.html":{}}}],["3.23.5",{"_index":5009,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":4981,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2333,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["3000",{"_index":4802,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["31",{"_index":4719,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["32",{"_index":2491,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["36",{"_index":5138,"title":{},"body":{"overview.html":{}}}],["365",{"_index":2667,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["38",{"_index":5136,"title":{},"body":{"overview.html":{}}}],["39",{"_index":5135,"title":{},"body":{"overview.html":{}}}],["4",{"_index":552,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["4.0.0",{"_index":4993,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":4999,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":4968,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":4994,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4980,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":2880,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["5.0.0",{"_index":4975,"title":{},"body":{"dependencies.html":{}}}],["5.0.5",{"_index":5005,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4976,"title":{},"body":{"dependencies.html":{}}}],["5.5.2",{"_index":4974,"title":{},"body":{"dependencies.html":{}}}],["5.7.2",{"_index":4986,"title":{},"body":{"dependencies.html":{}}}],["54",{"_index":5140,"title":{},"body":{"overview.html":{}}}],["55",{"_index":5137,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1125,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["6.1.0",{"_index":4988,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":1544,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/EventsScannerModule.html":{}}}],["600000",{"_index":1591,"title":{},"body":{"modules/ConsensusModule.html":{}}}],["7.1.0",{"_index":4990,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":4985,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":5006,"title":{},"body":{"dependencies.html":{}}}],["700000",{"_index":2428,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["721",{"_index":5029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8",{"_index":5139,"title":{},"body":{"overview.html":{}}}],["8.17.0",{"_index":5007,"title":{},"body":{"dependencies.html":{}}}],["8.3.3",{"_index":4995,"title":{},"body":{"dependencies.html":{}}}],["900",{"_index":3228,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["_amount",{"_index":2435,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_axios",{"_index":2362,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_credentials",{"_index":2363,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_data",{"_index":2437,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_encodeddataforcontractcall",{"_index":2364,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_eth",{"_index":4485,"title":{},"body":{"classes/TransferToken.html":{}}}],["_from",{"_index":2365,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_getnonce",{"_index":2366,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_id",{"_index":4662,"title":{},"body":{"injectables/UsersService.html":{},"injectables/WebhooksService.html":{}}}],["_initwebsocket",{"_index":2367,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_isfragment",{"_index":63,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["_privatekey",{"_index":4486,"title":{},"body":{"classes/TransferToken.html":{}}}],["_signer",{"_index":2368,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_signoffchain",{"_index":2369,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_smartwalletsjwt",{"_index":2370,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_socketclient",{"_index":2371,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_throwerror",{"_index":2372,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_to",{"_index":2434,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/TransferToken.html":{}}}],["_token",{"_index":2433,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["_wallet",{"_index":2373,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["aa",{"_index":1725,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["aa.service",{"_index":3963,"title":{},"body":{"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{}}}],["aa.service.ts",{"_index":3812,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["aa.service.ts:14",{"_index":3818,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["aa.service.ts:24",{"_index":3820,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["aa.service.ts:64",{"_index":3824,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["aa.service.ts:71",{"_index":3822,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["aaservice",{"_index":3965,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["abi",{"_index":1916,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["abitype",{"_index":4969,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":2255,"title":{},"body":{"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"classes/WalletAction.html":{}}}],["abstractdecodedeventresult",{"_index":1,"title":{"interfaces/AbstractDecodedEventResult.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["abstraction",{"_index":5066,"title":{},"body":{"index.html":{}}}],["access",{"_index":590,"title":{},"body":{"controllers/AppStoreController.html":{},"index.html":{}}}],["accessors",{"_index":690,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["account",{"_index":597,"title":{},"body":{"controllers/AppStoreController.html":{},"guards/IsAccountOwnerGuard.html":{},"injectables/PaymentsService.html":{},"controllers/RelayAccountsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["account.interface",{"_index":2155,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["account.interface.ts",{"_index":2058,"title":{},"body":{"interfaces/EthereumPaymentAccount.html":{},"interfaces/PaymentAccount.html":{}}}],["accountabstraction",{"_index":4487,"title":{},"body":{"classes/TransferToken.html":{}}}],["accountabstractiongraphurl",{"_index":2761,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["accountaddress",{"_index":878,"title":{},"body":{"interfaces/BackendWallet.html":{},"injectables/ChargeApiService.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/StakeDto.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"classes/UnstakeDto.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["accountaddress.tolowercase",{"_index":4754,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["accountclient",{"_index":3193,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["accounts",{"_index":169,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"modules/ApiKeyModule.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/UpdateProjectDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["accounts.constants",{"_index":3672,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["accounts.controller",{"_index":3660,"title":{},"body":{"modules/RelayAccountsModule.html":{}}}],["accounts.controller.ts",{"_index":3647,"title":{},"body":{"controllers/RelayAccountsController.html":{}}}],["accounts.controller.ts:15",{"_index":3651,"title":{},"body":{"controllers/RelayAccountsController.html":{}}}],["accounts.interface",{"_index":3673,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["accounts.interface.ts",{"_index":3644,"title":{},"body":{"interfaces/RelayAccount.html":{}}}],["accounts.module",{"_index":1495,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{}}}],["accounts.module.ts",{"_index":3659,"title":{},"body":{"modules/RelayAccountsModule.html":{}}}],["accounts.providers",{"_index":3662,"title":{},"body":{"modules/RelayAccountsModule.html":{}}}],["accounts.service",{"_index":3653,"title":{},"body":{"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{}}}],["accounts.service.ts",{"_index":3663,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["accounts.service.ts:15",{"_index":3667,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["accounts.service.ts:9",{"_index":3665,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["accounts/interfaces/relay",{"_index":3643,"title":{},"body":{"interfaces/RelayAccount.html":{},"injectables/RelayAccountsService.html":{}}}],["accounts/relay",{"_index":1494,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{}}}],["accountsclient",{"_index":1749,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["accountscontroller",{"_index":166,"title":{"controllers/AccountsController.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{}}}],["accountsmodule",{"_index":182,"title":{"modules/AccountsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules.html":{},"overview.html":{}}}],["accountsservice",{"_index":1727,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsModule.html":{}}}],["action",{"_index":820,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{}}}],["action.interface",{"_index":1785,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["action.interface.ts",{"_index":4781,"title":{},"body":{"interfaces/WalletActionInterface.html":{}}}],["action.schema",{"_index":1777,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["action.schema.ts",{"_index":4769,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["action/approve",{"_index":766,"title":{},"body":{"classes/ApproveToken.html":{}}}],["action/base",{"_index":805,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["action/base.ts",{"_index":4758,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/base.ts:11",{"_index":4761,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/base.ts:15",{"_index":4760,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/base.ts:19",{"_index":4762,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/base.ts:5",{"_index":4759,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/base.ts:7",{"_index":4763,"title":{},"body":{"classes/WalletAction.html":{}}}],["action/erc20",{"_index":2049,"title":{},"body":{"classes/ERC20Transfer.html":{}}}],["action/native",{"_index":2955,"title":{},"body":{"classes/NativeTransfer.html":{}}}],["action/nft",{"_index":2965,"title":{},"body":{"classes/NftTransfer.html":{}}}],["action/stake.ts",{"_index":4123,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/stake.ts:20",{"_index":4137,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/stake.ts:31",{"_index":4139,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/stake.ts:47",{"_index":4133,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/stake.ts:58",{"_index":4135,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/stake.ts:68",{"_index":4130,"title":{},"body":{"classes/StakeTokens.html":{}}}],["action/swap.ts",{"_index":4321,"title":{},"body":{"classes/SwapTokens.html":{}}}],["action/token",{"_index":4375,"title":{},"body":{"classes/TokenReceive.html":{}}}],["action/unstake.ts",{"_index":4538,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["actions",{"_index":1679,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"index.html":{}}}],["activate",{"_index":589,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["activateapp",{"_index":577,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["activateapp(appname",{"_index":585,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["activated",{"_index":605,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/OperatorsController.html":{}}}],["activatedapp",{"_index":216,"title":{"interfaces/ActivatedApp.html":{}},"body":{"interfaces/ActivatedApp.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["activities",{"_index":5089,"title":{},"body":{"index.html":{}}}],["activity",{"_index":5086,"title":{},"body":{"index.html":{}}}],["actualgascost",{"_index":1048,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["actualgasused",{"_index":1051,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["actualverificationgaslimit",{"_index":3248,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["add",{"_index":4713,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["added",{"_index":4952,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addinterval",{"_index":1158,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["additional",{"_index":4714,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["addrelevantwebhooktokenseventstoqueue",{"_index":4852,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addrelevantwebhooktokenseventstoqueue(addresswatchers",{"_index":4860,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["address",{"_index":907,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/ERC721Transfer.html":{},"injectables/EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/IValidator.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/LogFilter.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"interfaces/UserOp.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/WebhookAddress.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["address.interface",{"_index":4880,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["address.interface.ts",{"_index":4785,"title":{},"body":{"interfaces/WebhookAddress.html":{}}}],["address.tolowercase",{"_index":2173,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"controllers/GraphqlController.html":{},"injectables/PaymentsService.html":{},"injectables/WebhooksService.html":{}}}],["addresses",{"_index":1409,"title":{},"body":{"injectables/ChargeApiService.html":{},"classes/CreateWebhookAddressesDto.html":{},"controllers/NotificationsController.html":{}}}],["addresses.dto",{"_index":3008,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["addresses.dto.ts",{"_index":1654,"title":{},"body":{"classes/CreateWebhookAddressesDto.html":{}}}],["addresses.dto.ts:5",{"_index":1657,"title":{},"body":{"classes/CreateWebhookAddressesDto.html":{}}}],["addresses.dto.ts:8",{"_index":1656,"title":{},"body":{"classes/CreateWebhookAddressesDto.html":{}}}],["addresses?apikey=${this.chargepublickey",{"_index":1407,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["addresses_to_add",{"_index":986,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["addresses_to_remove",{"_index":987,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["addresstype",{"_index":4789,"title":{},"body":{"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["addresstypes",{"_index":4884,"title":{},"body":{"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["addresstypes.token",{"_index":4934,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addresstypes.wallet",{"_index":4938,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addresswatcher",{"_index":4943,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addresswatchers",{"_index":4862,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addresswatchers.map(watcher",{"_index":4923,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["addwebhookaddress",{"_index":887,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["addwebhookaddress(address",{"_index":905,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["addwebhookaddress(params",{"_index":1302,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["admin",{"_index":2899,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["administration",{"_index":5068,"title":{},"body":{"index.html":{}}}],["again",{"_index":2466,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["alchemy",{"_index":2117,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["alchemyauthkey",{"_index":897,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["alchemybaseurl",{"_index":896,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["alchemywebookid",{"_index":898,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["algorithms",{"_index":2890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["aliases",{"_index":5147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":228,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{}}}],["allowed",{"_index":2188,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["allowedpaymenttokens",{"_index":2123,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["allowedtokenaddresses",{"_index":2124,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["allowedtokensymbols",{"_index":2125,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["allows",{"_index":5088,"title":{},"body":{"index.html":{}}}],["already",{"_index":396,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/UsersService.html":{}}}],["alternatively",{"_index":3169,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["amount",{"_index":1364,"title":{},"body":{"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"injectables/DataLayerService.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"interfaces/IValidator.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["amount.tostring",{"_index":2549,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["amountfloat",{"_index":2216,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["amountformatted",{"_index":2785,"title":{},"body":{"interfaces/IValidator.html":{}}}],["amountin",{"_index":4356,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountin.tostring",{"_index":4358,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountinmax",{"_index":4335,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountinmax.tostring",{"_index":4342,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountout",{"_index":4334,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountout.tostring",{"_index":4344,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountoutmin",{"_index":4357,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountoutmin.tostring",{"_index":4359,"title":{},"body":{"classes/SwapTokens.html":{}}}],["amountusd",{"_index":1883,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["amplitude/analytics",{"_index":316,"title":{},"body":{"injectables/AnalyticsService.html":{},"dependencies.html":{}}}],["analytics",{"_index":1896,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["analyticsservice",{"_index":295,"title":{"injectables/AnalyticsService.html":{}},"body":{"injectables/AnalyticsService.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/OperatorsModule.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["anonymous",{"_index":129,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["answers",{"_index":4625,"title":{},"body":{"controllers/UsersController.html":{}}}],["api",{"_index":322,"title":{},"body":{"interfaces/ApiKey.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"controllers/AppStoreController.html":{},"interfaces/BaseUserOp.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"interfaces/CreateSecretDto.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"controllers/TradeApiController.html":{},"interfaces/UserOp.html":{},"index.html":{}}}],["api.controller",{"_index":1272,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/LegacyApiModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["api.controller.ts",{"_index":1172,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/PaymasterApiController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/StakingApiController.html":{}}}],["api.controller.ts:10",{"_index":2268,"title":{},"body":{"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{}}}],["api.controller.ts:11",{"_index":1173,"title":{},"body":{"controllers/BundlerApiController.html":{}}}],["api.controller.ts:13",{"_index":2730,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{}}}],["api.controller.ts:14",{"_index":2269,"title":{},"body":{"controllers/ExplorerApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{}}}],["api.controller.ts:15",{"_index":1174,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/StakingApiController.html":{}}}],["api.controller.ts:16",{"_index":2902,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"controllers/SmartWalletsAPIController.html":{}}}],["api.controller.ts:18",{"_index":2733,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"controllers/LegacyWalletApiController.html":{}}}],["api.controller.ts:19",{"_index":2905,"title":{},"body":{"controllers/LegacyAdminApiController.html":{}}}],["api.controller.ts:20",{"_index":1522,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/StakingApiController.html":{}}}],["api.controller.ts:22",{"_index":2951,"title":{},"body":{"controllers/LegacyWalletApiController.html":{},"controllers/SmartWalletsAPIController.html":{}}}],["api.controller.ts:25",{"_index":1520,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/StakingApiController.html":{}}}],["api.controller.ts:28",{"_index":3860,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["api.controller.ts:30",{"_index":1516,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/PaymasterApiController.html":{},"controllers/StakingApiController.html":{}}}],["api.controller.ts:34",{"_index":3868,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["api.controller.ts:35",{"_index":1525,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["api.controller.ts:41",{"_index":3863,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["api.interceptor",{"_index":1178,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["api.interceptor.ts",{"_index":1186,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["api.interceptor.ts:11",{"_index":2909,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["api.interceptor.ts:14",{"_index":2275,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{}}}],["api.interceptor.ts:19",{"_index":2910,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["api.interceptor.ts:20",{"_index":2276,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{}}}],["api.interceptor.ts:24",{"_index":1191,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["api.interceptor.ts:31",{"_index":1197,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["api.interceptor.ts:46",{"_index":2911,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["api.interceptor.ts:50",{"_index":2277,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{}}}],["api.interceptor.ts:80",{"_index":1200,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["api.interceptor.ts:97",{"_index":1202,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["api.module",{"_index":1433,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsModule.html":{}}}],["api.module.ts",{"_index":1269,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/LegacyApiModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["api.service",{"_index":1282,"title":{},"body":{"modules/ChargeApiModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{}}}],["api.service.ts",{"_index":1292,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/ConsensusApiService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/StakingAPIService.html":{}}}],["api.service.ts:10",{"_index":4184,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["api.service.ts:105",{"_index":3214,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:113",{"_index":3197,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:12",{"_index":2743,"title":{},"body":{"injectables/GraphqlAPIService.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:124",{"_index":1316,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/PaymasterApiService.html":{}}}],["api.service.ts:13",{"_index":1556,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["api.service.ts:14",{"_index":3634,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["api.service.ts:15",{"_index":1301,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/StakingAPIService.html":{}}}],["api.service.ts:151",{"_index":1307,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:155",{"_index":1312,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:16",{"_index":2744,"title":{},"body":{"injectables/GraphqlAPIService.html":{}}}],["api.service.ts:165",{"_index":1304,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:17",{"_index":1555,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["api.service.ts:175",{"_index":1309,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:18",{"_index":3628,"title":{},"body":{"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:181",{"_index":1319,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:19",{"_index":4187,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["api.service.ts:197",{"_index":3211,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:201",{"_index":1318,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:208",{"_index":3208,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:21",{"_index":1554,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["api.service.ts:216",{"_index":3205,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:22",{"_index":3192,"title":{},"body":{"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:23",{"_index":4191,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["api.service.ts:24",{"_index":1324,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:25",{"_index":1558,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["api.service.ts:26",{"_index":3897,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:27",{"_index":4189,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["api.service.ts:28",{"_index":1326,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/RelayAPIService.html":{}}}],["api.service.ts:30",{"_index":3904,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:32",{"_index":1327,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:33",{"_index":3210,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:34",{"_index":3900,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:36",{"_index":1328,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:38",{"_index":3898,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:40",{"_index":1330,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:42",{"_index":3632,"title":{},"body":{"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:44",{"_index":1332,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:46",{"_index":3902,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:48",{"_index":1334,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:50",{"_index":3903,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["api.service.ts:52",{"_index":1335,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:56",{"_index":1323,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:57",{"_index":3630,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["api.service.ts:58",{"_index":1306,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api.service.ts:7",{"_index":2742,"title":{},"body":{"injectables/GraphqlAPIService.html":{}}}],["api.service.ts:8",{"_index":1551,"title":{},"body":{"injectables/ConsensusApiService.html":{},"injectables/RelayAPIService.html":{}}}],["api.service.ts:90",{"_index":3202,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api.service.ts:94",{"_index":1321,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["api/abi/fuseverifyingpaymastersingleton.abi.json",{"_index":3220,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["api/backend",{"_index":1284,"title":{},"body":{"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{}}}],["api/bundler",{"_index":1171,"title":{},"body":{"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{}}}],["api/charge",{"_index":1281,"title":{},"body":{"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsModule.html":{}}}],["api/config/configuration",{"_index":1271,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/ExplorerApiModule.html":{},"modules/LegacyApiModule.html":{},"modules/PaymasterApiModule.html":{}}}],["api/consensus",{"_index":1446,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{}}}],["api/explorer",{"_index":1438,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{}}}],["api/graphql",{"_index":1444,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{}}}],["api/interfaces/backend",{"_index":876,"title":{},"body":{"interfaces/BackendWallet.html":{},"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{}}}],["api/jwt.strategy",{"_index":3891,"title":{},"body":{"modules/SmartWalletsAPIModule.html":{}}}],["api/jwt.strategy.ts",{"_index":2893,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["api/jwt.strategy.ts:17",{"_index":2895,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["api/jwt.strategy.ts:7",{"_index":2894,"title":{},"body":{"injectables/JwtStrategy-1.html":{}}}],["api/legacy",{"_index":1432,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["api/paymaster",{"_index":1440,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{}}}],["api/schemas/backend",{"_index":942,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"miscellaneous/enumerations.html":{}}}],["api/smart",{"_index":1442,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["api/staking",{"_index":1436,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{}}}],["api_key's",{"_index":373,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["api_keys",{"_index":378,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["apiclient",{"_index":1748,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ProjectsService.html":{}}}],["apikey",{"_index":321,"title":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{}},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"interfaces/BaseUserOp.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsAAEventsService.html":{},"interfaces/UserOp.html":{}}}],["apikey.projectid",{"_index":2830,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{}}}],["apikeymodel",{"_index":471,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["apikeymodelstring",{"_index":498,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["apikeymodule",{"_index":336,"title":{"modules/ApiKeyModule.html":{}},"body":{"modules/ApiKeyModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/StakingAPIModule.html":{},"modules.html":{},"overview.html":{}}}],["apikeys",{"_index":518,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["apikeys?.publickey",{"_index":520,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["apikeys?.sandboxkey",{"_index":537,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["apikeys?.secrethash",{"_index":524,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["apikeyscontroller",{"_index":346,"title":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{}}}],["apikeysdto",{"_index":431,"title":{"classes/ApiKeysDto.html":{}},"body":{"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{}}}],["apikeysdto.appname",{"_index":569,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["apikeysdto.ownerid",{"_index":568,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["apikeysinfo",{"_index":3618,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["apikeysinfo?.secretlastfourchars",{"_index":3619,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["apikeysmodule",{"_index":450,"title":{"modules/ApiKeysModule.html":{}},"body":{"modules/ApiKeysModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["apikeysproviders",{"_index":352,"title":{},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{}}}],["apikeysservice",{"_index":343,"title":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"overview.html":{}}}],["apis",{"_index":5062,"title":{},"body":{"index.html":{}}}],["apiservice",{"_index":1728,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{}}}],["app",{"_index":575,"title":{},"body":{"controllers/AppStoreController.html":{},"index.html":{}}}],["app.appname",{"_index":731,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["app.toobject",{"_index":743,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["app/accounts",{"_index":202,"title":{},"body":{"modules/AccountsModule.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"modules/SmartWalletsModule.html":{},"classes/UpdateProjectDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["app/api",{"_index":348,"title":{},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"injectables/ApiKeysService.html":{},"controllers/BundlerApiController.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"controllers/ExplorerApiController.html":{},"modules/ExplorerApiModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{},"modules/StudioLegacyJwtModule.html":{},"controllers/TradeApiController.html":{}}}],["app/apps",{"_index":436,"title":{},"body":{"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/ChargeAppsServiceModule.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/OperatorsController.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsModule.html":{}}}],["app/common",{"_index":347,"title":{},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/BroadcasterModule.html":{},"modules/ChargeApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{}}}],["app/common/centrifuge/centrifuge.provider",{"_index":4109,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["app/common/centrifuge/centrifugeclient.provider",{"_index":1724,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/SmartWalletsModule.html":{}}}],["app/common/constants/microservices.constants",{"_index":679,"title":{},"body":{"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["app/common/database/database.module",{"_index":676,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["app/common/database/database.providers",{"_index":1908,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["app/common/decorators/project.decorator",{"_index":3924,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["app/common/decorators/smart",{"_index":3872,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["app/common/interfaces/smart",{"_index":3874,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["app/common/services/analytics.service",{"_index":1729,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/OperatorsModule.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsModule.html":{}}}],["app/common/services/gas.service",{"_index":1996,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["app/common/services/graphql.service",{"_index":2754,"title":{},"body":{"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{}}}],["app/common/services/trade.service",{"_index":1730,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"injectables/VoltBarService.html":{}}}],["app/common/services/user",{"_index":3179,"title":{},"body":{"modules/PaymasterApiModule.html":{}}}],["app/common/services/webhook",{"_index":1070,"title":{},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{}}}],["app/common/utils/client",{"_index":725,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/NotificationsService.html":{},"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/StakingAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["app/common/utils/dtools/decodebysighash",{"_index":4591,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["app/common/utils/dtools/decodecalldata",{"_index":2297,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["app/common/utils/dtools/decodeevent",{"_index":2298,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["app/common/utils/dtools/parseabi",{"_index":2300,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["app/common/utils/dtools/validation/schemas/hexschema",{"_index":2296,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["app/common/utils/env.helper",{"_index":4111,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["app/network",{"_index":1470,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"injectables/FuseLiquidStakingService.html":{},"controllers/GraphqlController.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["app/notifications",{"_index":1062,"title":{},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"modules/ChargeNotificationsServiceModule.html":{},"classes/CreateWebhookDto.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/UpdateWebhookDto.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent-1.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["app/relay",{"_index":1492,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{}}}],["app/smart",{"_index":802,"title":{},"body":{"classes/ApproveToken.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpFactory.html":{},"classes/WalletAction.html":{}}}],["app?.isactivated",{"_index":748,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["appapikey",{"_index":2852,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["appapikey?.ownerid",{"_index":2855,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["appapikey?.secrethash",{"_index":2853,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["appdocs",{"_index":740,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["appdocs.map(app",{"_index":742,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["appkeys",{"_index":570,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["application",{"_index":220,"title":{"interfaces/Application.html":{}},"body":{"interfaces/ActivatedApp.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["application/json",{"_index":1290,"title":{},"body":{"modules/ChargeApiModule.html":{},"modules/EthereumPaymentsModule.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/WebhookSendService.html":{}}}],["applicationmodel",{"_index":694,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["applicationmodelstring",{"_index":716,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["applications",{"_index":5059,"title":{},"body":{"index.html":{}}}],["appname",{"_index":225,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/ApiKey-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["approved",{"_index":821,"title":{},"body":{"classes/ApproveToken.html":{}}}],["approvedtransfer",{"_index":2413,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["approvetoken",{"_index":761,"title":{"classes/ApproveToken.html":{}},"body":{"classes/ApproveToken.html":{}}}],["apps",{"_index":335,"title":{},"body":{"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"guards/IsValidApiKeysGuard-1.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"interfaces/WebhookEvent.html":{},"miscellaneous/enumerations.html":{}}}],["apps/.../backend",{"_index":5022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../ethereum",{"_index":5015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../payment",{"_index":5017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../smart",{"_index":5020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../token",{"_index":5018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../webhook",{"_index":5012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../webhook.schema.ts",{"_index":5014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/charge",{"_index":168,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["appstoreclient",{"_index":697,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["appstorecontroller",{"_index":573,"title":{"controllers/AppStoreController.html":{}},"body":{"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{}}}],["appstoremodule",{"_index":192,"title":{"modules/AppStoreModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["appstoreproviders",{"_index":674,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["appstoreservice",{"_index":633,"title":{"injectables/AppStoreService.html":{}},"body":{"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"overview.html":{}}}],["aprtoapy",{"_index":2615,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["aprtoapy(rewardperyearapr",{"_index":2666,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["apy",{"_index":2774,"title":{},"body":{"interfaces/IValidator.html":{}}}],["archive",{"_index":4449,"title":{},"body":{"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{}}}],["args",{"_index":39,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["argumentshost",{"_index":242,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":1043,"title":{},"body":{"interfaces/BaseUserOp.html":{},"controllers/PaymasterApiController.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserOp.html":{},"interfaces/UserStakedTokens.html":{}}}],["arraychildren",{"_index":115,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["arrayify",{"_index":3216,"title":{},"body":{"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["arraylength",{"_index":121,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["assert",{"_index":1913,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["asset",{"_index":2143,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["asset.tolowercase",{"_index":2232,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["associated",{"_index":385,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{}}}],["assume",{"_index":92,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["async",{"_index":298,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"injectables/ConsensusApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphqlAPIService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/NotificationsService.html":{},"controllers/OperatorsController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["audience",{"_index":2886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth",{"_index":843,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["auth(projectid",{"_index":3915,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["auth(smartwalletsauthdto",{"_index":3819,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["auth.dto",{"_index":3754,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["auth.dto.ts",{"_index":3936,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.dto.ts:11",{"_index":3938,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.dto.ts:15",{"_index":3941,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.dto.ts:19",{"_index":3939,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.dto.ts:5",{"_index":3937,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.dto.ts:8",{"_index":3940,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["auth.guard",{"_index":637,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":2857,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth0id",{"_index":586,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/DataLayerService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["authcontroller",{"_index":827,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":2374,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["authenticated",{"_index":606,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["authguard",{"_index":2860,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["authguard(['jwt",{"_index":2858,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":193,"title":{"modules/AuthModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AuthModule.html":{},"modules/OperatorsModule.html":{},"modules.html":{},"overview.html":{}}}],["authoperatordto",{"_index":866,"title":{"classes/AuthOperatorDto.html":{}},"body":{"classes/AuthOperatorDto.html":{},"controllers/OperatorsController.html":{}}}],["author",{"_index":5143,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":2529,"title":{},"body":{"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["available",{"_index":260,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules.html":{}}}],["availableapp",{"_index":219,"title":{"interfaces/AvailableApp.html":{}},"body":{"interfaces/ActivatedApp.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["availableapps",{"_index":691,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["avoid",{"_index":1925,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["await",{"_index":509,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NftTransfer.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["axios",{"_index":1213,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{},"dependencies.html":{}}}],["axios.create",{"_index":2444,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["axios.isaxioserror(error",{"_index":2517,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["axioserror",{"_index":2402,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["axiosinstance",{"_index":2379,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["axiosrequestconfig",{"_index":1211,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{}}}],["axiosresponse",{"_index":1212,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/WebhookSendService.html":{}}}],["axiosresponse.data",{"_index":1224,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["backend",{"_index":947,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"interfaces/EthereumBackendWallet.html":{},"injectables/EthereumPaymentsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["backendwallet",{"_index":874,"title":{"interfaces/BackendWallet.html":{}},"body":{"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["backendwallet._id",{"_index":1356,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["backendwallet.save",{"_index":981,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["backendwallet.walletaddress",{"_index":3459,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["backendwalletethereummodel",{"_index":903,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["backendwalletethereumservice",{"_index":2130,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["backendwalletid",{"_index":1602,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{}}}],["backendwalletmodel",{"_index":1300,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["backendwalletmodelstring",{"_index":1336,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["backendwalletproviders",{"_index":1283,"title":{},"body":{"modules/ChargeApiModule.html":{}}}],["backendwalletsethereumservice",{"_index":882,"title":{"injectables/BackendWalletsEthereumService.html":{}},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"overview.html":{}}}],["balance",{"_index":3807,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["balances",{"_index":5077,"title":{},"body":{"index.html":{}}}],["bar.service",{"_index":4231,"title":{},"body":{"modules/StakingModule.html":{},"injectables/StakingService.html":{}}}],["bar.service.ts",{"_index":4666,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:104",{"_index":4676,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:133",{"_index":4678,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:145",{"_index":4672,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:25",{"_index":4670,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:35",{"_index":4681,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:39",{"_index":4683,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:43",{"_index":4685,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:47",{"_index":4686,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:51",{"_index":4687,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:55",{"_index":4689,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:59",{"_index":4674,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:63",{"_index":4679,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bar.service.ts:67",{"_index":4675,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["barid",{"_index":4752,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bars",{"_index":4728,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["bars?.[0]?.totalsupply",{"_index":4730,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["base64url",{"_index":503,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"dependencies.html":{}}}],["base64url(crypto.randombytes(18",{"_index":548,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["based",{"_index":2920,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["baseprovider",{"_index":1949,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/GasService.html":{},"classes/ScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["basetype",{"_index":123,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["baseurl",{"_index":2445,"title":{},"body":{"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{}}}],["baseurl}/tokens/${params[0",{"_index":2937,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["baseurl}/wallets/${params[0",{"_index":2934,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["baseuserop",{"_index":1000,"title":{"interfaces/BaseUserOp.html":{}},"body":{"interfaces/BaseUserOp.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{}}}],["baseuserop.paymaster",{"_index":1800,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["baseuserop.paymasteranddata",{"_index":1796,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["baseuserop.sponsorid",{"_index":1802,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["basictokenabi",{"_index":4409,"title":{},"body":{"injectables/TokenService.html":{}}}],["bcrypt",{"_index":500,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["bcrypt.compare(secretkey",{"_index":2847,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["bcrypt.gensalt",{"_index":529,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["bcrypt.hash(secretkey",{"_index":530,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["bcryptjs",{"_index":501,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"dependencies.html":{}}}],["bearer",{"_index":2530,"title":{},"body":{"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["before",{"_index":1028,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{},"index.html":{}}}],["better",{"_index":1163,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["bigint",{"_index":2655,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["bignumber",{"_index":23,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["bignumber.from(0",{"_index":2483,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["bignumber.from(`0x${projectid}`).tostring",{"_index":3375,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["bignumber.from(blocktrace.action.value).gt(0",{"_index":4470,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["bignumber.from(parsedlog.args[2]).tostring",{"_index":2033,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["bignumber.from(result.callgaslimit).mul(115).div(100).tohexstring",{"_index":3286,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["bignumber.from(trace.action.value).tostring",{"_index":4476,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["bignumber.from(values[index",{"_index":4595,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["bignumber.from(variables.default_gas_limit",{"_index":2486,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["block",{"_index":2501,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["blockclient",{"_index":2703,"title":{},"body":{"injectables/GraphService.html":{},"injectables/VoltBarService.html":{}}}],["blockhash",{"_index":2026,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent.html":{}}}],["blockhex",{"_index":2505,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["blockhex.substring(2",{"_index":2511,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["blocknumber",{"_index":787,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EventData.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/WebhookEvent.html":{}}}],["blockrewardabi",{"_index":2611,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blockrewardaddress",{"_index":2575,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blockrewardcontract",{"_index":2651,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blockrewardcontract.getblockrewardamount",{"_index":2658,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blockrewardcontract.getblocksperyear",{"_index":2660,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blocks",{"_index":3721,"title":{},"body":{"classes/ScannerService.html":{}}}],["blocksperyear",{"_index":2659,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["blocktrace.action.calltype",{"_index":4469,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["body",{"_index":629,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"injectables/BundlerApiInterceptor.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"controllers/EthereumPaymentsController.html":{},"classes/FuseLegacySDK.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"controllers/StakingApiController.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}}}],["body.communityaddress",{"_index":2928,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["body.userophash",{"_index":1820,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["body?.projectid",{"_index":2808,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["body?.userop?.apikey",{"_index":1887,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["body?.walletaction.sent[0].symbol",{"_index":1886,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["body?.webhookid",{"_index":2810,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/ActivatedApp.html":{},"injectables/ApiKeysService.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"classes/CreateOperatorWalletDto.html":{},"interfaces/CreateSecretDto.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/IValidator.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymentsService.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhooksService.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["bounds",{"_index":81,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["break",{"_index":4024,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["bridgetype",{"_index":4298,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["broadcastermodule",{"_index":1052,"title":{"modules/BroadcasterModule.html":{}},"body":{"modules/BroadcasterModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"modules.html":{},"overview.html":{}}}],["broadcasterservice",{"_index":1058,"title":{"injectables/BroadcasterService.html":{}},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"overview.html":{}}}],["browse",{"_index":5132,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":5129,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1019,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["build",{"_index":2929,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["builddocs",{"_index":4853,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["builddocs(createwebhookaddressesdto",{"_index":4863,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["buildpaymasteranddata",{"_index":3182,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["buildpaymasteranddata(paymasteraddress",{"_index":3194,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["built",{"_index":5069,"title":{},"body":{"index.html":{}}}],["bundler",{"_index":1265,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["bundlerapicontroller",{"_index":1169,"title":{"controllers/BundlerApiController.html":{}},"body":{"controllers/BundlerApiController.html":{},"modules/BundlerApiModule.html":{}}}],["bundlerapiinterceptor",{"_index":1176,"title":{"injectables/BundlerApiInterceptor.html":{}},"body":{"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{}}}],["bundlerapimodule",{"_index":1266,"title":{"modules/BundlerApiModule.html":{}},"body":{"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["bytes",{"_index":1020,"title":{},"body":{"interfaces/BaseUserOp.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["bytes4cache",{"_index":2308,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"miscellaneous/typealiases.html":{}}}],["bytes4cache[hexsigtype][hexsig",{"_index":2338,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["bytes_signature",{"_index":2290,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["cache",{"_index":1954,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["cache.ts",{"_index":4371,"title":{},"body":{"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{}}}],["cache.ts:7",{"_index":4374,"title":{},"body":{"interfaces/TokenInfoCache.html":{}}}],["cache_manager",{"_index":1997,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["cached",{"_index":2337,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["cacheinterceptor",{"_index":1528,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["cachemanager",{"_index":1953,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["cachemodule",{"_index":1541,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EventsScannerModule.html":{}}}],["cachemodule.register",{"_index":1542,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EventsScannerModule.html":{}}}],["call",{"_index":4332,"title":{},"body":{"classes/SwapTokens.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["call.data",{"_index":4598,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["call.targetaddress",{"_index":4599,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["call.value.tostring",{"_index":4600,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["calldata",{"_index":808,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"classes/ERC20Transfer.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["calldata.slice(0",{"_index":2326,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["callgaslimit",{"_index":1003,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["callhandler",{"_index":1196,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["callmsfunction",{"_index":724,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/NotificationsService.html":{},"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/StakingAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["callmsfunction(this.accountclient",{"_index":3229,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["callmsfunction(this.accountsclient",{"_index":1899,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["callmsfunction(this.apiclient",{"_index":1897,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ProjectsService.html":{}}}],["callmsfunction(this.appstoreclient",{"_index":736,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["callmsfunction(this.datalayerclient",{"_index":1240,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["callmsfunction(this.networkclient",{"_index":1560,"title":{},"body":{"injectables/ConsensusApiService.html":{},"injectables/GraphqlAPIService.html":{}}}],["callmsfunction(this.notificationsclient",{"_index":3053,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["callmsfunction(this.relayclient",{"_index":3615,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["callmsfunction(this.smartwalletsclient",{"_index":3906,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["callmsfunction(this.stakingclient",{"_index":4192,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["calls",{"_index":4586,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["calls.push(...items",{"_index":4612,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["canactivate",{"_index":2791,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["canactivate(context",{"_index":2794,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["capitalize",{"_index":1209,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["case",{"_index":76,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/PaymasterApiController.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["catch",{"_index":72,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"injectables/AppStoreService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["catch(err",{"_index":3485,"title":{},"body":{"injectables/PaymentsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["catch(exception",{"_index":240,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catcherror",{"_index":955,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["catcherror((e",{"_index":1225,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["catcherror(e",{"_index":994,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["cater",{"_index":5063,"title":{},"body":{"index.html":{}}}],["cent.js",{"_index":3778,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"dependencies.html":{}}}],["centclient",{"_index":3764,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["centrifuge",{"_index":2403,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsEventsService.html":{},"dependencies.html":{}}}],["centrifuge(variables.socket_server_url",{"_index":2389,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["centrifugeclientprovider",{"_index":1723,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/SmartWalletsModule.html":{}}}],["centrifugeprovider",{"_index":4108,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["certain",{"_index":257,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["chain",{"_index":5073,"title":{},"body":{"index.html":{}}}],["chainid",{"_index":1595,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["change",{"_index":156,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["change(input",{"_index":163,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["changedparamtype",{"_index":90,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"miscellaneous/typealiases.html":{}}}],["channel",{"_index":3781,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["channels",{"_index":3841,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["characters",{"_index":1014,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["charge",{"_index":5121,"title":{},"body":{"index.html":{}}}],["chargeapimodule",{"_index":1275,"title":{"modules/ChargeApiModule.html":{}},"body":{"modules/ChargeApiModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsModule.html":{},"modules.html":{},"overview.html":{}}}],["chargeapiservice",{"_index":1280,"title":{"injectables/ChargeApiService.html":{}},"body":{"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"overview.html":{}}}],["chargeapiservicecontroller",{"_index":1412,"title":{"controllers/ChargeApiServiceController.html":{}},"body":{"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{}}}],["chargeapiservicemodule",{"_index":1415,"title":{"modules/ChargeApiServiceModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargeapiserviceservice",{"_index":1427,"title":{"injectables/ChargeApiServiceService.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"overview.html":{}}}],["chargeapp",{"_index":4290,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["chargeappsservicecontroller",{"_index":1452,"title":{"controllers/ChargeAppsServiceController.html":{}},"body":{"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{}}}],["chargeappsservicemodule",{"_index":1453,"title":{"modules/ChargeAppsServiceModule.html":{}},"body":{"modules/ChargeAppsServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargeappsserviceservice",{"_index":1459,"title":{"injectables/ChargeAppsServiceService.html":{}},"body":{"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"overview.html":{}}}],["chargebaseurl",{"_index":1296,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["chargenetworkservicecontroller",{"_index":1462,"title":{"controllers/ChargeNetworkServiceController.html":{}},"body":{"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{}}}],["chargenetworkservicemodule",{"_index":1464,"title":{"modules/ChargeNetworkServiceModule.html":{}},"body":{"modules/ChargeNetworkServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargenotificationsservicecontroller",{"_index":1474,"title":{"controllers/ChargeNotificationsServiceController.html":{}},"body":{"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{}}}],["chargenotificationsservicemodule",{"_index":1475,"title":{"modules/ChargeNotificationsServiceModule.html":{}},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargepaymentlinkswebhookid",{"_index":3420,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["chargepublickey",{"_index":1297,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["chargerelayservicecontroller",{"_index":1486,"title":{"controllers/ChargeRelayServiceController.html":{}},"body":{"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{}}}],["chargerelayservicemodule",{"_index":1488,"title":{"modules/ChargeRelayServiceModule.html":{}},"body":{"modules/ChargeRelayServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargerelayserviceservice",{"_index":1496,"title":{"injectables/ChargeRelayServiceService.html":{}},"body":{"injectables/ChargeRelayServiceService.html":{}}}],["chargesmartwalletsservicecontroller",{"_index":1497,"title":{"controllers/ChargeSmartWalletsServiceController.html":{}},"body":{"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{}}}],["chargesmartwalletsservicemodule",{"_index":1498,"title":{"modules/ChargeSmartWalletsServiceModule.html":{}},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["chargewebhookid",{"_index":1298,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["check",{"_index":1927,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"controllers/OperatorsController.html":{}}}],["checkifsecretexists",{"_index":361,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["checkifsecretexists(apikeysdto",{"_index":430,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["checkifsecretexists(projectid",{"_index":369,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["checkoperatorexistence",{"_index":3071,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["checkoperatorexistence(address",{"_index":3079,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["checks",{"_index":3503,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["checkwalletactivationstatus",{"_index":3072,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["checkwalletactivationstatus(auth0id",{"_index":3082,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["childindex",{"_index":973,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"interfaces/EthereumBackendWallet.html":{}}}],["childnode",{"_index":976,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["childnode.address.tostring",{"_index":979,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["childwalletaddress",{"_index":978,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["choose",{"_index":1162,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["chunk",{"_index":2325,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["class",{"_index":179,"title":{"classes/AllExceptionsFilter.html":{},"classes/ApiKeysDto.html":{},"classes/ApproveToken.html":{},"classes/AuthOperatorDto.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"classes/DelegatedAmountsDto.html":{},"classes/ERC20Transfer.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"classes/WalletAction.html":{}},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{}}}],["classes",{"_index":229,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApiKeysDto.html":{},"classes/ApproveToken.html":{},"classes/AuthOperatorDto.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"classes/DelegatedAmountsDto.html":{},"classes/ERC20Transfer.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"classes/WalletAction.html":{},"overview.html":{}}}],["clearer",{"_index":1166,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["clientproxy",{"_index":693,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/NotificationsService.html":{},"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/StakingAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["clientsmodule",{"_index":677,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["clientsmodule.register",{"_index":681,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["cluster_accountsmodule",{"_index":190,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_accountsmodule_imports",{"_index":191,"title":{},"body":{"modules/AccountsModule.html":{},"overview.html":{}}}],["cluster_apikeymodule",{"_index":337,"title":{},"body":{"modules/ApiKeyModule.html":{},"overview.html":{}}}],["cluster_apikeymodule_exports",{"_index":339,"title":{},"body":{"modules/ApiKeyModule.html":{},"overview.html":{}}}],["cluster_apikeymodule_imports",{"_index":338,"title":{},"body":{"modules/ApiKeyModule.html":{},"overview.html":{}}}],["cluster_apikeymodule_providers",{"_index":340,"title":{},"body":{"modules/ApiKeyModule.html":{},"overview.html":{}}}],["cluster_apikeysmodule",{"_index":451,"title":{},"body":{"modules/ApiKeysModule.html":{},"overview.html":{}}}],["cluster_apikeysmodule_exports",{"_index":453,"title":{},"body":{"modules/ApiKeysModule.html":{}}}],["cluster_apikeysmodule_imports",{"_index":452,"title":{},"body":{"modules/ApiKeysModule.html":{}}}],["cluster_apikeysmodule_providers",{"_index":454,"title":{},"body":{"modules/ApiKeysModule.html":{}}}],["cluster_appstoremodule",{"_index":667,"title":{},"body":{"modules/AppStoreModule.html":{},"overview.html":{}}}],["cluster_appstoremodule_imports",{"_index":669,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["cluster_appstoremodule_providers",{"_index":668,"title":{},"body":{"modules/AppStoreModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":848,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":849,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":850,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_broadcastermodule",{"_index":1053,"title":{},"body":{"modules/BroadcasterModule.html":{},"overview.html":{}}}],["cluster_broadcastermodule_exports",{"_index":1056,"title":{},"body":{"modules/BroadcasterModule.html":{},"overview.html":{}}}],["cluster_broadcastermodule_imports",{"_index":1055,"title":{},"body":{"modules/BroadcasterModule.html":{},"overview.html":{}}}],["cluster_broadcastermodule_providers",{"_index":1054,"title":{},"body":{"modules/BroadcasterModule.html":{},"overview.html":{}}}],["cluster_bundlerapimodule",{"_index":1267,"title":{},"body":{"modules/BundlerApiModule.html":{},"overview.html":{}}}],["cluster_bundlerapimodule_imports",{"_index":1268,"title":{},"body":{"modules/BundlerApiModule.html":{}}}],["cluster_chargeapimodule",{"_index":1276,"title":{},"body":{"modules/ChargeApiModule.html":{},"overview.html":{}}}],["cluster_chargeapimodule_exports",{"_index":1279,"title":{},"body":{"modules/ChargeApiModule.html":{},"overview.html":{}}}],["cluster_chargeapimodule_imports",{"_index":1277,"title":{},"body":{"modules/ChargeApiModule.html":{}}}],["cluster_chargeapimodule_providers",{"_index":1278,"title":{},"body":{"modules/ChargeApiModule.html":{},"overview.html":{}}}],["cluster_chargeapiservicemodule",{"_index":1416,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"overview.html":{}}}],["cluster_chargeapiservicemodule_imports",{"_index":1418,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"overview.html":{}}}],["cluster_chargeapiservicemodule_providers",{"_index":1417,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"overview.html":{}}}],["cluster_chargeappsservicemodule",{"_index":1454,"title":{},"body":{"modules/ChargeAppsServiceModule.html":{},"overview.html":{}}}],["cluster_chargeappsservicemodule_imports",{"_index":1455,"title":{},"body":{"modules/ChargeAppsServiceModule.html":{},"overview.html":{}}}],["cluster_chargeappsservicemodule_providers",{"_index":1456,"title":{},"body":{"modules/ChargeAppsServiceModule.html":{},"overview.html":{}}}],["cluster_chargenetworkservicemodule",{"_index":1465,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{},"overview.html":{}}}],["cluster_chargenetworkservicemodule_imports",{"_index":1466,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{},"overview.html":{}}}],["cluster_chargenotificationsservicemodule",{"_index":1476,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"overview.html":{}}}],["cluster_chargenotificationsservicemodule_imports",{"_index":1477,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"overview.html":{}}}],["cluster_chargerelayservicemodule",{"_index":1489,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{},"overview.html":{}}}],["cluster_chargerelayservicemodule_imports",{"_index":1490,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{},"overview.html":{}}}],["cluster_chargesmartwalletsservicemodule",{"_index":1499,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"overview.html":{}}}],["cluster_chargesmartwalletsservicemodule_imports",{"_index":1500,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"overview.html":{}}}],["cluster_consensusapimodule",{"_index":1538,"title":{},"body":{"modules/ConsensusApiModule.html":{},"overview.html":{}}}],["cluster_consensusapimodule_providers",{"_index":1539,"title":{},"body":{"modules/ConsensusApiModule.html":{},"overview.html":{}}}],["cluster_consensusmodule",{"_index":1581,"title":{},"body":{"modules/ConsensusModule.html":{},"overview.html":{}}}],["cluster_consensusmodule_exports",{"_index":1582,"title":{},"body":{"modules/ConsensusModule.html":{},"overview.html":{}}}],["cluster_consensusmodule_providers",{"_index":1583,"title":{},"body":{"modules/ConsensusModule.html":{},"overview.html":{}}}],["cluster_datalayermodule",{"_index":1707,"title":{},"body":{"modules/DataLayerModule.html":{},"overview.html":{}}}],["cluster_datalayermodule_imports",{"_index":1708,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["cluster_datalayermodule_providers",{"_index":1709,"title":{},"body":{"modules/DataLayerModule.html":{},"overview.html":{}}}],["cluster_ethereumpaymentsmodule",{"_index":2108,"title":{},"body":{"modules/EthereumPaymentsModule.html":{},"overview.html":{}}}],["cluster_ethereumpaymentsmodule_imports",{"_index":2109,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["cluster_ethereumpaymentsmodule_providers",{"_index":2110,"title":{},"body":{"modules/EthereumPaymentsModule.html":{},"overview.html":{}}}],["cluster_eventsscannermodule",{"_index":2241,"title":{},"body":{"modules/EventsScannerModule.html":{},"overview.html":{}}}],["cluster_eventsscannermodule_imports",{"_index":2243,"title":{},"body":{"modules/EventsScannerModule.html":{}}}],["cluster_eventsscannermodule_providers",{"_index":2242,"title":{},"body":{"modules/EventsScannerModule.html":{},"overview.html":{}}}],["cluster_explorerapimodule",{"_index":2286,"title":{},"body":{"modules/ExplorerApiModule.html":{}}}],["cluster_explorerapimodule_imports",{"_index":2287,"title":{},"body":{"modules/ExplorerApiModule.html":{}}}],["cluster_graphqlapimodule",{"_index":2739,"title":{},"body":{"modules/GraphqlAPIModule.html":{},"overview.html":{}}}],["cluster_graphqlapimodule_imports",{"_index":2741,"title":{},"body":{"modules/GraphqlAPIModule.html":{}}}],["cluster_graphqlapimodule_providers",{"_index":2740,"title":{},"body":{"modules/GraphqlAPIModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule",{"_index":2766,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_graphqlmodule_providers",{"_index":2767,"title":{},"body":{"modules/GraphqlModule.html":{},"overview.html":{}}}],["cluster_legacyapimodule",{"_index":2939,"title":{},"body":{"modules/LegacyApiModule.html":{}}}],["cluster_legacyapimodule_imports",{"_index":2940,"title":{},"body":{"modules/LegacyApiModule.html":{}}}],["cluster_notificationsmodule",{"_index":3021,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3023,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3022,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3024,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_operatorsmodule",{"_index":3136,"title":{},"body":{"modules/OperatorsModule.html":{},"overview.html":{}}}],["cluster_operatorsmodule_exports",{"_index":3138,"title":{},"body":{"modules/OperatorsModule.html":{},"overview.html":{}}}],["cluster_operatorsmodule_imports",{"_index":3137,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["cluster_operatorsmodule_providers",{"_index":3139,"title":{},"body":{"modules/OperatorsModule.html":{},"overview.html":{}}}],["cluster_paymasterapimodule",{"_index":3176,"title":{},"body":{"modules/PaymasterApiModule.html":{},"overview.html":{}}}],["cluster_paymasterapimodule_imports",{"_index":3178,"title":{},"body":{"modules/PaymasterApiModule.html":{}}}],["cluster_paymasterapimodule_providers",{"_index":3177,"title":{},"body":{"modules/PaymasterApiModule.html":{},"overview.html":{}}}],["cluster_paymastermodule",{"_index":3321,"title":{},"body":{"modules/PaymasterModule.html":{},"overview.html":{}}}],["cluster_paymastermodule_exports",{"_index":3322,"title":{},"body":{"modules/PaymasterModule.html":{},"overview.html":{}}}],["cluster_paymastermodule_imports",{"_index":3324,"title":{},"body":{"modules/PaymasterModule.html":{}}}],["cluster_paymastermodule_providers",{"_index":3323,"title":{},"body":{"modules/PaymasterModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule",{"_index":3412,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_paymentsmodule_imports",{"_index":3413,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["cluster_paymentsmodule_providers",{"_index":3414,"title":{},"body":{"modules/PaymentsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":3570,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_exports",{"_index":3573,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_imports",{"_index":3571,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["cluster_projectsmodule_providers",{"_index":3572,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_relayaccountsmodule",{"_index":3655,"title":{},"body":{"modules/RelayAccountsModule.html":{},"overview.html":{}}}],["cluster_relayaccountsmodule_exports",{"_index":3658,"title":{},"body":{"modules/RelayAccountsModule.html":{},"overview.html":{}}}],["cluster_relayaccountsmodule_imports",{"_index":3657,"title":{},"body":{"modules/RelayAccountsModule.html":{}}}],["cluster_relayaccountsmodule_providers",{"_index":3656,"title":{},"body":{"modules/RelayAccountsModule.html":{},"overview.html":{}}}],["cluster_smartwalletsapimodule",{"_index":3887,"title":{},"body":{"modules/SmartWalletsAPIModule.html":{},"overview.html":{}}}],["cluster_smartwalletsapimodule_imports",{"_index":3888,"title":{},"body":{"modules/SmartWalletsAPIModule.html":{}}}],["cluster_smartwalletsapimodule_providers",{"_index":3889,"title":{},"body":{"modules/SmartWalletsAPIModule.html":{},"overview.html":{}}}],["cluster_smartwalletsmodule",{"_index":4101,"title":{},"body":{"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["cluster_smartwalletsmodule_imports",{"_index":4103,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["cluster_smartwalletsmodule_providers",{"_index":4102,"title":{},"body":{"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["cluster_stakingapimodule",{"_index":4176,"title":{},"body":{"modules/StakingAPIModule.html":{},"overview.html":{}}}],["cluster_stakingapimodule_imports",{"_index":4177,"title":{},"body":{"modules/StakingAPIModule.html":{}}}],["cluster_stakingapimodule_providers",{"_index":4178,"title":{},"body":{"modules/StakingAPIModule.html":{},"overview.html":{}}}],["cluster_stakingmodule",{"_index":4223,"title":{},"body":{"modules/StakingModule.html":{},"overview.html":{}}}],["cluster_stakingmodule_exports",{"_index":4224,"title":{},"body":{"modules/StakingModule.html":{},"overview.html":{}}}],["cluster_stakingmodule_providers",{"_index":4225,"title":{},"body":{"modules/StakingModule.html":{},"overview.html":{}}}],["cluster_studiolegacyjwtmodule",{"_index":4278,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{},"overview.html":{}}}],["cluster_studiolegacyjwtmodule_exports",{"_index":4280,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{},"overview.html":{}}}],["cluster_studiolegacyjwtmodule_providers",{"_index":4279,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{},"overview.html":{}}}],["cluster_transactionsscannermodule",{"_index":4442,"title":{},"body":{"modules/TransactionsScannerModule.html":{},"overview.html":{}}}],["cluster_transactionsscannermodule_imports",{"_index":4443,"title":{},"body":{"modules/TransactionsScannerModule.html":{}}}],["cluster_transactionsscannermodule_providers",{"_index":4444,"title":{},"body":{"modules/TransactionsScannerModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4633,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4636,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4635,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4634,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_webhooksmodule",{"_index":4843,"title":{},"body":{"modules/WebhooksModule.html":{},"overview.html":{}}}],["cluster_webhooksmodule_exports",{"_index":4844,"title":{},"body":{"modules/WebhooksModule.html":{},"overview.html":{}}}],["cluster_webhooksmodule_imports",{"_index":4846,"title":{},"body":{"modules/WebhooksModule.html":{}}}],["cluster_webhooksmodule_providers",{"_index":4845,"title":{},"body":{"modules/WebhooksModule.html":{},"overview.html":{}}}],["code",{"_index":1022,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{},"injectables/WebhooksService.html":{},"index.html":{}}}],["combination.includes(idx",{"_index":162,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["combinations",{"_index":27,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["combinations.map((combination",{"_index":159,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["combinationsmap",{"_index":112,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["combinedhex",{"_index":2510,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["common/config",{"_index":4114,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["communityadmin",{"_index":4297,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["communitymanager",{"_index":2417,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["compodoc/compodoc",{"_index":4956,"title":{},"body":{"dependencies.html":{}}}],["components",{"_index":117,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["comprehensive",{"_index":5054,"title":{},"body":{"index.html":{}}}],["computeaddress",{"_index":3826,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["computeaddress(publickey",{"_index":3835,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["config",{"_index":1261,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["config.addcommunityaddressforpostrequests",{"_index":2925,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["config.fullarchiverpc.url",{"_index":4450,"title":{},"body":{"modules/TransactionsScannerModule.html":{}}}],["config.replaceheaders",{"_index":2921,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["config.rpc.chainid",{"_index":2253,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["config.rpc.networkname",{"_index":2252,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["config.rpc.url",{"_index":2254,"title":{},"body":{"modules/EventsScannerModule.html":{}}}],["config.url",{"_index":1263,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["config?.apikey",{"_index":2285,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{}}}],["config?.baseurl",{"_index":2282,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{}}}],["config?.baseurl}/${params[0",{"_index":2938,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["configmodule",{"_index":208,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["configmodule.forfeature(config",{"_index":1731,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["configmodule.forfeature(configuration",{"_index":680,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/StakingModule.html":{}}}],["configmodule.forfeature(rpcconfig",{"_index":2251,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["configmodule.forroot",{"_index":214,"title":{},"body":{"modules/AccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["configservice",{"_index":301,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/AppStoreService.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlController.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/OperatorJwtStrategy.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["configservice.get('alchemy_auth_key",{"_index":2118,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["configservice.get('charge_secret_key",{"_index":1291,"title":{},"body":{"modules/ChargeApiModule.html":{}}}],["configservice.get('fuse_studio_admin_jwt",{"_index":4283,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{}}}],["configservice.get('fusewalletbackendjwt",{"_index":4116,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["configservice.get('paymasterapi",{"_index":3180,"title":{},"body":{"modules/PaymasterApiModule.html":{}}}],["configservice.get('rpcconfig",{"_index":1594,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["configservice.get('smart_wallets_jwt_secret",{"_index":865,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["configuration",{"_index":672,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlModule.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"index.html":{}}}],["confirmeduseroptowalletaction",{"_index":1778,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["confirmeduseroptowalletaction(userop",{"_index":1839,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["connection",{"_index":2476,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["connectionurl",{"_index":4092,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["consensus",{"_index":1565,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["consensusabi",{"_index":2609,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["consensusaddress",{"_index":2574,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["consensusapicontroller",{"_index":1507,"title":{"controllers/ConsensusApiController.html":{}},"body":{"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{}}}],["consensusapimodule",{"_index":1419,"title":{"modules/ConsensusApiModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules.html":{},"overview.html":{}}}],["consensusapiservice",{"_index":1526,"title":{"injectables/ConsensusApiService.html":{}},"body":{"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"overview.html":{}}}],["consensuscontract",{"_index":2649,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["consensuscontract.totalstakeamount",{"_index":2656,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["consensuscontroller",{"_index":1563,"title":{"controllers/ConsensusController.html":{}},"body":{"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{}}}],["consensusmodule",{"_index":1467,"title":{"modules/ConsensusModule.html":{}},"body":{"modules/ChargeNetworkServiceModule.html":{},"modules/ConsensusModule.html":{},"modules.html":{},"overview.html":{}}}],["consensusservice",{"_index":1574,"title":{},"body":{"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"overview.html":{}}}],["consisting",{"_index":375,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["console.log",{"_index":2526,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["const",{"_index":29,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["constant",{"_index":2432,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["constructing",{"_index":5058,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["constructor(accountclient",{"_index":3189,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["constructor(apiclient",{"_index":3582,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(apikeymodel",{"_index":467,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["constructor(apikeysservice",{"_index":2801,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["constructor(appstoreclient",{"_index":692,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["constructor(backendwalletethereumservice",{"_index":2126,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["constructor(centclient",{"_index":3763,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["constructor(chargeapiservice",{"_index":3421,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["constructor(configservice",{"_index":300,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/GraphService.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["constructor(datalayerclient",{"_index":1190,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["constructor(httpadapterhost",{"_index":235,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(httpservice",{"_index":901,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{}}}],["constructor(jwtservice",{"_index":3815,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["constructor(networkclient",{"_index":1550,"title":{},"body":{"injectables/ConsensusApiService.html":{},"injectables/GraphqlAPIService.html":{}}}],["constructor(notificationsclient",{"_index":3035,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(paymastermodel",{"_index":3333,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["constructor(privatekey",{"_index":4488,"title":{},"body":{"classes/TransferToken.html":{}}}],["constructor(provider",{"_index":2579,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/TokenService.html":{},"injectables/VoltBarService.html":{}}}],["constructor(publicapikey",{"_index":2377,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["constructor(relayaccountmodel",{"_index":3664,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["constructor(smartwalletsclient",{"_index":3895,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["constructor(stakingclient",{"_index":4183,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["constructor(statusmodel",{"_index":3728,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["constructor(usermodel",{"_index":4643,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(useropmodel",{"_index":1745,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["constructor(useropparser",{"_index":4572,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["constructor(usersservice",{"_index":2792,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["constructor(voltbarservice",{"_index":4238,"title":{},"body":{"injectables/StakingService.html":{}}}],["constructor(webhookeventmodel",{"_index":1081,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["constructor(webhookmodel",{"_index":4856,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["constructresponse",{"_index":771,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/TokenReceive.html":{}}}],["constructresponse(fromwalletaddress",{"_index":4380,"title":{},"body":{"classes/TokenReceive.html":{}}}],["constructresponse(parseduserop",{"_index":779,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{}}}],["constructtokentransferdata",{"_index":772,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/TokenReceive.html":{}}}],["constructtokentransferdata(targetaddress",{"_index":2957,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/TokenReceive.html":{}}}],["constructtokentransferdata(undefined",{"_index":789,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{}}}],["contain",{"_index":1239,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["containing",{"_index":3526,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["contains",{"_index":1021,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["content",{"_index":1289,"title":{},"body":{"modules/ChargeApiModule.html":{},"modules/EthereumPaymentsModule.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/WebhookSendService.html":{}}}],["context",{"_index":1198,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["context.getclass().name",{"_index":2279,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["context.gethandler().name",{"_index":1253,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["context.gettype",{"_index":2851,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["context.switchtohttp().getrequest",{"_index":1249,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["context.switchtohttp().getrequest().query.apikey",{"_index":1233,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["contexttype",{"_index":2850,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["contract",{"_index":1035,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/PaymasterApiService.html":{},"interfaces/SmartContractWallet.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/TokenService.html":{},"interfaces/UserOp.html":{},"injectables/VoltBarService.html":{}}}],["contract(address",{"_index":4415,"title":{},"body":{"injectables/TokenService.html":{}}}],["contract(this.address",{"_index":2633,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["contract(this.blockrewardaddress",{"_index":2652,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["contract(this.consensusaddress",{"_index":2650,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["contract(this.sftokenaddress",{"_index":2636,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["contract(tokenaddress",{"_index":4746,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["contract.decimals",{"_index":2045,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["contract.name",{"_index":2046,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["contract.symbol",{"_index":2047,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["contract_address",{"_index":1382,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["contractaddress",{"_index":4263,"title":{},"body":{"injectables/StakingService.html":{}}}],["controller",{"_index":165,"title":{"controllers/AccountsController.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/BundlerApiController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/GraphqlController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}},"body":{"controllers/AccountsController.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/BundlerApiController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/GraphqlController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}}}],["controller('api",{"_index":439,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["controller('app",{"_index":644,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["controller('consensus",{"_index":1576,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["controller('graphql",{"_index":2758,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["controller('payments",{"_index":3398,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["controller('payments_ethereum",{"_index":2096,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["controller('stake",{"_index":4218,"title":{},"body":{"controllers/StakingController.html":{}}}],["controller('v0/consensus",{"_index":1531,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["controller('v0/graphql",{"_index":2735,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["controller('v0/notifications",{"_index":3010,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["controller('v0/staking",{"_index":4200,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["controller('webhooks",{"_index":4831,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["controllers",{"_index":167,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BundlerApiController.html":{},"modules/BundlerApiModule.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"controllers/ExplorerApiController.html":{},"modules/ExplorerApiModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"controllers/LegacyAdminApiController.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["converts",{"_index":54,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["couldn't",{"_index":2540,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/WebhooksService.html":{}}}],["count",{"_index":1689,"title":{},"body":{"controllers/DataLayerController.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"controllers/OperatorsController.html":{}}}],["cp",{"_index":5106,"title":{},"body":{"index.html":{}}}],["create",{"_index":829,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BaseUserOp.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsEventsService.html":{},"interfaces/UserOp.html":{},"injectables/UsersService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["create(createprojectdto",{"_index":3504,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["create(createuserdto",{"_index":830,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["create(createwebhookdto",{"_index":2981,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["create(id",{"_index":3295,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["create(projectid",{"_index":3336,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["create(userop",{"_index":1673,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["create_account",{"_index":3616,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["create_addresses",{"_index":3059,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["create_payment_account",{"_index":738,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["create_payment_link",{"_index":755,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["create_public",{"_index":737,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ProjectsService.html":{}}}],["create_sandbox_key",{"_index":3608,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["create_secret",{"_index":752,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ProjectsService.html":{}}}],["create_wallet",{"_index":3908,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["create_webhook",{"_index":3054,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["createaccount",{"_index":3648,"title":{},"body":{"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{}}}],["createaccount(projectid",{"_index":3649,"title":{},"body":{"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{}}}],["createaddresses",{"_index":2977,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["createaddresses(createwebhookaddressesdto",{"_index":2983,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["createbackendwallet",{"_index":888,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["createbackendwallet(wallettype",{"_index":908,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["created",{"_index":4950,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["created_at",{"_index":2291,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["createdproject",{"_index":3605,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createdproject._id",{"_index":3607,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createdproject.save",{"_index":3609,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["createduser",{"_index":4657,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save",{"_index":4659,"title":{},"body":{"injectables/UsersService.html":{}}}],["createethereumpaymentlinkdto",{"_index":1598,"title":{"classes/CreateEthereumPaymentLinkDto.html":{}},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"injectables/EthereumPaymentsService.html":{}}}],["createlegacyaccount",{"_index":477,"title":{},"body":{"injectables/ApiKeysService.html":{},"interfaces/CreateSecretDto.html":{},"controllers/ProjectsController.html":{}}}],["createlegacyjwt",{"_index":4285,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["createlegacyjwt(appname",{"_index":4288,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["createoperatoruserandprojectandwallet",{"_index":3073,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["createoperatoruserandprojectandwallet(createoperatoruserdto",{"_index":3085,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["createoperatoruserdto",{"_index":1619,"title":{"classes/CreateOperatorUserDto.html":{}},"body":{"classes/CreateOperatorUserDto.html":{},"controllers/OperatorsController.html":{}}}],["createoperatorwalletdto",{"_index":1633,"title":{"classes/CreateOperatorWalletDto.html":{}},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["createpaymentaccount",{"_index":2067,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentaccount(ownerid",{"_index":2070,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentlink",{"_index":578,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentlink(auth0id",{"_index":699,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["createpaymentlink(createpaymentlinkdto",{"_index":591,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["createpaymentlink(userid",{"_index":2073,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto",{"_index":592,"title":{"classes/CreatePaymentLinkDto.html":{}},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/CreatePaymentLinkDto.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.backendwalletid",{"_index":3456,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.ownerid",{"_index":754,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.tokenaddress",{"_index":3454,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.tokenaddress.tolowercase",{"_index":3448,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.tokensymbol",{"_index":3453,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpaymentlinkdto.tokensymbol.tolowercase",{"_index":3449,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["createpaymentlinkethereumdto",{"_index":2132,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.backendwalletid",{"_index":2190,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.ownerid",{"_index":2184,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.tokenaddress",{"_index":2187,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.tokenaddress.tolowercase",{"_index":2174,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.tokensymbol",{"_index":2186,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createpaymentlinkethereumdto.tokensymbol.tolowercase",{"_index":2178,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["createprojectdto",{"_index":1644,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["createpublic",{"_index":362,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["createpublic(apikeysdto",{"_index":432,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["createpublic(projectid",{"_index":380,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["createpublickey",{"_index":456,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["createpublickey(apikeysdto",{"_index":554,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["createpublickey(projectid",{"_index":472,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["creates",{"_index":383,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{}}}],["createsandbox",{"_index":363,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["createsandbox(projectid",{"_index":386,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["createsandboxkey",{"_index":457,"title":{},"body":{"injectables/ApiKeysService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["createsandboxkey(projectid",{"_index":474,"title":{},"body":{"injectables/ApiKeysService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["createsecret",{"_index":364,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["createsecret(apikeysdto",{"_index":433,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["createsecret(appname",{"_index":598,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["createsecret(createsecretdto",{"_index":390,"title":{},"body":{"controllers/ApiKeysController.html":{},"injectables/ProjectsService.html":{}}}],["createsecret(projectid",{"_index":3509,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["createsecretdto",{"_index":391,"title":{"interfaces/CreateSecretDto.html":{}},"body":{"controllers/ApiKeysController.html":{},"interfaces/CreateSecretDto.html":{},"injectables/ProjectsService.html":{}}}],["createsecretdto.createlegacyaccount",{"_index":419,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["createsecretkey",{"_index":458,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["createsecretkey(apikeysdto",{"_index":556,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["createsecretkey(projectid",{"_index":476,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["createuserdto",{"_index":831,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["createuserop",{"_index":4571,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["createuserop(baseuserop",{"_index":4574,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["createwallet",{"_index":2375,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/RelayAPIService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["createwallet(params",{"_index":3626,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["createwallet(smartwalletuser",{"_index":3946,"title":{},"body":{"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["createwallet(user",{"_index":3858,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["createwallet.wait",{"_index":2459,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["createwalletactionfromuserop",{"_index":1737,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["createwalletactionfromuserop(parseduserop",{"_index":1752,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["createwalletfailed",{"_index":4027,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["createwalletstarted",{"_index":4022,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["createwalletsuccess",{"_index":4025,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["createwebhook",{"_index":3030,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["createwebhook(createwebhookdto",{"_index":3039,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["createwebhookaddressesdto",{"_index":1652,"title":{"classes/CreateWebhookAddressesDto.html":{}},"body":{"classes/CreateWebhookAddressesDto.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["createwebhookaddressesdto.addresses.map",{"_index":4953,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["createwebhookaddressesdto.addresses.map(address",{"_index":4919,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["createwebhookaddressesdto.webhookid",{"_index":4913,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["createwebhookdto",{"_index":1658,"title":{"classes/CreateWebhookDto.html":{}},"body":{"classes/CreateWebhookDto.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/UpdateWebhookDto.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["creating",{"_index":1858,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/WebhooksService.html":{}}}],["creation",{"_index":3359,"title":{},"body":{"injectables/PaymasterService.html":{},"injectables/SmartWalletsLegacyService.html":{},"index.html":{}}}],["creator",{"_index":2820,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{}}}],["credentials",{"_index":2447,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/TransferToken.html":{}}}],["credentials.getaddress",{"_index":2450,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["credentials.signmessage(ethers.utils.arrayify(hash",{"_index":2481,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["credentials.signmessage(messagepayload",{"_index":2498,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["critical",{"_index":280,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["crypto",{"_index":502,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/RelayAccountsService.html":{},"injectables/StudioLegacyJwtService.html":{},"dependencies.html":{}}}],["cryptoaes",{"_index":3669,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["cryptoaes.encrypt(wallet.getprivatekeystring",{"_index":3676,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["cryptojs",{"_index":4294,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["cryptojs.aes.decrypt(encryptedjwt",{"_index":4310,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["cryptojs.aes.encrypt(legacyjwt",{"_index":4305,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["ctx",{"_index":265,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["ctx.data.eventdata",{"_index":2535,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ctx.getresponse",{"_index":268,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctxclassname",{"_index":2278,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["ctxhandlername",{"_index":1252,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["current",{"_index":3096,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["custom",{"_index":1596,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/UsersService.html":{}}}],["customers",{"_index":5091,"title":{},"body":{"index.html":{}}}],["data",{"_index":35,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"classes/RelayDto.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"index.html":{}}}],["data.action",{"_index":4764,"title":{},"body":{"classes/WalletAction.html":{}}}],["data.amount",{"_index":1537,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{}}}],["data.decimals",{"_index":4766,"title":{},"body":{"classes/WalletAction.html":{}}}],["data.interface",{"_index":1987,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhooksService.html":{}}}],["data.interface.ts",{"_index":2234,"title":{},"body":{"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["data.limit",{"_index":1703,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["data.rectoken",{"_index":4331,"title":{},"body":{"classes/SwapTokens.html":{}}}],["data.rectokendecimals",{"_index":4328,"title":{},"body":{"classes/SwapTokens.html":{}}}],["data.senttoken",{"_index":4329,"title":{},"body":{"classes/SwapTokens.html":{}}}],["data.senttokendecimals",{"_index":4325,"title":{},"body":{"classes/SwapTokens.html":{}}}],["data.symbol",{"_index":4767,"title":{},"body":{"classes/WalletAction.html":{}}}],["data.tokenaddress",{"_index":1704,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["data.walletaddress",{"_index":1702,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["data[index",{"_index":4596,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["databasemodule",{"_index":341,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/BroadcasterModule.html":{},"modules/ChargeApiModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":1907,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["datalayerclient",{"_index":1192,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["datalayercontroller",{"_index":1668,"title":{"controllers/DataLayerController.html":{}},"body":{"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{}}}],["datalayermodule",{"_index":1501,"title":{"modules/DataLayerModule.html":{}},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"modules/DataLayerModule.html":{},"modules.html":{},"overview.html":{}}}],["datalayerproviders",{"_index":1716,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["datalayerservice",{"_index":1694,"title":{"injectables/DataLayerService.html":{}},"body":{"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"overview.html":{}}}],["date",{"_index":1123,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/VoltBarService.html":{},"interfaces/WebhookEvent-1.html":{},"dependencies.html":{}}}],["date(old.gettime",{"_index":1160,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["date.now",{"_index":2504,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["days",{"_index":4718,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["daysinyear",{"_index":4692,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["db",{"_index":840,"title":{},"body":{"controllers/AuthController.html":{},"injectables/WebhooksService.html":{}}}],["debug",{"_index":5119,"title":{},"body":{"index.html":{}}}],["debugger",{"_index":5123,"title":{},"body":{"index.html":{}}}],["decimals",{"_index":817,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"interfaces/Token-1.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["declarations",{"_index":186,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["decode",{"_index":2408,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"dependencies.html":{}}}],["decode4bytesdata",{"_index":2355,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decode4bytesdata(ifaces",{"_index":2323,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodebycalldata",{"_index":2354,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodebycalldata(ifaces",{"_index":2317,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodecalldata",{"_index":1914,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodecalldata(calldata",{"_index":4582,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decoded",{"_index":49,"title":{"interfaces/Decoded.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decoded.args",{"_index":68,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["decoded.eventfragment",{"_index":62,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["decoded.push(decoderesult",{"_index":2359,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decoded.signature",{"_index":69,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["decoded[1",{"_index":4614,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decoded[2",{"_index":4615,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodedbycalldata",{"_index":2316,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodedbycalldata.length",{"_index":2318,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodedcalldata",{"_index":4601,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodedcalldata[0].decoded",{"_index":4603,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodedcalldata[0].fragment.name",{"_index":4604,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodedeventresult",{"_index":44,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"miscellaneous/typealiases.html":{}}}],["decodedeventresultwithargnames",{"_index":36,"title":{"interfaces/DecodedEventResultWithArgNames.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"miscellaneous/typealiases.html":{}}}],["decodedeventresultwithoutargnames",{"_index":41,"title":{"interfaces/DecodedEventResultWithoutArgNames.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"miscellaneous/typealiases.html":{}}}],["decodedjwt",{"_index":2467,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["decodedjwt.sub",{"_index":2471,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["decodeevent",{"_index":46,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodefn",{"_index":2356,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodefn(iface",{"_index":2358,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decodepaymasteranddata",{"_index":1786,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["decodepaymasteranddata(baseuserop.paymasteranddata",{"_index":1799,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["decoderesult",{"_index":1909,"title":{"interfaces/DecodeResult.html":{}},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decoderesults",{"_index":4605,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decoderesults[0",{"_index":4608,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodes",{"_index":1928,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["decodewithcalldata",{"_index":2312,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodewithcalldata(sighashfromcalldata(calldata",{"_index":4592,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["decodewitheventprops",{"_index":2321,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["decorators",{"_index":173,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"classes/AuthOperatorDto.html":{},"controllers/BundlerApiController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/GraphqlController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"classes/RelayDto.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"classes/StakeDto.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"classes/SubmitQuestionnaireDto.html":{},"controllers/TradeApiController.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UpdateWebhookDto.html":{},"injectables/UserOpEventsScannerService.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}}}],["decrypted",{"_index":4309,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["decrypted.tostring(cryptojs.enc.utf8",{"_index":4312,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["decryptencryptedjwt",{"_index":4286,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["decryptencryptedjwt(encryptedjwt",{"_index":4291,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["default",{"_index":89,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AnalyticsService.html":{},"classes/ApproveToken.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/ERC20Transfer.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["default_gas_limit",{"_index":2426,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["defaultabicoder",{"_index":3217,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["defaultabicoder.encode",{"_index":3269,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["defaultkeyword",{"_index":2349,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["defaultstrategy",{"_index":860,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["defined",{"_index":175,"title":{},"body":{"controllers/AccountsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"classes/AuthOperatorDto.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateWebhookDto.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["delegate",{"_index":1510,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{}}}],["delegate(data",{"_index":1514,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{}}}],["delegate(validator",{"_index":1553,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["delegated_amounts",{"_index":1562,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["delegatedamountsdto",{"_index":1518,"title":{"classes/DelegatedAmountsDto.html":{}},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/DelegatedAmountsDto.html":{}}}],["delegators",{"_index":1932,"title":{},"body":{"classes/DelegatedAmountsDto.html":{},"interfaces/IValidator.html":{}}}],["delegatorslength",{"_index":2775,"title":{},"body":{"interfaces/IValidator.html":{}}}],["delete",{"_index":2950,"title":{},"body":{"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["delete('webhook/:webhookid",{"_index":2987,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["delete(webhookid",{"_index":2986,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["delete_addresses",{"_index":3061,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["delete_webhook",{"_index":3056,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["deleteaddresses",{"_index":2978,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["deleteaddresses(createwebhookaddressesdto",{"_index":2989,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["deletewebhook",{"_index":3031,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["deletewebhook(webhookid",{"_index":3042,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dependencies",{"_index":184,"title":{"dependencies.html":{}},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":4090,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["deposit",{"_index":4157,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{}}}],["deposited",{"_index":3808,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["descgenerator",{"_index":774,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["descgenerator(data",{"_index":793,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["descgenerator(undefined",{"_index":2968,"title":{},"body":{"classes/NftTransfer.html":{}}}],["description",{"_index":788,"title":{},"body":{"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/IValidator.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/PaymentLink.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"classes/StakeTokens.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"controllers/UsersController.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"index.html":{},"properties.html":{}}}],["designed",{"_index":5057,"title":{},"body":{"index.html":{}}}],["dev",{"_index":5116,"title":{},"body":{"index.html":{}}}],["developed",{"_index":5096,"title":{},"body":{"index.html":{}}}],["development",{"_index":5055,"title":{},"body":{"index.html":{}}}],["didnt",{"_index":1905,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["direction",{"_index":1845,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/TokenTransferWebhookDto.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["display",{"_index":5085,"title":{},"body":{"index.html":{}}}],["docker",{"_index":5115,"title":{},"body":{"index.html":{}}}],["docker:debug",{"_index":5120,"title":{},"body":{"index.html":{}}}],["docker:dev",{"_index":5118,"title":{},"body":{"index.html":{}}}],["docs",{"_index":4897,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["document",{"_index":221,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"interfaces/BaseUserOp.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}}}],["doescontainnamedkeys",{"_index":154,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["doescontainnamedkeys(decoded.args",{"_index":66,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["don't",{"_index":93,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["dotenv",{"_index":4982,"title":{},"body":{"dependencies.html":{}}}],["due",{"_index":2463,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["duplicate",{"_index":4902,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["duplicateentries",{"_index":4915,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["duplicatekeys",{"_index":4903,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["duplicates",{"_index":4911,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["during",{"_index":3785,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["e",{"_index":73,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["e.reason",{"_index":75,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["e?.response?.data?.error",{"_index":996,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["e?.response?.data?.errors?.message",{"_index":1227,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{}}}],["e?.response?.status",{"_index":997,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["e?.response?.statustext",{"_index":995,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["e?.result?.error",{"_index":3272,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["e?.result?.error?.message",{"_index":3273,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["each",{"_index":1017,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/DelegatedAmountsDto.html":{},"interfaces/UserOp.html":{},"injectables/WebhooksService.html":{}}}],["earnedamountusd",{"_index":2647,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["easy",{"_index":5084,"title":{},"body":{"index.html":{}}}],["edge",{"_index":98,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["elemmatch",{"_index":1861,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["email",{"_index":1623,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"interfaces/User.html":{}}}],["empty",{"_index":1890,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["enables",{"_index":5067,"title":{},"body":{"index.html":{}}}],["encode",{"_index":1924,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["encoded",{"_index":1920,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["encodedabi",{"_index":4265,"title":{},"body":{"injectables/StakingService.html":{}}}],["encryptedjwt",{"_index":4293,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["encryptedlegacyjwt",{"_index":327,"title":{},"body":{"interfaces/ApiKey.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["encryptedpk",{"_index":3645,"title":{},"body":{"interfaces/RelayAccount.html":{},"injectables/RelayAccountsService.html":{}}}],["endpoint",{"_index":3131,"title":{},"body":{"controllers/OperatorsController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["enter",{"_index":4152,"title":{},"body":{"classes/StakeTokens.html":{}}}],["entries",{"_index":4910,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["entry_point_abi",{"_index":4559,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["entrypointaddress",{"_index":3200,"title":{},"body":{"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{}}}],["enumerations",{"_index":5011,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":3206,"title":{},"body":{"injectables/PaymasterApiService.html":{},"index.html":{}}}],["env.example",{"_index":5107,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":4112,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["environment",{"_index":1203,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"index.html":{}}}],["eq",{"_index":1872,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/WebhooksService.html":{}}}],["erc",{"_index":5027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["erc20",{"_index":5026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["erc20abi",{"_index":2607,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["erc20eventsscannerservice",{"_index":1935,"title":{"injectables/ERC20EventsScannerService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"overview.html":{}}}],["erc20logsfilterstring",{"_index":1980,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["erc20scannerstatusservicestring",{"_index":1981,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["erc20transfer",{"_index":806,"title":{"classes/ERC20Transfer.html":{}},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["erc4337",{"_index":5070,"title":{},"body":{"index.html":{}}}],["erc721",{"_index":5028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["erc721transfer",{"_index":2055,"title":{"interfaces/ERC721Transfer.html":{}},"body":{"interfaces/ERC721Transfer.html":{},"classes/NftTransfer.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{}}}],["erc_20_type",{"_index":800,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["erc_721_type",{"_index":801,"title":{},"body":{"classes/ApproveToken.html":{},"classes/NftTransfer.html":{},"classes/TokenReceive.html":{}}}],["erctransfermetadata",{"_index":4772,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["err",{"_index":139,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AppStoreService.html":{},"injectables/BroadcasterService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/WebhooksService.html":{}}}],["err.code",{"_index":4901,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["err.getresponse().tostring",{"_index":1139,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["err.getstatus",{"_index":1138,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["err.writeerrors?.map(error",{"_index":4904,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["errmsg",{"_index":4906,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["error",{"_index":125,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["error(\"couldn't",{"_index":2461,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error('not",{"_index":4081,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["error('owner",{"_index":3847,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["error('project",{"_index":545,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["error('signature",{"_index":4607,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["error(`${message",{"_index":2522,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error(`${response.status",{"_index":2345,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["error(`couldn't",{"_index":2561,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error(`failed",{"_index":1837,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["error(error",{"_index":2455,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error(error.message",{"_index":4513,"title":{},"body":{"classes/TransferToken.html":{}}}],["error.errmsg",{"_index":4907,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["error.index",{"_index":4905,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["error.message",{"_index":1838,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["error.op",{"_index":4908,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["error.request",{"_index":2520,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error.response",{"_index":2518,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["error.response.data",{"_index":2519,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["errormessage",{"_index":269,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["errorreason",{"_index":1226,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{}}}],["errorresponse",{"_index":1137,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["errorstatus",{"_index":1136,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["establish",{"_index":2475,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["estimateuseropgas",{"_index":3183,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["estimateuseropgas(op",{"_index":3199,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["estimation",{"_index":3278,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["eth",{"_index":4489,"title":{},"body":{"classes/TransferToken.html":{}}}],["eth_estimateuseroperationgas",{"_index":3271,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["eth_senduseroperation",{"_index":1230,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["ethereum",{"_index":1600,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"injectables/EthereumPaymentsService.html":{}}}],["ethereum.dto.ts",{"_index":4527,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.dto.ts:13",{"_index":4529,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.dto.ts:16",{"_index":4531,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.dto.ts:19",{"_index":4528,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.dto.ts:6",{"_index":4530,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.dto.ts:9",{"_index":4532,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["ethereum.service",{"_index":2115,"title":{},"body":{"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{}}}],["ethereum.service.ts",{"_index":885,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:115",{"_index":920,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:13",{"_index":904,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:135",{"_index":916,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:22",{"_index":926,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:26",{"_index":928,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:30",{"_index":930,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:34",{"_index":932,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:38",{"_index":934,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:42",{"_index":936,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:46",{"_index":938,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:50",{"_index":940,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:54",{"_index":924,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:56",{"_index":910,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:75",{"_index":912,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:79",{"_index":914,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:83",{"_index":906,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereum.service.ts:95",{"_index":922,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereumbackendwallet",{"_index":949,"title":{"interfaces/EthereumBackendWallet.html":{}},"body":{"injectables/BackendWalletsEthereumService.html":{},"interfaces/EthereumBackendWallet.html":{},"injectables/EthereumPaymentsService.html":{}}}],["ethereumbackendwalletmodelstring",{"_index":944,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethereumjs",{"_index":3668,"title":{},"body":{"injectables/RelayAccountsService.html":{},"dependencies.html":{}}}],["ethereumpaymentaccount",{"_index":2057,"title":{"interfaces/EthereumPaymentAccount.html":{}},"body":{"interfaces/EthereumPaymentAccount.html":{},"injectables/EthereumPaymentsService.html":{}}}],["ethereumpaymentaccountmodelstring",{"_index":2157,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["ethereumpaymentlink",{"_index":2059,"title":{"interfaces/EthereumPaymentLink.html":{}},"body":{"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{}}}],["ethereumpaymentlinkmodelstring",{"_index":2158,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["ethereumpaymentscontroller",{"_index":2064,"title":{"controllers/EthereumPaymentsController.html":{}},"body":{"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{}}}],["ethereumpaymentsmodule",{"_index":1457,"title":{"modules/EthereumPaymentsModule.html":{}},"body":{"modules/ChargeAppsServiceModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["ethereumpaymentsproviders",{"_index":2113,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["ethereumpaymentsservice",{"_index":2089,"title":{"injectables/EthereumPaymentsService.html":{}},"body":{"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"overview.html":{}}}],["ethers",{"_index":51,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"classes/LegacyEventEmitter.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"modules/StakingModule.html":{},"classes/SwapTokens.html":{},"injectables/TokenService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"dependencies.html":{}}}],["ethers.constants.addresszero",{"_index":4162,"title":{},"body":{"classes/StakeTokens.html":{}}}],["ethers.providers.jsonrpcprovider(process.env.rpc_url",{"_index":2500,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.signer",{"_index":2477,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexlify(ethers.utils.arrayify('0x",{"_index":2513,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexzeropad(ethers.utils.hexlify(block",{"_index":2506,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexzeropad(ethers.utils.hexlify(gaslimit",{"_index":2493,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexzeropad(ethers.utils.hexlify(gasprice",{"_index":2492,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexzeropad(ethers.utils.hexlify(timestamp",{"_index":2509,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.hexzeropad(ethers.utils.hexlify(value",{"_index":2490,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.keccak256(ethers.utils.arrayify(input",{"_index":2497,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.utils.keccak256(input",{"_index":2480,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ethers.wallet(this._privatekey",{"_index":4505,"title":{},"body":{"classes/TransferToken.html":{}}}],["ethers/lib/utils",{"_index":2401,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{}}}],["etherscontract",{"_index":1950,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["ethersmodule",{"_index":1589,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["ethersmodule.forrootasync",{"_index":1592,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["ethersproject/abi",{"_index":20,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["ethersproject/abi/lib/_version",{"_index":22,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["ethersproject/bignumber",{"_index":24,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["ethersproject/hdnode",{"_index":953,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["ethersproject/logger",{"_index":26,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["event",{"_index":78,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/BroadcasterService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/WebhooksService.html":{},"miscellaneous/typealiases.html":{}}}],["event.anonymous",{"_index":130,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["event.constants",{"_index":1108,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["event.inputs",{"_index":113,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["event.interface",{"_index":1110,"title":{},"body":{"injectables/BroadcasterService.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/WebhooksService.html":{}}}],["event.interface.ts",{"_index":4787,"title":{},"body":{"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}}}],["event.name",{"_index":132,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["event.provider",{"_index":1068,"title":{},"body":{"modules/BroadcasterModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/WebhooksModule.html":{}}}],["event.schema",{"_index":4886,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["event.schema.ts",{"_index":5013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["event.type",{"_index":131,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventdata",{"_index":1811,"title":{"interfaces/EventData.html":{}},"body":{"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"injectables/SmartWalletsEventsService.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhooksService.html":{}}}],["eventdata).catch((error",{"_index":4568,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["eventdata.isinternaltransaction",{"_index":4483,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["eventdata.smartwalletaddress",{"_index":4055,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["eventdata.tokendecimals",{"_index":2034,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["eventdata.tokenid",{"_index":2037,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["eventdata.txhash",{"_index":4948,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["eventdata.value",{"_index":2032,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["eventdata.valueeth",{"_index":2035,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["eventdata?.from",{"_index":4929,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["eventdata?.to",{"_index":4928,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["eventdata?.tokenaddress",{"_index":4930,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["eventemitter",{"_index":2404,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["eventfragment",{"_index":9,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventfragment.format(formattypes.full",{"_index":70,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventfragment.fromobject",{"_index":61,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventinput",{"_index":309,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["eventname",{"_index":1809,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["eventoptions",{"_index":306,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["eventproperties",{"_index":305,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["eventprops",{"_index":33,"title":{"interfaces/EventProps.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["eventprops.data",{"_index":135,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventprops.topics",{"_index":136,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventprops.topics.length",{"_index":103,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["eventprops.topics[0",{"_index":106,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["events",{"_index":1938,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"index.html":{}}}],["events.service",{"_index":1726,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/SmartWalletsModule.html":{}}}],["events.service.ts",{"_index":3757,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:116",{"_index":4003,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:12",{"_index":3765,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:123",{"_index":3994,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:15",{"_index":3988,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:157",{"_index":3990,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:164",{"_index":4001,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:172",{"_index":3997,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:180",{"_index":3999,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:187",{"_index":4005,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:200",{"_index":4008,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:21",{"_index":3769,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:25",{"_index":3995,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:29",{"_index":4006,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:32",{"_index":3772,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:44",{"_index":3774,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:54",{"_index":3776,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:63",{"_index":4011,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:64",{"_index":3767,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["events.service.ts:67",{"_index":4013,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:71",{"_index":4015,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["events.service.ts:75",{"_index":3992,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["eventsignatures",{"_index":2330,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["eventsscannermodule",{"_index":1478,"title":{"modules/EventsScannerModule.html":{}},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules/EventsScannerModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsscannerproviders",{"_index":2248,"title":{},"body":{"modules/EventsScannerModule.html":{}}}],["eventsscannerservice",{"_index":1940,"title":{"injectables/EventsScannerService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["eventsscannerservice:37",{"_index":1970,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["eventsscannerservice:52",{"_index":4556,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["eventsscannerservice:55",{"_index":1968,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["eventtype",{"_index":1094,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/CreateWebhookDto.html":{},"interfaces/Webhook.html":{},"injectables/WebhooksService.html":{}}}],["eventtypes",{"_index":1104,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/CreateWebhookDto.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["eventtypes.all",{"_index":1168,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["example",{"_index":5102,"title":{},"body":{"index.html":{}}}],["exception",{"_index":244,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UsersService.html":{}}}],["exception.code",{"_index":274,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":273,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":271,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":279,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":233,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts",{"_index":231,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:13",{"_index":237,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:19",{"_index":243,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":4663,"title":{},"body":{"injectables/UsersService.html":{}}}],["execute",{"_index":773,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"classes/WalletAction.html":{}}}],["execute(parseduserop",{"_index":791,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["executebatch",{"_index":4146,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["executereceiveaction",{"_index":4377,"title":{},"body":{"classes/TokenReceive.html":{}}}],["executereceiveaction(fromwalletaddress",{"_index":4384,"title":{},"body":{"classes/TokenReceive.html":{}}}],["execution",{"_index":4096,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["executioncontext",{"_index":1194,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["exist",{"_index":512,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/OperatorsController.html":{}}}],["existinguserop",{"_index":1818,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["exists",{"_index":397,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/DataLayerService.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"injectables/UsersService.html":{}}}],["expect",{"_index":140,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["explorerapicontroller",{"_index":2266,"title":{"controllers/ExplorerApiController.html":{}},"body":{"controllers/ExplorerApiController.html":{},"modules/ExplorerApiModule.html":{}}}],["explorerapiinterceptor",{"_index":2270,"title":{"injectables/ExplorerApiInterceptor.html":{}},"body":{"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{}}}],["explorerapimodule",{"_index":1420,"title":{"modules/ExplorerApiModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ExplorerApiModule.html":{},"modules.html":{},"overview.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["exports",{"_index":189,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["express",{"_index":3115,"title":{},"body":{"controllers/OperatorsController.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"dependencies.html":{}}}],["extendedapps",{"_index":744,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["extendedapps.filter(app",{"_index":747,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["extendedtokensbalance",{"_index":1380,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["extendedtokensbalance.entries",{"_index":1385,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["extendedtokensbalance[index",{"_index":1400,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["extends",{"_index":37,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"interfaces/BaseUserOp.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/UserStakedTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}}}],["externalid",{"_index":3682,"title":{},"body":{"classes/RelayDto.html":{}}}],["externallyownedaccountaddress",{"_index":869,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["externalwebhookurl",{"_index":4795,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["extractjwt",{"_index":2870,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2885,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["facilitates",{"_index":5093,"title":{},"body":{"index.html":{}}}],["factory",{"_index":1782,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["factory.service",{"_index":1720,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{}}}],["factory.service.ts",{"_index":4570,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["factory.service.ts:11",{"_index":4575,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["factory.service.ts:6",{"_index":4573,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["fail",{"_index":141,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/ChargeApiService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["failed",{"_index":1244,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["fails",{"_index":143,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["false",{"_index":42,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/BroadcasterService.html":{},"modules/ConsensusModule.html":{},"classes/CreateWebhookDto.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"classes/FuseLegacySDK.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"classes/LegacyEventEmitter.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/WalletActionDocument.html":{},"injectables/WebhooksService.html":{}}}],["fee",{"_index":1029,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/IValidator.html":{},"interfaces/UserOp.html":{}}}],["feed",{"_index":5079,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":2294,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch(...args).then(async",{"_index":2341,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch4bytes",{"_index":2334,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch4bytes(sighash",{"_index":2331,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch4bytesby",{"_index":2329,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch4bytesby.eventsignatures(sighash",{"_index":2322,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetch4bytesby.signatures(sighash",{"_index":2313,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fetchedtokeddata",{"_index":4419,"title":{},"body":{"injectables/TokenService.html":{}}}],["fetches",{"_index":3517,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["fetchfromgraphql",{"_index":2692,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["fetchfromgraphql(graphapiurl",{"_index":2694,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["fetching",{"_index":1869,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{}}}],["fetchlogs",{"_index":1944,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["fetchlogs(fromblock",{"_index":1969,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["fetchtokendetails",{"_index":4405,"title":{},"body":{"injectables/TokenService.html":{}}}],["fetchtokendetails(address",{"_index":4407,"title":{},"body":{"injectables/TokenService.html":{}}}],["fetchtokendetails(tokenout",{"_index":4361,"title":{},"body":{"classes/SwapTokens.html":{}}}],["fetchtokentransferdata",{"_index":2966,"title":{},"body":{"classes/NftTransfer.html":{}}}],["fetchtokentransferdata(undefined",{"_index":2970,"title":{},"body":{"classes/NftTransfer.html":{}}}],["fetchtransactiongascosts",{"_index":2674,"title":{},"body":{"injectables/GasService.html":{}}}],["fetchtransactiongascosts(transactionhash",{"_index":2675,"title":{},"body":{"injectables/GasService.html":{}}}],["field",{"_index":3360,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["fields",{"_index":377,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["files",{"_index":5111,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1992,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["filter.ts",{"_index":2953,"title":{},"body":{"interfaces/LogFilter.html":{}}}],["filteredblocktraces",{"_index":4471,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["final",{"_index":2930,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["finally",{"_index":1153,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["find",{"_index":1900,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/WebhooksService.html":{}}}],["findactivebyprojectidandenv",{"_index":3292,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["findactivebyprojectidandenv(idandenv",{"_index":3298,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["findactivepaymasters",{"_index":3293,"title":{},"body":{"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{}}}],["findactivepaymasters(id",{"_index":3302,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["findactivepaymasters(projectid",{"_index":3339,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["findall",{"_index":3330,"title":{},"body":{"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findall(auth0id",{"_index":3512,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findall(projectid",{"_index":3341,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["findone",{"_index":459,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AuthController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findone(id",{"_index":835,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/UsersService.html":{}}}],["findone(query",{"_index":479,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["findonebyauth0id",{"_index":4642,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyauth0id(id",{"_index":4649,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyidinternal",{"_index":3497,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findonebyidinternal(id",{"_index":3520,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findonebyownerid",{"_index":3581,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["findonebyownerid(ownerid",{"_index":3591,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["findonebyprojectidandenv",{"_index":3331,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["findonebyprojectidandenv(idandenv",{"_index":3343,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["findoneinternal",{"_index":3498,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["findoneinternal(id",{"_index":3522,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["findoperatorbyownerid",{"_index":3074,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["findoperatorbyownerid(walletaddress",{"_index":3088,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["findoperatorbysmartwallet",{"_index":3075,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["findoperatorbysmartwallet(walletaddress",{"_index":3091,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["finds",{"_index":3514,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findsponsoredtransactionscount",{"_index":1738,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["findsponsoredtransactionscount(sponsorid",{"_index":1754,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["findwalletbyaddress",{"_index":889,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["findwalletbyaddress(walletaddress",{"_index":911,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["first",{"_index":4140,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["first(parseduserop.targetfunctions",{"_index":4154,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["first(path",{"_index":4337,"title":{},"body":{"classes/SwapTokens.html":{}}}],["firstcalldata",{"_index":4153,"title":{},"body":{"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["firstname",{"_index":1624,"title":{},"body":{"classes/CreateOperatorUserDto.html":{}}}],["firstseen",{"_index":2776,"title":{},"body":{"interfaces/IValidator.html":{}}}],["fns",{"_index":4699,"title":{},"body":{"injectables/VoltBarService.html":{},"dependencies.html":{}}}],["fns/constants",{"_index":4697,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["fordelegation",{"_index":2777,"title":{},"body":{"interfaces/IValidator.html":{}}}],["form",{"_index":56,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["format",{"_index":58,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["formatether",{"_index":2613,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["formatether(bignumber.from(trace.action.value",{"_index":4477,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["formattedbalance",{"_index":1394,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["formattypes",{"_index":18,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["formatunits",{"_index":1337,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"classes/SwapTokens.html":{},"classes/WalletAction.html":{}}}],["formatunits(data.rectokenvalueinwei",{"_index":4327,"title":{},"body":{"classes/SwapTokens.html":{}}}],["formatunits(data.senttokenvalueinwei",{"_index":4324,"title":{},"body":{"classes/SwapTokens.html":{}}}],["formatunits(data.valueinwei",{"_index":4765,"title":{},"body":{"classes/WalletAction.html":{}}}],["formatunits(eventdata.value",{"_index":2036,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["formatunits(token.balance",{"_index":1395,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["formatunits(value",{"_index":1882,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["formatunits(walletaction?.sent[0]?.value",{"_index":3803,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["forwarded",{"_index":4308,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["found",{"_index":522,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/OperatorsController.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["fourbytesreponseentry",{"_index":2288,"title":{"interfaces/FourBytesReponseEntry.html":{}},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fourbytesresponse",{"_index":2301,"title":{"interfaces/FourBytesResponse.html":{}},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["frag",{"_index":1918,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["fragment",{"_index":1911,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["fragment.name",{"_index":4609,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["framework",{"_index":5056,"title":{},"body":{"index.html":{}}}],["friendly",{"_index":5081,"title":{},"body":{"index.html":{}}}],["fromaddress",{"_index":2013,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/WebhooksService.html":{}}}],["fromaddresswatchers",{"_index":4939,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["fromblock",{"_index":1964,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["fromblocknumber",{"_index":3712,"title":{},"body":{"classes/ScannerService.html":{}}}],["fromwalletaddress",{"_index":4382,"title":{},"body":{"classes/TokenReceive.html":{}}}],["full",{"_index":4448,"title":{},"body":{"modules/TransactionsScannerModule.html":{}}}],["fullsignature",{"_index":10,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["fully",{"_index":1923,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["function",{"_index":45,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/SmartWalletService.html":{},"interfaces/StakingProvider.html":{}}}],["functionalities",{"_index":5065,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1788,"title":{},"body":{"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["fund",{"_index":3104,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["funds",{"_index":3486,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["fuse",{"_index":1317,"title":{},"body":{"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"modules/PaymasterApiModule.html":{},"injectables/SmartWalletsEventsService.html":{},"classes/TokenReceive.html":{},"injectables/TransactionsScannerService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["fuse_api_base_url",{"_index":2423,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["fusebox",{"_index":5053,"title":{},"body":{"index.html":{},"properties.html":{}}}],["fuseio/fusebox",{"_index":4497,"title":{},"body":{"classes/TransferToken.html":{},"dependencies.html":{}}}],["fuselegacysdk",{"_index":2360,"title":{"classes/FuseLegacySDK.html":{}},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/TransferToken.html":{}}}],["fuselegacysdk(publicapikey",{"_index":4514,"title":{},"body":{"classes/TransferToken.html":{}}}],["fuselegacysdk.init(credentials",{"_index":4515,"title":{},"body":{"classes/TransferToken.html":{}}}],["fuselegacysdk.relay(this._to",{"_index":4516,"title":{},"body":{"classes/TransferToken.html":{}}}],["fuseliquidstakingid",{"_index":4252,"title":{},"body":{"injectables/StakingService.html":{}}}],["fuseliquidstakingservice",{"_index":2563,"title":{"injectables/FuseLiquidStakingService.html":{}},"body":{"injectables/FuseLiquidStakingService.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"overview.html":{}}}],["fusepaymasterabi",{"_index":3219,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["fuseprice",{"_index":2644,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["fuseprovider",{"_index":3190,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["fusesdk",{"_index":4496,"title":{},"body":{"classes/TransferToken.html":{}}}],["fusesdk.callcontract(this._to",{"_index":4511,"title":{},"body":{"classes/TransferToken.html":{}}}],["fusesdk.init(publicapikey",{"_index":4507,"title":{},"body":{"classes/TransferToken.html":{}}}],["fusespark",{"_index":3181,"title":{},"body":{"modules/PaymasterApiModule.html":{}}}],["fusetoken",{"_index":2550,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["gas",{"_index":1025,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["gases",{"_index":3245,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["gases?.callgaslimit",{"_index":3252,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["gases?.preverificationgas",{"_index":3255,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["gasfee",{"_index":2235,"title":{},"body":{"interfaces/EventData.html":{},"injectables/GasService.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["gaslimit",{"_index":2236,"title":{},"body":{"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/GasService.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["gasprice",{"_index":2237,"title":{},"body":{"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/GasService.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["gasservice",{"_index":1952,"title":{"injectables/GasService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"injectables/GasService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"overview.html":{}}}],["gasused",{"_index":2238,"title":{},"body":{"interfaces/EventData.html":{},"injectables/GasService.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["gasvalues",{"_index":2021,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["generatecombinations",{"_index":28,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["generatecombinations(inputs.length",{"_index":158,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["generated",{"_index":395,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"interfaces/BaseUserOp.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"interfaces/UserOp.html":{}}}],["generatedescription",{"_index":775,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["generatedescription(data",{"_index":795,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["generaterandomtoken",{"_index":460,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["generates",{"_index":413,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{}}}],["generatesalt",{"_index":4077,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["generatesecretkey",{"_index":461,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["generatetransactionid",{"_index":4078,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["generatetransactionid(relaydto.data",{"_index":4094,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["generatetransactionid(salt",{"_index":4091,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["generatetransactionid(smartwallet.salt",{"_index":4083,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["get('/account",{"_index":3120,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["get('/apikeysinfo/:projectid",{"_index":3559,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get('/is",{"_index":3125,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["get('/paymaster/:sponsorid",{"_index":3550,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get('/public/:projectid",{"_index":3563,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get('/sandbox/:projectid",{"_index":3567,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get('/secret/:projectid",{"_index":3557,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get('/sponsored",{"_index":3129,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["get('/tokens",{"_index":2903,"title":{},"body":{"controllers/LegacyAdminApiController.html":{}}}],["get('/wallets",{"_index":2904,"title":{},"body":{"controllers/LegacyAdminApiController.html":{}}}],["get(':id",{"_index":3315,"title":{},"body":{"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{}}}],["get('account_balance",{"_index":3408,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["get('actions",{"_index":3927,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["get('address",{"_index":4824,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["get('api",{"_index":651,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["get('collectibles/:address",{"_index":2729,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["get('health",{"_index":174,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{}}}],["get('historical_txs",{"_index":3884,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["get('payment_link/:paymentlinkid",{"_index":2080,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["get('payment_link/allowed_tokens",{"_index":2099,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["get('payment_links",{"_index":661,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["get('payments/account/balance",{"_index":663,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["get('payments/allowed_tokens",{"_index":657,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["get('staked_tokens/:accountaddress",{"_index":4197,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["get('staking_options",{"_index":4198,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["get('userops/:address",{"_index":2732,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["get('validators",{"_index":1521,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["get('version",{"_index":3309,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["get('webhook/:webhookid",{"_index":2993,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["get('webhook/addresses/:webhookid",{"_index":2996,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["get('webhooks/:projectid",{"_index":2999,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["get(`${this.configservice.get('tradeapibaseurl')}/api/v1/price/${tokenaddress",{"_index":4440,"title":{},"body":{"injectables/TradeService.html":{}}}],["get(body",{"_index":1875,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["get(data",{"_index":1676,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["get(eventdata",{"_index":4047,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["get(requestheaders",{"_index":2924,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["get(response",{"_index":3277,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["get(user",{"_index":1874,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["get(webhookid",{"_index":2992,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["get_addresses",{"_index":3060,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["get_all_webhooks",{"_index":3058,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["get_allowed_tokens",{"_index":757,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["get_api_keys_info",{"_index":751,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ProjectsService.html":{}}}],["get_available_upgrades",{"_index":3910,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["get_collectibles_by_owner",{"_index":2745,"title":{},"body":{"injectables/GraphqlAPIService.html":{}}}],["get_paymaster_info",{"_index":3230,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["get_payment_links",{"_index":756,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["get_project_id_by_public_key",{"_index":1898,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["get_public",{"_index":3620,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["get_sandbox_key",{"_index":3617,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["get_userops_by_sender",{"_index":2746,"title":{},"body":{"injectables/GraphqlAPIService.html":{}}}],["get_validators",{"_index":1561,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["get_wallet",{"_index":3907,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["get_wallet_balance",{"_index":758,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["get_webhook",{"_index":3057,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getactivatedapps",{"_index":579,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["getactivatedapps(auth0id",{"_index":601,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["getaddress",{"_index":2162,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["getaddress(trace.action.from",{"_index":4475,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["getaddress(trace.action.to",{"_index":4474,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["getaddress(webhookevent.event.activity[0].fromaddress",{"_index":2200,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["getaddress(webhookevent.event.activity[0].toaddress",{"_index":2199,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["getaddress(webhookevent.event.activity[0]?.log?.address",{"_index":2204,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["getaddresses",{"_index":2979,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["getaddresses(webhookid",{"_index":2995,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["getaddresswatchers",{"_index":4810,"title":{},"body":{"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["getaddresswatchers(address",{"_index":4823,"title":{},"body":{"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["getalchemyauthkey",{"_index":933,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["getalchemybaseurl",{"_index":931,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["getalchemywebookid",{"_index":935,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["getall",{"_index":2980,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{}}}],["getall(projectid",{"_index":2998,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{}}}],["getallbyprojectid",{"_index":4854,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["getallbyprojectid(projectid",{"_index":4872,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["getallowedpaymenttokens",{"_index":2149,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["getallowedtokenaddresses",{"_index":2151,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["getallowedtokens",{"_index":2068,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["getallowedtokensymbols",{"_index":2153,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["getallwebhooks",{"_index":3032,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getallwebhooks(projectid",{"_index":3045,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getapikeysinfo",{"_index":462,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getapikeysinfo(apikeysdto",{"_index":560,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["getapikeysinfo(appname",{"_index":703,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["getapikeysinfo(projectid",{"_index":485,"title":{},"body":{"injectables/ApiKeysService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getappinfo",{"_index":580,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["getappinfo(appname",{"_index":607,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["getavailableapps",{"_index":714,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["getavailableupgrades",{"_index":3892,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["getavailableversionlist",{"_index":3294,"title":{},"body":{"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{}}}],["getbackendwalletbyaddress",{"_index":890,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getbackendwalletbyaddress(address",{"_index":913,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getbarstats",{"_index":4693,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getbaruser",{"_index":4694,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getblockclient",{"_index":2706,"title":{},"body":{"injectables/GraphService.html":{},"injectables/VoltBarService.html":{}}}],["getblockrewardaddress",{"_index":2597,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getchargebaseurl",{"_index":1325,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getchargepaymentlinkswebhookid",{"_index":3437,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getchargepublickey",{"_index":1329,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getchargewebhookid",{"_index":1331,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getcollectiblesbyowner",{"_index":2726,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{}}}],["getcollectiblesbyowner(address",{"_index":2728,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{}}}],["getconsensusaddress",{"_index":2595,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getdelegatedamounts",{"_index":1511,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{}}}],["getdelegatedamounts(delegatedamountsdto",{"_index":1517,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{}}}],["getenvpath",{"_index":4110,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["getenvpath(path.join(__dirname",{"_index":4113,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["geterc20transferdata",{"_index":4124,"title":{},"body":{"classes/StakeTokens.html":{}}}],["geterc20transferdata(undefined",{"_index":4132,"title":{},"body":{"classes/StakeTokens.html":{}}}],["getgetmnemonic",{"_index":937,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["getgetpaymentsallowedtokens",{"_index":925,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getgetsleepms",{"_index":939,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["gethash",{"_index":3184,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["gethash(paymastercontract",{"_index":3201,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["gethello",{"_index":1448,"title":{},"body":{"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{}}}],["gethistoricaltxs",{"_index":3623,"title":{},"body":{"injectables/RelayAPIService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["gethistoricaltxs(query",{"_index":3861,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["gethistoricaltxs(smartwalletaddress",{"_index":3627,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["gethistoricaltxs(user",{"_index":3899,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["getliquidstakinginterface",{"_index":2603,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getmaxtimeintervalsms",{"_index":1102,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getmnemonic",{"_index":899,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["getnetworkname",{"_index":2147,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["getnewretryafterdate",{"_index":1073,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getnewretryafterdate(webhookevent",{"_index":1084,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getoperatorbyapikey",{"_index":1739,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["getoperatorbyapikey(apikey",{"_index":1756,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["getoperatorsuserandproject",{"_index":3076,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["getoperatorsuserandproject(auth0id",{"_index":3093,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["getowneridbypublickey",{"_index":553,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["getowneridbypublickey(publickey",{"_index":562,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["getpaginatedwalletactions",{"_index":1740,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["getpaginatedwalletactions(pagenumber",{"_index":1758,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["getpaymentlink",{"_index":2069,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentlink(paymentlinkid",{"_index":2079,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentlinks",{"_index":581,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentlinks(auth0id",{"_index":612,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["getpaymentlinks(ownerid",{"_index":2135,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["getpaymentlinks(userid",{"_index":2083,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["getpaymentsallowedtokens",{"_index":582,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["getpricefromtradeapi",{"_index":1293,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getpricefromtradeapi(tokenaddress",{"_index":1308,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getprojectbysponsorid",{"_index":3499,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getprojectbysponsorid(sponsorid",{"_index":3527,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getprojectidbypublickey",{"_index":365,"title":{},"body":{"controllers/ApiKeysController.html":{},"injectables/ApiKeysService.html":{}}}],["getprojectidbypublickey(apikey",{"_index":398,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["getprojectidbypublickey(publickey",{"_index":487,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["getprojectjwt",{"_index":463,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["getprojectjwt(query",{"_index":489,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["getproviderbyenv",{"_index":3185,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["getproviderbyenv(env",{"_index":3204,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["getpublic",{"_index":366,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getpublic(apikeysdto",{"_index":434,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["getpublic(projectid",{"_index":402,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getpublicinternal",{"_index":3500,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getpublicinternal(projectid",{"_index":3532,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getpublickey",{"_index":464,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["getpublickey(apikeysdto",{"_index":564,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["getpublickey(projectid",{"_index":491,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["getreceivedtokendata",{"_index":4125,"title":{},"body":{"classes/StakeTokens.html":{}}}],["getreceivedtokendata(to",{"_index":4134,"title":{},"body":{"classes/StakeTokens.html":{}}}],["getrelayapiurl",{"_index":3633,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["getresponsedetailswithdate",{"_index":1074,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getresponsedetailswithdate(status",{"_index":1087,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getretrytimeintervalms",{"_index":1075,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getretrytimeintervalms(numberoftries",{"_index":1090,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["getretrytimeintervalsms",{"_index":1100,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["gets",{"_index":372,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/ProjectsController.html":{}}}],["getsandbox",{"_index":367,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["getsandbox(projectid",{"_index":405,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["getsandboxkey",{"_index":465,"title":{},"body":{"injectables/ApiKeysService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getsandboxkey(projectid",{"_index":493,"title":{},"body":{"injectables/ApiKeysService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["getsftokenaddress",{"_index":2593,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getsharedaddresses",{"_index":4010,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["getsleepms",{"_index":900,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getsponsoredtransactionscount",{"_index":3077,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["getsponsoredtransactionscount(auth0id",{"_index":3097,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["getsponsorid",{"_index":3332,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["getsponsorid(projectid",{"_index":3346,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["getstakingdata",{"_index":4667,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getstakingdata(accountaddress",{"_index":4671,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getstakingoption",{"_index":4235,"title":{},"body":{"injectables/StakingService.html":{}}}],["getstakingoption(tokenaddress",{"_index":4240,"title":{},"body":{"injectables/StakingService.html":{}}}],["getstakingoptionsconfig",{"_index":4249,"title":{},"body":{"injectables/StakingService.html":{}}}],["getstakingprovider",{"_index":4236,"title":{},"body":{"injectables/StakingService.html":{}}}],["getstakingprovider(stakingoption",{"_index":4242,"title":{},"body":{"injectables/StakingService.html":{}}}],["getstakingproviderid",{"_index":4682,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getstatus",{"_index":3726,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["gettargetfunction",{"_index":4579,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["gettargetfunction(calls",{"_index":4584,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["getting",{"_index":3235,"title":{"index.html":{}},"body":{"injectables/PaymasterApiService.html":{}}}],["gettoken",{"_index":4378,"title":{},"body":{"classes/TokenReceive.html":{}}}],["gettoken(tokentype",{"_index":4387,"title":{},"body":{"classes/TokenReceive.html":{}}}],["gettokeninfo",{"_index":1941,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["gettokeninfo(tokenaddress",{"_index":1956,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["gettokenprice",{"_index":4436,"title":{},"body":{"injectables/TradeService.html":{}}}],["gettokenprice(tokenaddress",{"_index":4438,"title":{},"body":{"injectables/TradeService.html":{}}}],["gettokens",{"_index":2900,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["gettokentypeabi",{"_index":1977,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["gettokentypeabi(tokentype",{"_index":2010,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["gettransfereventtokentype",{"_index":1978,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["gettransfereventtokentype(log",{"_index":2009,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["getunixtime",{"_index":4698,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getunixtime(new",{"_index":4721,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getunmarshalauthkey",{"_index":929,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getunmarshalbaseurl",{"_index":927,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["getupdatedjobdata",{"_index":1294,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getupdatedjobdata(jobdata",{"_index":1311,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getuserid",{"_index":688,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["getuserid(auth0id",{"_index":707,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["getuseropsbysender",{"_index":2727,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{}}}],["getuseropsbysender(address",{"_index":2731,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{}}}],["getuseropsbysender(sender",{"_index":2751,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["getvalidatorfee",{"_index":2601,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getvalidators",{"_index":1512,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{}}}],["getvoltageclient",{"_index":2707,"title":{},"body":{"injectables/GraphService.html":{},"injectables/VoltBarService.html":{}}}],["getvoltbarclient",{"_index":2708,"title":{},"body":{"injectables/GraphService.html":{}}}],["getvoltbargraphclient",{"_index":4684,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getvoltbarinterface",{"_index":4688,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["getwallet",{"_index":2376,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["getwallet(smartwalletuser",{"_index":3954,"title":{},"body":{"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["getwallet(user",{"_index":3864,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["getwalletactions",{"_index":3893,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["getwalletactions(walletaddress",{"_index":3901,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["getwalletbalance",{"_index":583,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["getwalletbalance(address",{"_index":1314,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getwalletbalance(auth0id",{"_index":618,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["getwalletbalance(ownerid",{"_index":3428,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["getwalletbalance(userid",{"_index":3390,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["getwalletpaddedversion",{"_index":4014,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["getwalletphonenumber",{"_index":1333,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["getwallets",{"_index":2901,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["getwalletversion",{"_index":4012,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["getwebhook",{"_index":3033,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getwebhook(webhookid",{"_index":3047,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getwfuseaddress",{"_index":2599,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["getwsurl",{"_index":4075,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["given",{"_index":374,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"controllers/UsersController.html":{}}}],["graph",{"_index":5133,"title":{},"body":{"modules.html":{}}}],["graphapiurl",{"_index":2696,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["graphql",{"_index":2716,"title":{},"body":{"injectables/GraphService.html":{},"controllers/GraphqlController.html":{},"dependencies.html":{}}}],["graphqlapicontroller",{"_index":2723,"title":{"controllers/GraphqlAPIController.html":{}},"body":{"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{}}}],["graphqlapimodule",{"_index":1421,"title":{"modules/GraphqlAPIModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/GraphqlAPIModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlapiservice",{"_index":2734,"title":{"injectables/GraphqlAPIService.html":{}},"body":{"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"overview.html":{}}}],["graphqlclient",{"_index":2711,"title":{},"body":{"injectables/GraphService.html":{}}}],["graphqlclient(this.configservice.get('blockgraphurl",{"_index":2720,"title":{},"body":{"injectables/GraphService.html":{}}}],["graphqlclient(this.configservice.get('voltagegraphurl",{"_index":2722,"title":{},"body":{"injectables/GraphService.html":{}}}],["graphqlclient(this.configservice.get('voltbargraphurl",{"_index":2718,"title":{},"body":{"injectables/GraphService.html":{}}}],["graphqlcontroller",{"_index":2747,"title":{"controllers/GraphqlController.html":{}},"body":{"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{}}}],["graphqlmodule",{"_index":1468,"title":{"modules/GraphqlModule.html":{}},"body":{"modules/ChargeNetworkServiceModule.html":{},"modules/GraphqlModule.html":{},"modules.html":{},"overview.html":{}}}],["graphqlservice",{"_index":2690,"title":{"injectables/GraphQLService.html":{}},"body":{"injectables/GraphQLService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"overview.html":{}}}],["graphservice",{"_index":2701,"title":{"injectables/GraphService.html":{}},"body":{"injectables/GraphService.html":{},"modules/StakingModule.html":{},"injectables/VoltBarService.html":{},"overview.html":{}}}],["guard",{"_index":2786,"title":{"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{}},"body":{}}],["guardianmanager",{"_index":2410,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["guards",{"_index":2788,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"overview.html":{}}}],["handle",{"_index":100,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAPIService.html":{}}}],["handlebatchexecution",{"_index":4126,"title":{},"body":{"classes/StakeTokens.html":{}}}],["handlebatchexecution(parseduserop",{"_index":4136,"title":{},"body":{"classes/StakeTokens.html":{}}}],["handlereceivewalletaction",{"_index":3758,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["handlereceivewalletaction(walletaction",{"_index":3766,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["handlesingleexecution",{"_index":4127,"title":{},"body":{"classes/StakeTokens.html":{}}}],["handlesingleexecution(parseduserop",{"_index":4138,"title":{},"body":{"classes/StakeTokens.html":{}}}],["handletokentransferwebhook",{"_index":1670,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["handletokentransferwebhook(tokentransferwebhookdto",{"_index":1681,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["handleuseropandwalletactionofoperatortosendanalyticsevent",{"_index":1741,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["handleuseropandwalletactionofoperatortosendanalyticsevent(body",{"_index":1763,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["handlewebhook",{"_index":2120,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["handlewebhook(webhookevent",{"_index":2138,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["handlewebhookreceiveandfundpaymaster",{"_index":3078,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["handlewebhookreceiveandfundpaymaster(webhookevent",{"_index":3101,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["handling",{"_index":1859,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["has(eventdata",{"_index":4059,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["has(response",{"_index":3276,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["has(sent",{"_index":1879,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["hasapi",{"_index":227,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["hasargumentnames",{"_index":11,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["hash",{"_index":1852,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"classes/SmartWalletsAuthDto.html":{}}}],["hashforestimateuseropgascall",{"_index":3238,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["hashmessage",{"_index":3827,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["hdnode",{"_index":952,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["hdnode.derivepath(\"m/44'/60'/0'/0",{"_index":977,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["hdnode.frommnemonic(this.getmnemonic",{"_index":970,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["head",{"_index":3108,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["head('/eoaaddress/:address",{"_index":3080,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["headers",{"_index":1288,"title":{},"body":{"modules/ChargeApiModule.html":{},"modules/EthereumPaymentsModule.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/WebhookSendService.html":{}}}],["healthcheck",{"_index":172,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{}}}],["hello",{"_index":1450,"title":{},"body":{"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{}}}],["helmet",{"_index":4989,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":60,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["hex",{"_index":2479,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["hex_signature",{"_index":2292,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["hexadecimal",{"_index":1013,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["hexconcat",{"_index":3218,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["hexschema",{"_index":2295,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["hexschema.safeparse(chunk).success",{"_index":2328,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["hexsig",{"_index":2335,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["hexsigtype",{"_index":2306,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"miscellaneous/typealiases.html":{}}}],["hexstr.slice(2)).join",{"_index":2495,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["historical",{"_index":4098,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["historical_txs",{"_index":3909,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["histories",{"_index":4733,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["histories[index",{"_index":4736,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["history",{"_index":4740,"title":{},"body":{"injectables/VoltBarService.html":{},"index.html":{}}}],["history.balance",{"_index":4734,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["history.totalvoltstaked",{"_index":4735,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["home",{"_index":4299,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["hood",{"_index":53,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["host",{"_index":241,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["host.gettype",{"_index":288,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":266,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http",{"_index":251,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter",{"_index":259,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":287,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(response",{"_index":293,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":236,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":245,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["httpexception('application",{"_index":733,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["httpexception('userop",{"_index":1238,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["httpexception(`payment",{"_index":2197,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["httpexception(err.message",{"_index":3850,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["httpexception(error.message",{"_index":4100,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["httpmodule",{"_index":1065,"title":{},"body":{"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["httpmodule.registerasync",{"_index":1287,"title":{},"body":{"modules/ChargeApiModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["httpproxy",{"_index":3624,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["httpproxy(requestconfig",{"_index":3629,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["httpproxyget",{"_index":891,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["httpproxyget(url",{"_index":915,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["httpproxypatch",{"_index":892,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["httpproxypatch(url",{"_index":918,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["httpproxypost",{"_index":893,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["httpproxypost(url",{"_index":921,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["https://api.fuse.io",{"_index":2425,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["https://www.4byte.directory/api/v1/${hexsigtype}/?hex_signature",{"_index":2347,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["httpservice",{"_index":902,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{}}}],["httpstatus",{"_index":246,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppStoreService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["httpstatus.bad_request",{"_index":276,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["httpstatus.internal_server_error",{"_index":272,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{}}}],["httpstatus.not_found",{"_index":734,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["id",{"_index":401,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/AuthController.html":{},"injectables/DataLayerService.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["idandenv",{"_index":3301,"title":{},"body":{"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{}}}],["idandenv.env",{"_index":3373,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["idandenv.projectid",{"_index":3372,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["identifier",{"_index":1037,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["idx",{"_index":161,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["ierc20transfer",{"_index":2053,"title":{},"body":{"classes/ERC20Transfer.html":{}}}],["iface",{"_index":47,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["iface.decodeeventlog",{"_index":134,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["iface.decodefunctiondata(frag.name",{"_index":1919,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["iface.encodefunctiondata(frag.name",{"_index":1921,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["iface.encodefunctiondata(methodname",{"_index":2516,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["iface.events",{"_index":108,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["iface.events[name",{"_index":133,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["iface.fragments",{"_index":1917,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["iface.getevent(name",{"_index":110,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["iface.geteventtopic(name",{"_index":109,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["iface.getsighash(fragment",{"_index":1930,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["iface.parselog(eventprops",{"_index":50,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["ifaces",{"_index":2314,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["ifaces.length",{"_index":2319,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["ifaces.push(parsed",{"_index":2353,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["ifaces[0].fragments[0",{"_index":2320,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["ignore",{"_index":1922,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["image",{"_index":2778,"title":{},"body":{"interfaces/IValidator.html":{}}}],["implement",{"_index":3358,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["implements",{"_index":232,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/VoltBarService.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["imports",{"_index":201,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{}}}],["including",{"_index":5075,"title":{},"body":{"index.html":{}}}],["incoming",{"_index":1846,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/PaymentsService.html":{},"injectables/WebhooksService.html":{}}}],["incorrect",{"_index":87,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["increases",{"_index":1016,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":4373,"title":{},"body":{"interfaces/TokenInfoCache.html":{}}}],["indexed",{"_index":86,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["indexedargscount",{"_index":102,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["indexing",{"_index":95,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["indicates",{"_index":1045,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["indicating",{"_index":4914,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["information",{"_index":96,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"index.html":{}}}],["inherited",{"_index":777,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"injectables/EventsScannerService.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["init",{"_index":313,"title":{},"body":{"injectables/AnalyticsService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["init(this.configservice.getorthrow('amplitudeapikey",{"_index":318,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["initcode",{"_index":1004,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["inject",{"_index":497,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"injectables/ConsensusApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/GraphqlAPIService.html":{},"injectables/NotificationsService.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"injectables/StakingAPIService.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UsersService.html":{},"injectables/WebhooksService.html":{}}}],["inject(accountsservice",{"_index":1795,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["inject(apikeymodelstring",{"_index":507,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["inject(apiservice",{"_index":1794,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ProjectsService.html":{}}}],["inject(applicationmodelstring",{"_index":728,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["inject(appstoreservice",{"_index":727,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["inject(backendwalletmodelstring",{"_index":1339,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["inject(cache_manager",{"_index":2002,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["inject(erc20logsfilterstring",{"_index":1999,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["inject(erc20scannerstatusservicestring",{"_index":1998,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["inject(ethereumbackendwalletmodelstring",{"_index":958,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["inject(ethereumpaymentaccountmodelstring",{"_index":2163,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["inject(ethereumpaymentlinkmodelstring",{"_index":2164,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["inject(networkservice",{"_index":1559,"title":{},"body":{"injectables/ConsensusApiService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/StakingAPIService.html":{}}}],["inject(notificationsservice",{"_index":3052,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["inject(paymasterinfomodelstring",{"_index":3351,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["inject(paymentaccountmodelstring",{"_index":3446,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["inject(paymentlinkmodelstring",{"_index":3447,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["inject(projectmodelstring",{"_index":3604,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["inject(relayaccountmodelstring",{"_index":3674,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["inject(relayservice",{"_index":3602,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["inject(smartcontractwalletstring",{"_index":3831,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["inject(smartwalletsservice",{"_index":1215,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["inject(smartwalletstring",{"_index":4018,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["inject(transactionsscannerstatusservicestring",{"_index":4466,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["inject(usermodelstring",{"_index":4655,"title":{},"body":{"injectables/UsersService.html":{}}}],["inject(useroplogsfilterstring",{"_index":4562,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["inject(useropscannerstatusservicestring",{"_index":4561,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["inject(useropstring",{"_index":1792,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["inject(walletactionstring",{"_index":1793,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["inject(webhookaddressmodelstring",{"_index":4888,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["inject(webhookeventmodelstring",{"_index":1113,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["inject(webhookmodelstring",{"_index":4887,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["injectable",{"_index":294,"title":{"injectables/AnalyticsService.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}},"body":{"injectables/AnalyticsService.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"injectables/GraphqlAPIService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["injectables",{"_index":296,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{},"overview.html":{}}}],["injectcontractprovider",{"_index":1984,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["injectcontractprovider('regular",{"_index":2001,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["injectethersprovider",{"_index":1983,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/PaymasterApiService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["injectethersprovider('full",{"_index":4467,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["injectethersprovider('fuse",{"_index":3221,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["injectethersprovider('fusespark",{"_index":3222,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["injectethersprovider('regular",{"_index":2000,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/TokenService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["input",{"_index":114,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["input.arraychildren",{"_index":116,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["input.arraylength",{"_index":122,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["input.basetype",{"_index":124,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["input.components",{"_index":118,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["input.name",{"_index":119,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["input.type",{"_index":120,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["inputarr",{"_index":2487,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["inputs",{"_index":127,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["inputs.map((input",{"_index":160,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["inputscombinations",{"_index":111,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["inserted",{"_index":4912,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["install_upgrade",{"_index":3911,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["installation",{"_index":5101,"title":{},"body":{"index.html":{}}}],["installenvironment",{"_index":5104,"title":{},"body":{"index.html":{}}}],["installupgrade",{"_index":3894,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["instanceof",{"_index":270,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BroadcasterService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["instead",{"_index":4656,"title":{},"body":{"injectables/UsersService.html":{}}}],["interaction",{"_index":3133,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["intercept",{"_index":1187,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["intercept(context",{"_index":1193,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"interfaces/BaseUserOp.html":{},"interfaces/CreateSecretDto.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"interfaces/LogFilter.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"interfaces/BaseUserOp.html":{},"interfaces/CreateSecretDto.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/LogFilter.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}}}],["interface([abi",{"_index":2515,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["interface(liquidstakingabi",{"_index":2625,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["interface(voltbarabi",{"_index":4704,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"interfaces/BaseUserOp.html":{},"interfaces/CreateSecretDto.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"overview.html":{}}}],["interfaces.ts",{"_index":2056,"title":{},"body":{"interfaces/ERC721Transfer.html":{},"interfaces/Token-1.html":{}}}],["interfaces/logs",{"_index":2262,"title":{},"body":{"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["internal",{"_index":145,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UsersService.html":{}}}],["internally",{"_index":4307,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["internalservererrorexception",{"_index":1206,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{}}}],["internalservererrorexception('bundler",{"_index":1259,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["internalservererrorexception('error",{"_index":3280,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["internalservererrorexception('paymaster",{"_index":3354,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["internalservererrorexception(`${capitalize(environment",{"_index":1264,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["internalservererrorexception(err.message",{"_index":3370,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["invalid",{"_index":2464,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["isaccountownerguard",{"_index":2787,"title":{"guards/IsAccountOwnerGuard.html":{}},"body":{"guards/IsAccountOwnerGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["isaccountownerguard)@post('/questionnaire/:id",{"_index":4622,"title":{},"body":{"controllers/UsersController.html":{}}}],["isactivated",{"_index":226,"title":{},"body":{"interfaces/ActivatedApp.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"classes/CreateOperatorWalletDto.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{}}}],["isactive",{"_index":3319,"title":{},"body":{"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{}}}],["isapikeyprojectmatchguard",{"_index":2800,"title":{"guards/IsApiKeyProjectMatchGuard.html":{}},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{}}}],["isappavailable",{"_index":689,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["isappavailable(appname",{"_index":710,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["isboolean",{"_index":1640,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["iscontractdeployed",{"_index":3743,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["iscreatorownerguard",{"_index":2818,"title":{"guards/IsCreatorOwnerGuard.html":{}},"body":{"guards/IsCreatorOwnerGuard.html":{},"controllers/ProjectsController.html":{}}}],["iscreatorownerguard)@post",{"_index":3505,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isemail",{"_index":1628,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{}}}],["isempty",{"_index":505,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/ExplorerApiInterceptor.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymentsService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/WebhooksService.html":{}}}],["isempty(apikey",{"_index":2828,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{}}}],["isempty(backendwallet",{"_index":2207,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["isempty(body",{"_index":1256,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["isempty(body?.communityaddress",{"_index":2926,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["isempty(createpaymentlinkdto.ownerid",{"_index":3451,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isempty(createpaymentlinkethereumdto.ownerid",{"_index":2183,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["isempty(environment",{"_index":1258,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["isempty(eventtype",{"_index":4945,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["isempty(ownerid",{"_index":572,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["isempty(paymasterinfo",{"_index":3233,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["isempty(paymentlink",{"_index":2196,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["isempty(projectapikey",{"_index":2817,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["isempty(projectid",{"_index":544,"title":{},"body":{"injectables/ApiKeysService.html":{},"guards/IsApiKeyProjectMatchGuard.html":{}}}],["isempty(query",{"_index":2283,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["isempty(query?.apikey",{"_index":2826,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["isempty(result",{"_index":4893,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["isempty(token.balance",{"_index":1386,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["isempty(token.verified",{"_index":1388,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["isempty(transfertokensdto.from",{"_index":3464,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isempty(watcherjson.webhookid",{"_index":4926,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["isempty(webhook",{"_index":2812,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["isempty(webhookurl",{"_index":4944,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["isethereumaddress",{"_index":870,"title":{},"body":{"classes/AuthOperatorDto.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/DelegatedAmountsDto.html":{},"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{}}}],["isethereumaddress({each",{"_index":1655,"title":{},"body":{"classes/CreateWebhookAddressesDto.html":{},"classes/DelegatedAmountsDto.html":{}}}],["isglobal",{"_index":215,"title":{},"body":{"modules/AccountsModule.html":{}}}],["isin",{"_index":1665,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["isin(object.values(eventtypes",{"_index":1667,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["isint",{"_index":3698,"title":{},"body":{"classes/RelayDto.html":{}}}],["isinternaltransaction",{"_index":2030,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{}}}],["isjailed",{"_index":2779,"title":{},"body":{"interfaces/IValidator.html":{}}}],["ismartwalletuser",{"_index":2770,"title":{"interfaces/ISmartWalletUser.html":{}},"body":{"interfaces/ISmartWalletUser.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["isnan(errorstatus",{"_index":1140,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["isnan(parseint(key",{"_index":152,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["isnil",{"_index":1210,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{}}}],["isnil(existinguserop",{"_index":1821,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["isnil(userop.userophash",{"_index":1236,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["isnotemptyobject",{"_index":4319,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isnumber",{"_index":1606,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["isobject",{"_index":3699,"title":{},"body":{"classes/RelayDto.html":{},"classes/SubmitQuestionnaireDto.html":{}}}],["isobject()@isnotemptyobject",{"_index":4317,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["isoptional",{"_index":1617,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["isoptional()@isboolean",{"_index":1636,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["isoptional()@isethereumaddress",{"_index":3691,"title":{},"body":{"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["isoptional()@isint",{"_index":3685,"title":{},"body":{"classes/RelayDto.html":{}}}],["isoptional()@isobject",{"_index":3694,"title":{},"body":{"classes/RelayDto.html":{}}}],["isoptional()@isstring",{"_index":1626,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["ispending",{"_index":2780,"title":{},"body":{"interfaces/IValidator.html":{}}}],["isprdorsbxkeyguard",{"_index":1179,"title":{"guards/IsPrdOrSbxKeyGuard.html":{}},"body":{"controllers/BundlerApiController.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"controllers/PaymasterApiController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["isprdorsbxkeyguard)@get('actions",{"_index":3919,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["isprojectownerguard",{"_index":2831,"title":{"guards/IsProjectOwnerGuard.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get('/apikeysinfo/:projectid",{"_index":3524,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get('/paymaster/:sponsorid",{"_index":3528,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get('/public/:projectid",{"_index":3530,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get('/sandbox/:projectid",{"_index":3534,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get('/secret/:projectid",{"_index":3501,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@get(':id",{"_index":3303,"title":{},"body":{"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@patch(':id",{"_index":3538,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@post('/sandbox/:projectid",{"_index":3507,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@post('/secret/:projectid",{"_index":3510,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isprojectownerguard)@post(':id",{"_index":3296,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["isprojectownerguard)@put('/secret/:projectid",{"_index":3541,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isrelevantevent",{"_index":1076,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["isrelevantevent(tokentype",{"_index":1093,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["isrequestedallowedtoken",{"_index":2121,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["isrequestedallowedtoken(createpaymentlinkdto",{"_index":3431,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["isrequestedallowedtoken(createpaymentlinkethereumdto",{"_index":2140,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["isstring",{"_index":446,"title":{},"body":{"classes/ApiKeysDto.html":{},"classes/AuthOperatorDto.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UpdateWebhookDto.html":{}}}],["isstring()@isin(undefined",{"_index":1660,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["isstring()@isoptional",{"_index":1608,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["issuer",{"_index":2888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["istokenaddressallowed",{"_index":2171,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["istokenmatch",{"_index":2122,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["istokenmatch(paymentlink",{"_index":2142,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["istokensymbolallowed",{"_index":2175,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["isurl",{"_index":1618,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateWebhookDto.html":{}}}],["isurl()@isoptional",{"_index":1615,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["isurl({require_tld",{"_index":1663,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["isvalidapikeysguard",{"_index":2092,"title":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}},"body":{"controllers/EthereumPaymentsController.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{}}}],["isvalidpublicapikeyguard",{"_index":2271,"title":{"guards/IsValidPublicApiKeyGuard.html":{}},"body":{"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["it's",{"_index":97,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["items",{"_index":4610,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["ivalidator",{"_index":2772,"title":{"interfaces/IValidator.html":{}},"body":{"interfaces/IValidator.html":{}}}],["jobdata",{"_index":1313,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobdata._id",{"_index":1351,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobdata?._id",{"_index":1402,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobdata?.data?.failreason",{"_index":1373,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobdata?.data?.status",{"_index":1369,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobdata?.data?.walletaddress",{"_index":1349,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["jobid",{"_index":879,"title":{},"body":{"interfaces/BackendWallet.html":{},"injectables/ChargeApiService.html":{}}}],["jobs",{"_index":2945,"title":{},"body":{"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{}}}],["js",{"_index":4295,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{},"dependencies.html":{}}}],["js/aes",{"_index":3670,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["json",{"_index":3153,"title":{},"body":{"controllers/PaymasterApiController.html":{},"dependencies.html":{}}}],["json.stringify(axiosresponse.data",{"_index":1223,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["json.stringify(data",{"_index":2562,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["json.stringify(e",{"_index":1228,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["json.stringify(err",{"_index":1148,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["json.stringify(error",{"_index":3260,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["json.stringify(errorreason",{"_index":4806,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["json.stringify(eventdata",{"_index":4041,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["json.stringify(op",{"_index":3225,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["json.stringify(postbody",{"_index":4805,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["json.stringify(response",{"_index":3258,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["json.stringify(result",{"_index":3285,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["json.stringify(tokentransferwebhookdto",{"_index":3933,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["json.stringify(userop",{"_index":1235,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["jsonrpc",{"_index":3148,"title":{},"body":{"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{}}}],["jsonrpc(req",{"_index":3149,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["jsonrpcprovider",{"_index":2580,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/PaymasterApiService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["jsonrpcrequest",{"_index":3163,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["jsonrpcresponse",{"_index":3173,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["jsonrpcserver",{"_index":3152,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["jwks",{"_index":2874,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":2879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwksuri",{"_index":2881,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt",{"_index":861,"title":{},"body":{"modules/AuthModule.html":{},"classes/FuseLegacySDK.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"classes/LegacyEventEmitter.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsLegacyService.html":{},"dependencies.html":{}}}],["jwt.module",{"_index":357,"title":{},"body":{"modules/ApiKeyModule.html":{}}}],["jwt.module.ts",{"_index":4282,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{}}}],["jwt.service",{"_index":504,"title":{},"body":{"injectables/ApiKeysService.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["jwt.service.ts",{"_index":4284,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["jwt.service.ts:10",{"_index":4289,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["jwt.service.ts:50",{"_index":4292,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["jwt.service.ts:7",{"_index":4287,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["jwt.strategy",{"_index":3143,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["jwt.strategy.ts",{"_index":3064,"title":{},"body":{"injectables/OperatorJwtStrategy.html":{}}}],["jwt.strategy.ts:18",{"_index":3066,"title":{},"body":{"injectables/OperatorJwtStrategy.html":{}}}],["jwt.strategy.ts:8",{"_index":3065,"title":{},"body":{"injectables/OperatorJwtStrategy.html":{}}}],["jwt/studio",{"_index":356,"title":{},"body":{"modules/ApiKeyModule.html":{},"injectables/ApiKeysService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["jwtauthguard",{"_index":635,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["jwtdecode",{"_index":2407,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["jwtdecode(this._smartwalletsjwt",{"_index":2468,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["jwtfromrequest",{"_index":2884,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["jwtmodule",{"_index":857,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["jwtmodule.registerasync",{"_index":862,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["jwtsecret",{"_index":864,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["jwtservice",{"_index":3816,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["jwtstrategy",{"_index":851,"title":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"modules/SmartWalletsAPIModule.html":{},"overview.html":{}}}],["key",{"_index":149,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"interfaces/BaseUserOp.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"interfaces/UserOp.html":{},"injectables/WebhooksService.html":{}}}],["key.dto",{"_index":417,"title":{},"body":{"controllers/ApiKeysController.html":{},"injectables/ProjectsService.html":{}}}],["key.dto.ts",{"_index":1650,"title":{},"body":{"interfaces/CreateSecretDto.html":{}}}],["key.guard",{"_index":1182,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/PaymasterApiController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["key.guard.ts",{"_index":2823,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["key.guard.ts:6",{"_index":2824,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["key.guard.ts:9",{"_index":2825,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["key.interface.ts",{"_index":3493,"title":{},"body":{"interfaces/PrdOrSbxKeyRequest.html":{}}}],["keyby",{"_index":722,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{}}}],["keyby(paymentsallowedtokens",{"_index":1383,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["keyby(this.availableapps",{"_index":746,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["keys",{"_index":429,"title":{},"body":{"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/ProjectsController.html":{}}}],["keys.constants",{"_index":499,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["keys.controller",{"_index":350,"title":{},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{}}}],["keys.controller.ts",{"_index":360,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:16",{"_index":393,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:26",{"_index":371,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:36",{"_index":400,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:46",{"_index":410,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:56",{"_index":382,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["keys.controller.ts:66",{"_index":404,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["keys.controller.ts:76",{"_index":388,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["keys.controller.ts:81",{"_index":407,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["keys.dto",{"_index":438,"title":{},"body":{"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{}}}],["keys.dto.ts",{"_index":445,"title":{},"body":{"classes/ApiKeysDto.html":{}}}],["keys.dto.ts:5",{"_index":448,"title":{},"body":{"classes/ApiKeysDto.html":{}}}],["keys.dto.ts:8",{"_index":447,"title":{},"body":{"classes/ApiKeysDto.html":{}}}],["keys.guard",{"_index":2094,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{}}}],["keys.guard.ts",{"_index":2840,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["keys.guard.ts:5",{"_index":2841,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{}}}],["keys.guard.ts:6",{"_index":2848,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["keys.guard.ts:8",{"_index":2842,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{}}}],["keys.guard.ts:9",{"_index":2849,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["keys.interface",{"_index":325,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["keys.module",{"_index":1270,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["keys.module.ts",{"_index":345,"title":{},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{}}}],["keys.providers",{"_index":353,"title":{},"body":{"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{}}}],["keys.service",{"_index":351,"title":{},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["keys.service.ts",{"_index":455,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:107",{"_index":475,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:121",{"_index":563,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:13",{"_index":470,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:132",{"_index":561,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:134",{"_index":494,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:143",{"_index":558,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:144",{"_index":490,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:148",{"_index":559,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:150",{"_index":496,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:174",{"_index":488,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:185",{"_index":486,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:19",{"_index":555,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:194",{"_index":482,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:199",{"_index":484,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:20",{"_index":473,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:45",{"_index":492,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:47",{"_index":565,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:55",{"_index":480,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["keys.service.ts:59",{"_index":478,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:63",{"_index":557,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys.service.ts:95",{"_index":567,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["keys/:appname",{"_index":609,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["keys/api",{"_index":344,"title":{},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymentsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["keys/dto/api",{"_index":437,"title":{},"body":{"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{}}}],["keys/dto/secret",{"_index":416,"title":{},"body":{"controllers/ApiKeysController.html":{},"interfaces/CreateSecretDto.html":{},"injectables/ProjectsService.html":{}}}],["keys/guards/is",{"_index":1180,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymentsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["keys/interfaces/api",{"_index":324,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["know",{"_index":83,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["known/jwks.json",{"_index":2883,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["last",{"_index":4141,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["last(parseduserop.targetfunctions",{"_index":4150,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["last(path",{"_index":4339,"title":{},"body":{"classes/SwapTokens.html":{}}}],["lastcalldata",{"_index":4149,"title":{},"body":{"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["lastcalldata.name",{"_index":4151,"title":{},"body":{"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["lastcalldata.targetaddress",{"_index":4540,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["lastname",{"_index":1625,"title":{},"body":{"classes/CreateOperatorUserDto.html":{}}}],["lastvaluefrom",{"_index":956,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/GraphQLService.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{}}}],["lastvaluefrom(observable",{"_index":2700,"title":{},"body":{"injectables/GraphQLService.html":{},"injectables/RelayAPIService.html":{},"injectables/TradeService.html":{}}}],["lastvaluefrom(this.httpservice",{"_index":4803,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["lastwallet",{"_index":971,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["lastwallet?.childindex",{"_index":975,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["latesttimestamp",{"_index":4720,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["launch.json",{"_index":5122,"title":{},"body":{"index.html":{}}}],["layer.constants",{"_index":1774,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.controller",{"_index":1715,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["layer.controller.ts",{"_index":1669,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.controller.ts:12",{"_index":1675,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.controller.ts:17",{"_index":1693,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.controller.ts:22",{"_index":1680,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.controller.ts:27",{"_index":1685,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.controller.ts:34",{"_index":1690,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["layer.module",{"_index":1506,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{}}}],["layer.module.ts",{"_index":1714,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["layer.providers",{"_index":1717,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["layer.service",{"_index":1695,"title":{},"body":{"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{}}}],["layer.service.ts",{"_index":1736,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:104",{"_index":1753,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:114",{"_index":1770,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:127",{"_index":1762,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:187",{"_index":1760,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:229",{"_index":1755,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:233",{"_index":1764,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:265",{"_index":1757,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:27",{"_index":1750,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:43",{"_index":1766,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer.service.ts:72",{"_index":1768,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["layer/config/config",{"_index":1718,"title":{},"body":{"modules/DataLayerModule.html":{}}}],["layer/data",{"_index":1505,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{}}}],["layer/interfaces/token",{"_index":807,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{}}}],["layer/interfaces/user",{"_index":1001,"title":{},"body":{"interfaces/BaseUserOp.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{}}}],["layer/interfaces/wallet",{"_index":1784,"title":{},"body":{"injectables/DataLayerService.html":{},"interfaces/WalletActionInterface.html":{}}}],["layer/models/wallet",{"_index":765,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["layer/schemas/wallet",{"_index":1776,"title":{},"body":{"injectables/DataLayerService.html":{},"interfaces/WalletActionDocument.html":{}}}],["lean",{"_index":1843,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["leave",{"_index":4541,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["legacy",{"_index":355,"title":{},"body":{"modules/ApiKeyModule.html":{},"injectables/ApiKeysService.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/TransferToken.html":{}}}],["legacy.service",{"_index":3962,"title":{},"body":{"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{}}}],["legacy.service.ts",{"_index":4063,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:100",{"_index":4067,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:129",{"_index":4072,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:148",{"_index":4069,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:162",{"_index":4068,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:166",{"_index":4071,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:17",{"_index":4065,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:28",{"_index":4074,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:32",{"_index":4076,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:36",{"_index":4066,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacy.service.ts:59",{"_index":4070,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["legacyadminapicontroller",{"_index":2897,"title":{"controllers/LegacyAdminApiController.html":{}},"body":{"controllers/LegacyAdminApiController.html":{},"modules/LegacyApiModule.html":{}}}],["legacyapiinterceptor",{"_index":2906,"title":{"injectables/LegacyApiInterceptor.html":{}},"body":{"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["legacyapimodule",{"_index":1422,"title":{"modules/LegacyApiModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/LegacyApiModule.html":{},"modules.html":{},"overview.html":{}}}],["legacybackendaccount",{"_index":328,"title":{},"body":{"interfaces/ApiKey.html":{},"injectables/ApiKeysService.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["legacyeventemitter",{"_index":2396,"title":{"classes/LegacyEventEmitter.html":{}},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["legacyjobsapicontroller",{"_index":2942,"title":{"controllers/LegacyJobsApiController.html":{}},"body":{"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{}}}],["legacyjwt",{"_index":4302,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["legacyservice",{"_index":3964,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["legacytradeapicontroller",{"_index":2943,"title":{"controllers/LegacyTradeApiController.html":{}},"body":{"modules/LegacyApiModule.html":{},"controllers/LegacyTradeApiController.html":{}}}],["legacywalletapicontroller",{"_index":2941,"title":{"controllers/LegacyWalletApiController.html":{}},"body":{"modules/LegacyApiModule.html":{},"controllers/LegacyWalletApiController.html":{}}}],["legend",{"_index":185,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["libs/.../decodebysighash.ts",{"_index":5148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../decodeevent.ts",{"_index":5149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/common/src/database/database.module.ts",{"_index":1906,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["libs/common/src/exceptions/all",{"_index":230,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["libs/common/src/interfaces/smart",{"_index":2771,"title":{},"body":{"interfaces/ISmartWalletUser.html":{}}}],["libs/common/src/services/analytics.service.ts",{"_index":297,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["libs/common/src/services/analytics.service.ts:15",{"_index":308,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["libs/common/src/services/analytics.service.ts:7",{"_index":302,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["libs/common/src/services/gas.service.ts",{"_index":2673,"title":{},"body":{"injectables/GasService.html":{}}}],["libs/common/src/services/gas.service.ts:6",{"_index":2679,"title":{},"body":{"injectables/GasService.html":{}}}],["libs/common/src/services/gas.service.ts:8",{"_index":2676,"title":{},"body":{"injectables/GasService.html":{}}}],["libs/common/src/services/graphql.service.ts",{"_index":2691,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["libs/common/src/services/graphql.service.ts:11",{"_index":2695,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["libs/common/src/services/graphql.service.ts:6",{"_index":2693,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["libs/common/src/services/trade.service.ts",{"_index":4435,"title":{},"body":{"injectables/TradeService.html":{}}}],["libs/common/src/services/trade.service.ts:13",{"_index":4439,"title":{},"body":{"injectables/TradeService.html":{}}}],["libs/common/src/services/trade.service.ts:7",{"_index":4437,"title":{},"body":{"injectables/TradeService.html":{}}}],["libs/common/src/services/user",{"_index":4577,"title":{},"body":{"injectables/UserOpParser.html":{}}}],["libs/common/src/services/webhook",{"_index":4790,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["libs/common/src/utils/dtools/decodebysighash.ts",{"_index":2289,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"miscellaneous/typealiases.html":{}}}],["libs/common/src/utils/dtools/decodecalldata.ts",{"_index":1910,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["libs/common/src/utils/dtools/decodeevent.ts",{"_index":6,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"miscellaneous/typealiases.html":{}}}],["license",{"_index":5141,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":1759,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["link",{"_index":596,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["link.dto",{"_index":641,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["link.dto.ts",{"_index":1601,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:12",{"_index":1610,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:15",{"_index":1607,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:18",{"_index":1613,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:21",{"_index":1614,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:25",{"_index":1609,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:29",{"_index":1616,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:33",{"_index":1643,"title":{},"body":{"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:6",{"_index":1611,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.dto.ts:9",{"_index":1612,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{}}}],["link.interface",{"_index":2156,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["link.interface.ts",{"_index":2060,"title":{},"body":{"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{}}}],["link.schema",{"_index":2161,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["link.schema.ts",{"_index":5016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["links",{"_index":615,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["liquid",{"_index":2566,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{}}}],["liquid_staking_contract_address",{"_index":4142,"title":{},"body":{"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["liquidstakingabi",{"_index":2605,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["liquidstakingcontract",{"_index":2632,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["liquidstakingcontract.priceratio",{"_index":2638,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["liquidstakingcontract.systemtotalstaked",{"_index":2670,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["liquidstakinginterface",{"_index":2578,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["list",{"_index":604,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/PaymasterController.html":{}}}],["literal",{"_index":1303,"title":{},"body":{"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"interfaces/IValidator.html":{},"classes/TokenReceive.html":{},"interfaces/WalletActionInterface.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":4115,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["lockmanager",{"_index":2411,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["lodash",{"_index":506,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/ExplorerApiInterceptor.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsEventsService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"classes/SwapTokens.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{}}}],["log",{"_index":1966,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["log.blockhash",{"_index":2027,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["log.blocknumber",{"_index":2025,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["logfilter",{"_index":1947,"title":{"interfaces/LogFilter.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"interfaces/LogFilter.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["logger",{"_index":25,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymentsService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["logger(analyticsservice.name",{"_index":312,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["logger(backendwalletsethereumservice.name",{"_index":923,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["logger(broadcasterservice.name",{"_index":1099,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["logger(bundlerapiinterceptor.name",{"_index":1204,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["logger(chargeapiservice.name",{"_index":1322,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["logger(datalayerservice.name",{"_index":1771,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["logger(erc20eventsscannerservice.name",{"_index":2004,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["logger(ethereumpaymentsservice.name",{"_index":2146,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["logger(fuseliquidstakingservice.name",{"_index":2591,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["logger(gasservice.name",{"_index":2678,"title":{},"body":{"injectables/GasService.html":{}}}],["logger(legacyapiinterceptor.name",{"_index":2912,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["logger(operatorscontroller.name",{"_index":3116,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["logger(paymasterapiservice.name",{"_index":3215,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["logger(paymentsservice.name",{"_index":3435,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["logger(smartwalletsaaeventsservice.name",{"_index":3777,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["logger(smartwalletsaaservice.name",{"_index":3825,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["logger(smartwalletsapiservice.name",{"_index":3905,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["logger(smartwalletsapiv2controller.name",{"_index":3926,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["logger(smartwalletseventsservice.name",{"_index":4009,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["logger(smartwalletslegacyservice.name",{"_index":4073,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["logger(stakingservice.name",{"_index":4248,"title":{},"body":{"injectables/StakingService.html":{}}}],["logger(transactionsscannerservice.name",{"_index":4468,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["logger(useropeventsscannerservice.name",{"_index":4563,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["logger(version",{"_index":31,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["logger(voltbarservice.name",{"_index":4680,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["logger(webhooksendservice.name",{"_index":4797,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["logger(webhooksservice.name",{"_index":4878,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["logger.throwargumenterror('no",{"_index":144,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["logperformance",{"_index":1974,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["logperformance('erc20eventsscannerservice::gettokeninfo",{"_index":1957,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["logperformance('erc20eventsscannerservice::processblocks",{"_index":1961,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["logperformance('erc20eventsscannerservice::processevent",{"_index":1967,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["logperformance('eventscanner::processblocks",{"_index":2258,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["logperformance('transactionsscanner::processblocks",{"_index":4454,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["logperformance('transactionsscanner::processtrace",{"_index":4460,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["logperformance('transactionsscanner::processtraces",{"_index":4457,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["logperformance('useropeventsscannerservice::processblocks",{"_index":4553,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["logperformance('useropeventsscannerservice::processevent",{"_index":4555,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["logs",{"_index":838,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["logsfilter",{"_index":1946,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["lowercase",{"_index":4774,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["lowercaseaddress",{"_index":4918,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["lt",{"_index":1124,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["lte",{"_index":1122,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["made",{"_index":3932,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["main",{"_index":3487,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["make",{"_index":1165,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/PaymasterService.html":{},"injectables/WebhooksService.html":{},"index.html":{}}}],["making",{"_index":5083,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1530,"title":{},"body":{"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"dependencies.html":{}}}],["maor",{"_index":5144,"title":{},"body":{"properties.html":{}}}],["map",{"_index":957,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{}}}],["map((axiosresponse",{"_index":1220,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/WebhookSendService.html":{}}}],["map((history",{"_index":4732,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["map((response",{"_index":4301,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["match",{"_index":3848,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["matching",{"_index":77,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(parseint(gases.verificationgaslimit",{"_index":3249,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["max",{"_index":1546,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/EventsScannerModule.html":{}}}],["max_retry",{"_index":2332,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["maxblockstoprocess",{"_index":3714,"title":{},"body":{"classes/ScannerService.html":{}}}],["maxfeepergas",{"_index":1005,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["maximum",{"_index":1024,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["maxpriorityfeepergas",{"_index":1006,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["maxtimeintervalsms",{"_index":1080,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["merge",{"_index":721,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{}}}],["message",{"_index":290,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthOperatorDto.html":{},"injectables/BroadcasterService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/WebhooksService.html":{}}}],["messagedata",{"_index":3770,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["messagedata.eventdata",{"_index":3779,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["messagedata.name",{"_index":3788,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["messagepattern",{"_index":415,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"controllers/GraphqlController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"controllers/SmartWalletsController.html":{},"controllers/StakingController.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}}}],["messagepattern('auth",{"_index":3944,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('create_account",{"_index":3650,"title":{},"body":{"controllers/RelayAccountsController.html":{}}}],["messagepattern('create_addresses",{"_index":4813,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('create_payment_account",{"_index":3381,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('create_payment_link",{"_index":3402,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('create_public",{"_index":381,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["messagepattern('create_sandbox_key",{"_index":387,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["messagepattern('create_secret",{"_index":392,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["messagepattern('create_wallet",{"_index":3947,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('create_webhook",{"_index":4811,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('delegate",{"_index":1566,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["messagepattern('delegated_amounts",{"_index":1568,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["messagepattern('delete_addresses",{"_index":4817,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('delete_webhook",{"_index":4815,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('find",{"_index":3089,"title":{},"body":{"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["messagepattern('get",{"_index":1677,"title":{},"body":{"controllers/DataLayerController.html":{},"controllers/ProjectsController.html":{}}}],["messagepattern('get_address_watchers",{"_index":4841,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('get_addresses",{"_index":4821,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('get_all_webhooks",{"_index":4827,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('get_allowed_tokens",{"_index":3399,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('get_api_keys_info",{"_index":370,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["messagepattern('get_available_upgrades",{"_index":3950,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('get_collectibles_by_owner",{"_index":2749,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["messagepattern('get_paymaster_info",{"_index":3299,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["messagepattern('get_payment_links",{"_index":3405,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('get_project_id_by_public_key",{"_index":399,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["messagepattern('get_public",{"_index":403,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["messagepattern('get_sandbox_key",{"_index":406,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["messagepattern('get_userops_by_sender",{"_index":2752,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["messagepattern('get_validators",{"_index":1570,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["messagepattern('get_wallet",{"_index":3955,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('get_wallet_balance",{"_index":3409,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('get_webhook",{"_index":4819,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('handle",{"_index":1683,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["messagepattern('historical_txs",{"_index":3952,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('install_upgrade",{"_index":3957,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('record",{"_index":1674,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["messagepattern('relay",{"_index":3959,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["messagepattern('sponsored",{"_index":1687,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["messagepattern('stake",{"_index":4208,"title":{},"body":{"controllers/StakingController.html":{}}}],["messagepattern('staked_tokens",{"_index":4210,"title":{},"body":{"controllers/StakingController.html":{}}}],["messagepattern('staking_options",{"_index":4212,"title":{},"body":{"controllers/StakingController.html":{}}}],["messagepattern('transfer_tokens",{"_index":3393,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["messagepattern('unstake",{"_index":4214,"title":{},"body":{"controllers/StakingController.html":{}}}],["messagepattern('update",{"_index":1692,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["messagepattern('update_secret",{"_index":409,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{}}}],["messagepattern('update_webhook",{"_index":4829,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["messagepattern('withdraw",{"_index":1572,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["messagepayload",{"_index":2496,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["metadata",{"_index":611,"title":{},"body":{"controllers/AppStoreController.html":{},"dependencies.html":{}}}],["method",{"_index":261,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{}}}],["methodname",{"_index":2514,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{}}}],["methods",{"_index":171,"title":{},"body":{"controllers/AccountsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["microservice",{"_index":3132,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["milliseconds",{"_index":1545,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EventsScannerModule.html":{}}}],["minverificationgaslimit",{"_index":3231,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["miscellaneous",{"_index":5010,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":1260,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["mit",{"_index":5142,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":5126,"title":{},"body":{"index.html":{}}}],["model",{"_index":468,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/UsersService.html":{},"injectables/WebhooksService.html":{}}}],["module",{"_index":181,"title":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["modules",{"_index":183,"title":{"modules.html":{}},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":253,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["mongoose",{"_index":222,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{},"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"interfaces/RelayAccount.html":{},"injectables/RelayAccountsService.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"injectables/UsersService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{}}}],["mongoose.document",{"_index":4770,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["mongoose.schema",{"_index":4777,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["mongoservererror",{"_index":252,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["more",{"_index":2303,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["movingaverage",{"_index":4731,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["ms",{"_index":967,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["much",{"_index":1049,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["n${err",{"_index":2020,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["name",{"_index":107,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"interfaces/User.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["naming",{"_index":1164,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["native_fuse_address",{"_index":4463,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["native_fuse_token",{"_index":2961,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{}}}],["native_fuse_token.address",{"_index":4411,"title":{},"body":{"injectables/TokenService.html":{}}}],["native_fuse_token.name",{"_index":4412,"title":{},"body":{"injectables/TokenService.html":{}}}],["native_fuse_token.symbol",{"_index":4413,"title":{},"body":{"injectables/TokenService.html":{}}}],["native_token_type",{"_index":2960,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["nativetransfer",{"_index":2954,"title":{"classes/NativeTransfer.html":{}},"body":{"classes/NativeTransfer.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["necessary",{"_index":5112,"title":{},"body":{"index.html":{}}}],["need",{"_index":2304,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["needed",{"_index":2919,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{},"injectables/VoltBarService.html":{}}}],["nest",{"_index":5097,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1205,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["nestjs",{"_index":1338,"title":{},"body":{"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/StakingModule.html":{},"classes/SwapTokens.html":{},"injectables/TokenService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":954,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/BroadcasterModule.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"injectables/GraphQLService.html":{},"modules/GraphqlModule.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"modules/PaymentsModule.html":{},"injectables/RelayAPIService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":1529,"title":{},"body":{"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":178,"title":{},"body":{"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"injectables/ERC20EventsScannerService.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":209,"title":{},"body":{"modules/AccountsModule.html":{},"injectables/AnalyticsService.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"injectables/OperatorJwtStrategy.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":247,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":858,"title":{},"body":{"modules/AuthModule.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":4547,"title":{},"body":{"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":249,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"controllers/RelayAccountsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingController.html":{},"injectables/UserOpEventsScannerService.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":4964,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":854,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4967,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1586,"title":{},"body":{"modules/ConsensusModule.html":{},"dependencies.html":{}}}],["network",{"_index":1463,"title":{},"body":{"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"classes/DelegatedAmountsDto.html":{},"modules/EventsScannerModule.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/IValidator.html":{},"modules/PaymasterApiModule.html":{},"classes/RelayDto.html":{},"classes/StakeDto.html":{},"interfaces/StakedToken.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"modules/TransactionsScannerModule.html":{},"classes/UnstakeDto.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"index.html":{}}}],["networkclient",{"_index":1552,"title":{},"body":{"injectables/ConsensusApiService.html":{},"injectables/GraphqlAPIService.html":{}}}],["networkname",{"_index":1315,"title":{},"body":{"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{}}}],["networks",{"_index":2420,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["networkservice",{"_index":1540,"title":{},"body":{"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{}}}],["new",{"_index":30,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphService.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"interfaces/UserOp.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["newevent",{"_index":128,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["newevent.format(formattypes.full",{"_index":138,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["newevent.format(formattypes.sighash",{"_index":137,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["newindex",{"_index":974,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["newstatus",{"_index":3737,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["next",{"_index":1195,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"index.html":{}}}],["next.handle().pipe(map",{"_index":1247,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["nftdescgenerator",{"_index":4379,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftdescgenerator(nftinfo",{"_index":4389,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftgraphurl",{"_index":2759,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["nftinfo",{"_index":4391,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftinfo.from",{"_index":4396,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftinfo.symbol",{"_index":4394,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftinfo.tokenid",{"_index":4395,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nftreceive",{"_index":4401,"title":{},"body":{"classes/TokenReceive.html":{}}}],["nfttransfer",{"_index":2415,"title":{"classes/NftTransfer.html":{}},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NftTransfer.html":{}}}],["node",{"_index":317,"title":{},"body":{"injectables/AnalyticsService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/FuseLiquidStakingService.html":{},"modules/StakingModule.html":{},"injectables/TokenService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{},"dependencies.html":{}}}],["nonce",{"_index":1007,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/RelayAccount.html":{},"classes/RelayDto.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["nonpayable",{"_index":2442,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["noops",{"_index":65,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["not_paid",{"_index":5030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notification",{"_index":5087,"title":{},"body":{"index.html":{}}}],["notifications",{"_index":1060,"title":{},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"interfaces/LogFilter.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAService.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent-1.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["notificationsclient",{"_index":3037,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notificationscontroller",{"_index":2974,"title":{"controllers/NotificationsController.html":{}},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["notificationservice",{"_index":2802,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["notificationsmodule",{"_index":1423,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/NotificationsModule.html":{},"modules/SmartWalletsModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":2803,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/OperatorsModule.html":{},"overview.html":{}}}],["now",{"_index":2305,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["npm",{"_index":5103,"title":{},"body":{"index.html":{}}}],["null",{"_index":542,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/PaymentLink.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"injectables/WebhooksService.html":{}}}],["nullable",{"_index":4775,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["number",{"_index":85,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/ApproveToken.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"interfaces/IValidator.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/PaymasterApiService.html":{},"interfaces/PaymentLink.html":{},"interfaces/RelayAccount.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}}}],["number(amount",{"_index":1885,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["number(blocksperyear",{"_index":2663,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(priceratio.tostring",{"_index":2643,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(rewardperblock.tostring",{"_index":2662,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(sfbalance.tostring",{"_index":2642,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(totalstakeamount.tostring",{"_index":2664,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(totalstaked.tostring",{"_index":2671,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(formatether(voltbalance",{"_index":4749,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["number(stakingdata?.bar?.ratio",{"_index":4712,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["number(stakingdata?.user?.xvolt",{"_index":4711,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["number(this.validatorfee",{"_index":2653,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["number(tokenpriceinusd",{"_index":1884,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["numberoftries",{"_index":1092,"title":{},"body":{"injectables/BroadcasterService.html":{},"interfaces/WebhookEvent-1.html":{}}}],["obj",{"_index":148,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["obj[key",{"_index":153,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["object",{"_index":55,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"classes/RelayDto.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"classes/SubmitQuestionnaireDto.html":{},"interfaces/TokenEventData.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WebhookEvent-1.html":{}}}],["object.entries(object",{"_index":151,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["object.keys(exception?.keyvalue",{"_index":277,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["object.keys(object).some((key",{"_index":155,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["object.keys(this.configservice.getorthrow",{"_index":3352,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["observable",{"_index":1207,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"injectables/RelayAPIService.html":{},"injectables/TradeService.html":{}}}],["occurred",{"_index":282,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["offers",{"_index":5080,"title":{},"body":{"index.html":{}}}],["ok",{"_index":180,"title":{},"body":{"controllers/AccountsController.html":{},"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/OperatorsController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["old",{"_index":412,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/BroadcasterService.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{}}}],["omit",{"_index":91,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"miscellaneous/typealiases.html":{}}}],["omitnonnamedkeys",{"_index":146,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["omitnonnamedkeys(decoded.args",{"_index":67,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["oncreatesmartwalletfailed",{"_index":3975,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["oncreatesmartwalletfailed(eventdata",{"_index":3989,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["oncreatesmartwalletstarted",{"_index":3976,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["oncreatesmartwalletstarted(eventdata",{"_index":3991,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["oncreatesmartwalletsuccess",{"_index":3977,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["oncreatesmartwalletsuccess(eventdata",{"_index":3993,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["one",{"_index":414,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/DataLayerService.html":{},"controllers/ProjectsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/UsersController.html":{}}}],["onmoduleinit",{"_index":1077,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["onrelayfailed",{"_index":3978,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["onrelayfailed(eventdata",{"_index":3996,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["onrelaystarted",{"_index":3979,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["onrelaystarted(eventdata",{"_index":3998,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["onrelaysuccess",{"_index":3980,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["onrelaysuccess(eventdata",{"_index":4000,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["ontransactionhash",{"_index":3981,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["ontransactionhash(eventdata",{"_index":4002,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["op",{"_index":1241,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/WebhooksService.html":{}}}],["op.callgaslimit",{"_index":3251,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["op.interface",{"_index":1696,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/UserOpFactory.html":{}}}],["op.interface.ts",{"_index":1002,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["op.paymasteranddata",{"_index":3244,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["op.preverificationgas",{"_index":3254,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["op.verificationgaslimit",{"_index":3253,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["operation",{"_index":1018,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/DataLayerService.html":{},"interfaces/UserOp.html":{}}}],["operator",{"_index":1621,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["operator.dto",{"_index":3114,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["operator.dto.ts",{"_index":868,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["operator.dto.ts:11",{"_index":873,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["operator.dto.ts:5",{"_index":871,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["operator.dto.ts:8",{"_index":872,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["operator.ownerid.tostring",{"_index":3799,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["operatorid",{"_index":3798,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["operatorid))?._id.tostring",{"_index":3800,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["operatorjwtstrategy",{"_index":3062,"title":{"injectables/OperatorJwtStrategy.html":{}},"body":{"injectables/OperatorJwtStrategy.html":{},"modules/OperatorsModule.html":{},"overview.html":{}}}],["operatorjwtstring",{"_index":2859,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["operators",{"_index":1895,"title":{},"body":{"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{}}}],["operatorscontroller",{"_index":3069,"title":{"controllers/OperatorsController.html":{}},"body":{"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{}}}],["operatorsmodule",{"_index":194,"title":{"modules/OperatorsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/OperatorsModule.html":{},"modules/SmartWalletsModule.html":{},"modules.html":{},"overview.html":{}}}],["operatorsproviders",{"_index":3144,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["operatorsservice",{"_index":3111,"title":{},"body":{"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"overview.html":{}}}],["operatorwallet",{"_index":3067,"title":{"interfaces/OperatorWallet.html":{}},"body":{"interfaces/OperatorWallet.html":{}}}],["optional",{"_index":239,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionInterface.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["options",{"_index":683,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/EventsScannerModule.html":{},"classes/FuseLegacySDK.html":{},"modules/GraphqlAPIModule.html":{},"classes/LegacyEventEmitter.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["options?.gaslimit",{"_index":2485,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["options?.gasprice",{"_index":2484,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["options?.value",{"_index":2482,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["ordered",{"_index":4900,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["otherwise",{"_index":64,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{}}}],["out",{"_index":80,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"modules/EthereumPaymentsModule.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["outgoing",{"_index":4942,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["outputs",{"_index":2439,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["overpaid",{"_index":5032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":5134,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1902,"title":{},"body":{"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["owner.decorator",{"_index":3873,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["owner.guard",{"_index":3007,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["owner.guard.ts",{"_index":2790,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["owner.guard.ts:12",{"_index":2834,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["owner.guard.ts:13",{"_index":2805,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["owner.guard.ts:5",{"_index":2793,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{}}}],["owner.guard.ts:6",{"_index":2833,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["owner.guard.ts:7",{"_index":2804,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["owner.guard.ts:8",{"_index":2795,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{}}}],["owneraddress",{"_index":880,"title":{},"body":{"interfaces/BackendWallet.html":{},"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"interfaces/ISmartWalletUser.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"classes/SmartWalletsAuthDto.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["ownerid",{"_index":224,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/ApiKey-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"guards/IsCreatorOwnerGuard.html":{},"interfaces/OperatorWallet.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/Project.html":{},"injectables/ProjectsService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["package",{"_index":4954,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paddedversion",{"_index":2421,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["page",{"_index":1864,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["pagenumber",{"_index":1761,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paginate",{"_index":4771,"title":{},"body":{"interfaces/WalletActionDocument.html":{},"dependencies.html":{}}}],["paginated",{"_index":1870,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paginatedwalletactionmodel",{"_index":1746,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paginatemodel",{"_index":1747,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paid",{"_index":5031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":157,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"controllers/EthereumPaymentsController.html":{},"interfaces/EventProps.html":{},"controllers/GraphqlAPIController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/RelayAccountsController.html":{},"controllers/StakingApiController.html":{},"controllers/UsersController.html":{},"controllers/WebhooksController.html":{}}}],["param('accountaddress",{"_index":4204,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["param('address",{"_index":2736,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"controllers/OperatorsController.html":{},"controllers/WebhooksController.html":{}}}],["param('appname",{"_index":647,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["param('id",{"_index":3312,"title":{},"body":{"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["param('paymentlinkid",{"_index":2104,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["param('projectid",{"_index":3016,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/ProjectsController.html":{}}}],["param('sponsorid",{"_index":3551,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["param('webhookid",{"_index":3013,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["parameters",{"_index":238,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["params",{"_index":1305,"title":{},"body":{"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{}}}],["params.id",{"_index":2836,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["params.projectid",{"_index":2837,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["params.walletaddress",{"_index":1410,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["params.webhookid",{"_index":1408,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["params?.projectid",{"_index":2807,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["params?.webhookid",{"_index":2809,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["paramtype",{"_index":19,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["parse4bytesrestoifaces",{"_index":2348,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["parse4bytesrestoifaces(response",{"_index":2315,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["parseabi",{"_index":2299,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["parseabi(frag",{"_index":2352,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["parsecalldata",{"_index":4580,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parsecalldata(calldata",{"_index":4587,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parsed",{"_index":2351,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["parsedlog",{"_index":2011,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.address",{"_index":2017,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["parsedlog.args[0",{"_index":2014,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.args[1",{"_index":2016,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.args[3].tostring",{"_index":4564,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.args[4",{"_index":4565,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.args[5].tostring",{"_index":4566,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.args[6].tostring",{"_index":4567,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["parsedlog.transactionhash",{"_index":2023,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parseduserop",{"_index":782,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["parseduserop.sender",{"_index":4163,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["parseduserop.targetfunctions[0",{"_index":824,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["parseduserop.userophash",{"_index":4164,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["parseduserop.walletfunction",{"_index":4145,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["parseduseroptowalletaction",{"_index":1780,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["parseduseroptowalletaction(parseduserop",{"_index":1834,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["parseether",{"_index":2614,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"classes/TransferToken.html":{},"injectables/VoltBarService.html":{}}}],["parseether(this._eth",{"_index":4509,"title":{},"body":{"classes/TransferToken.html":{}}}],["parseether(tokenamount",{"_index":2629,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["parsefloat(formattedbalance",{"_index":1398,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["parsefloat(paymentlink.receivedamount",{"_index":2219,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["parsefloat(token.quote_rate)).tostring",{"_index":1399,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["parseint(decimals",{"_index":4420,"title":{},"body":{"injectables/TokenService.html":{}}}],["parseint(minverificationgaslimit)).tostring",{"_index":3250,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["parseint(parsedlog.args.tokenid?._hex",{"_index":2038,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["parseint(process.env.accounts_tcp_port",{"_index":1733,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsModule.html":{}}}],["parseint(process.env.api_tcp_port",{"_index":1735,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/ProjectsModule.html":{}}}],["parseint(process.env.apps_tcp_port",{"_index":686,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["parseint(process.env.network_tcp_port",{"_index":1549,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["parseint(process.env.notifications_tcp_port",{"_index":3028,"title":{},"body":{"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{}}}],["parseint(process.env.relay_tcp_port",{"_index":3579,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["parseint(process.env.smart_wallets_tcp_port",{"_index":1274,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/EventsScannerModule.html":{},"modules/OperatorsModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["parseint(timestamp.tostring",{"_index":3227,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["parselog",{"_index":1979,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parselog(log",{"_index":2012,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["parser.service",{"_index":1721,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/UserOpFactory.html":{}}}],["parser.service.ts",{"_index":4578,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parser.service.ts:11",{"_index":4590,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parser.service.ts:21",{"_index":4585,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parser.service.ts:42",{"_index":4588,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["parser.service.ts:7",{"_index":4583,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["partial",{"_index":94,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["partialtype",{"_index":4546,"title":{},"body":{"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{}}}],["partialtype(createprojectdto",{"_index":4545,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createwebhookdto",{"_index":4549,"title":{},"body":{"classes/UpdateWebhookDto.html":{}}}],["passport",{"_index":2872,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{},"dependencies.html":{}}}],["passportjwtsecret",{"_index":2873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportmodule",{"_index":853,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["passportmodule.register",{"_index":859,"title":{},"body":{"modules/AuthModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["passportstrategy",{"_index":2869,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2863,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["patch",{"_index":3543,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["patch(':id",{"_index":3553,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["path",{"_index":286,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/BundlerApiController.html":{},"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"modules/SmartWalletsModule.html":{},"classes/SwapTokens.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{}}}],["payable",{"_index":2440,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["payload",{"_index":2868,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["paymaster",{"_index":1008,"title":{},"body":{"interfaces/BaseUserOp.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"interfaces/UserOp.html":{}}}],["paymaster')).includes(ver",{"_index":3353,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymaster.${ver",{"_index":3357,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasteraddress",{"_index":3198,"title":{},"body":{"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{}}}],["paymasteraddressandsponsorid",{"_index":1798,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paymasteraddressandsponsorid.paymasteraddress",{"_index":1801,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paymasteraddressandsponsorid.sponsorid",{"_index":1803,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["paymasteranddata",{"_index":1009,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["paymasteranddataforestimateuseropgascall",{"_index":3242,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymasterapi.keys.${paymasterinfo.paymasterversion}.${paymasterinfo.environment}privatekey",{"_index":3265,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymasterapicontroller",{"_index":3146,"title":{"controllers/PaymasterApiController.html":{}},"body":{"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{}}}],["paymasterapimodule",{"_index":1424,"title":{"modules/PaymasterApiModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/PaymasterApiModule.html":{},"modules.html":{},"overview.html":{}}}],["paymasterapiservice",{"_index":3151,"title":{"injectables/PaymasterApiService.html":{}},"body":{"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"overview.html":{}}}],["paymastercontract",{"_index":3203,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymastercontract.gethash",{"_index":3262,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymastercontroller",{"_index":3290,"title":{"controllers/PaymasterController.html":{}},"body":{"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{}}}],["paymasterdefaultobj",{"_index":3362,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterenvs",{"_index":3356,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterenvs.production.entrypointaddress",{"_index":3365,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterenvs.production.paymastercontractaddress",{"_index":3364,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterenvs.sandbox.entrypointaddress",{"_index":3368,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterenvs.sandbox.paymastercontractaddress",{"_index":3367,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymasterinfo",{"_index":3213,"title":{"interfaces/PaymasterInfo.html":{}},"body":{"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{}}}],["paymasterinfo.entrypointaddress",{"_index":3247,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymasterinfo.paymasteraddress",{"_index":3237,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymasterinfo.sponsorid",{"_index":3236,"title":{},"body":{"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{}}}],["paymasterinfomodelstring",{"_index":3349,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymastermodel",{"_index":3335,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["paymastermodule",{"_index":195,"title":{"modules/PaymasterModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules.html":{},"overview.html":{}}}],["paymasterproviders",{"_index":3327,"title":{},"body":{"modules/PaymasterModule.html":{}}}],["paymasterservice",{"_index":3156,"title":{"injectables/PaymasterService.html":{}},"body":{"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"overview.html":{}}}],["paymastersigner",{"_index":3266,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymastersigner.signmessage(arrayify(hash",{"_index":3268,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["paymasterversion",{"_index":3320,"title":{},"body":{"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{}}}],["payment",{"_index":595,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"miscellaneous/enumerations.html":{}}}],["payment_account",{"_index":5037,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_link",{"_index":5038,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paymentaccount",{"_index":2180,"title":{"interfaces/PaymentAccount.html":{}},"body":{"injectables/EthereumPaymentsService.html":{},"interfaces/PaymentAccount.html":{},"injectables/PaymentsService.html":{}}}],["paymentaccount.backendwalletid.walletaddress",{"_index":3466,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["paymentaccount.save",{"_index":2182,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentaccountmodel",{"_index":2127,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentaccountmodelstring",{"_index":3441,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["paymentlink",{"_index":2145,"title":{"interfaces/PaymentLink.html":{}},"body":{"injectables/EthereumPaymentsService.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.amount",{"_index":2217,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.fromaddress",{"_index":2213,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["paymentlink.ownerid",{"_index":3473,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["paymentlink.populate('backendwalletid",{"_index":2194,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["paymentlink.receivedamount",{"_index":2210,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.receivedtokenaddress",{"_index":2211,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.receivedtokensymbol",{"_index":2212,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.save",{"_index":2192,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.status",{"_index":2221,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.status.tolowercase",{"_index":2228,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.tokenaddress.tolowercase",{"_index":2230,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.tokensymbol.tolowercase",{"_index":2231,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlink.txhash",{"_index":2215,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["paymentlink.webhookevent",{"_index":2214,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["paymentlink.webhookurl",{"_index":2226,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlinkid",{"_index":2082,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["paymentlinkmodel",{"_index":2128,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["paymentlinkmodelstring",{"_index":3442,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["paymentlinkwebhookevent",{"_index":2227,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["payments",{"_index":3380,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["payments.constants",{"_index":2159,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.controller",{"_index":2112,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["payments.controller.ts",{"_index":2065,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:13",{"_index":2078,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:19",{"_index":2072,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:25",{"_index":2075,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:30",{"_index":2081,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:36",{"_index":2085,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.controller.ts:41",{"_index":2088,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["payments.module",{"_index":1461,"title":{},"body":{"modules/ChargeAppsServiceModule.html":{}}}],["payments.module.ts",{"_index":2111,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["payments.providers",{"_index":2114,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["payments.service",{"_index":2090,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{}}}],["payments.service.ts",{"_index":2119,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:109",{"_index":2136,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:113",{"_index":2139,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:164",{"_index":2144,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:18",{"_index":2129,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:30",{"_index":2148,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:34",{"_index":2150,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:38",{"_index":2152,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:42",{"_index":2154,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:46",{"_index":2137,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:50",{"_index":2141,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:62",{"_index":2131,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:74",{"_index":2133,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments.service.ts:99",{"_index":2134,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["payments/backend",{"_index":884,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{}}}],["payments/dto/create",{"_index":1599,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"injectables/EthereumPaymentsService.html":{}}}],["payments/dto/transfer",{"_index":4526,"title":{},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["payments/ethereum",{"_index":946,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/ChargeAppsServiceModule.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{}}}],["payments/interfaces/ethereum",{"_index":950,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{}}}],["payments/schemas/ethereum",{"_index":2160,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"miscellaneous/enumerations.html":{}}}],["payments_ethereum",{"_index":2066,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["paymentsallowedtokens",{"_index":1378,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["paymentscontroller",{"_index":3378,"title":{"controllers/PaymentsController.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["paymentsethereumservice",{"_index":2097,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["paymentsmodule",{"_index":1458,"title":{"modules/PaymentsModule.html":{}},"body":{"modules/ChargeAppsServiceModule.html":{},"modules/PaymentsModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentsproviders",{"_index":3417,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["paymentsservice",{"_index":3396,"title":{"injectables/PaymentsService.html":{}},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"overview.html":{}}}],["pays",{"_index":1033,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["pending",{"_index":818,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["per",{"_index":1030,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["perf_hooks",{"_index":5000,"title":{},"body":{"dependencies.html":{}}}],["performance.decorator",{"_index":1976,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["performed",{"_index":1040,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["pertaining",{"_index":5090,"title":{},"body":{"index.html":{}}}],["phonenumber",{"_index":1344,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["pipe",{"_index":993,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/WebhookSendService.html":{}}}],["pipe(map((response",{"_index":991,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["pipe(map(res",{"_index":2698,"title":{},"body":{"injectables/GraphQLService.html":{},"injectables/RelayAPIService.html":{},"injectables/TradeService.html":{}}}],["pita",{"_index":99,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["pk_${await",{"_index":513,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["pk_test_${await",{"_index":536,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["please",{"_index":2465,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["pm_accounts",{"_index":3186,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["pm_accounts(body",{"_index":3207,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["pm_sponsoruseroperation",{"_index":3187,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["pm_sponsoruseroperation(body",{"_index":3209,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["point",{"_index":82,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["populate('backendwalletid",{"_index":3462,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["populate('webhook').sort",{"_index":1126,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["populate('webhookid",{"_index":4922,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["populated",{"_index":2310,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["port",{"_index":685,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["post",{"_index":630,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/BundlerApiController.html":{},"controllers/ConsensusApiController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"injectables/RelayAPIService.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/StakingApiController.html":{},"injectables/StudioLegacyJwtService.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{},"injectables/WebhookSendService.html":{}}}],["post('/account",{"_index":3122,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["post('/login",{"_index":846,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/questionnaire/:id",{"_index":4630,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('/register",{"_index":844,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sandbox/:projectid",{"_index":3565,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post('/secret/:projectid",{"_index":3555,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post('/validate",{"_index":3106,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["post('/webhook/fund",{"_index":3102,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["post(':id",{"_index":3311,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["post('activate/:appname",{"_index":646,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["post('auth",{"_index":3857,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["post('create",{"_index":3878,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["post('delegate",{"_index":1515,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["post('delegated_amounts",{"_index":1519,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["post('payment_account",{"_index":2101,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["post('payment_link",{"_index":659,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["post('payments/account/transfer_tokens",{"_index":665,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["post('relay",{"_index":3880,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["post('secret/:appname",{"_index":653,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["post('stake",{"_index":4196,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["post('token",{"_index":3921,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["post('unstake",{"_index":4199,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["post('webhook",{"_index":2087,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{}}}],["post('webhook/add",{"_index":2984,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["post('webhook/delete",{"_index":2990,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["post('withdraw",{"_index":1524,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["post(graphapiurl",{"_index":2697,"title":{},"body":{"injectables/GraphQLService.html":{}}}],["postbody",{"_index":4798,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["prdorsbxkeyrequest",{"_index":3491,"title":{"interfaces/PrdOrSbxKeyRequest.html":{}},"body":{"interfaces/PrdOrSbxKeyRequest.html":{}}}],["prefix",{"_index":428,"title":{},"body":{"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/GraphqlController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"controllers/WebhooksController.html":{}}}],["preparerequestconfig",{"_index":1188,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["preparerequestconfig(context",{"_index":1199,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["prepareurl",{"_index":1189,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["prepareurl(environment",{"_index":1201,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["preverificationgas",{"_index":1010,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["previous",{"_index":2302,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["pricedata",{"_index":1389,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["pricedata.data.price",{"_index":1393,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["priceratio",{"_index":2637,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["priority",{"_index":1032,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["private",{"_index":256,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["privatekey",{"_index":4491,"title":{},"body":{"classes/TransferToken.html":{}}}],["privatekeystring",{"_index":3263,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["problem",{"_index":142,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["proceeding",{"_index":5113,"title":{},"body":{"index.html":{}}}],["process",{"_index":2008,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["process.env.accounts_host",{"_index":1732,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsModule.html":{}}}],["process.env.api_host",{"_index":1734,"title":{},"body":{"modules/DataLayerModule.html":{},"modules/ProjectsModule.html":{}}}],["process.env.apps_host",{"_index":684,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["process.env.auth0_audience",{"_index":2887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url",{"_index":2889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.auth0_issuer_url}.well",{"_index":2882,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["process.env.default_gas_limit",{"_index":2427,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["process.env.fuse_api_base_url",{"_index":2424,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["process.env.legacy_fuse_admin_api_url}/api/v2/accounts",{"_index":4300,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["process.env.legacy_jwt_secret",{"_index":4311,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["process.env.legacy_jwt_secret).tostring",{"_index":4306,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["process.env.network_host",{"_index":1548,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/StakingAPIModule.html":{}}}],["process.env.notifications_host",{"_index":3027,"title":{},"body":{"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{}}}],["process.env.public_api_key",{"_index":4506,"title":{},"body":{"classes/TransferToken.html":{}}}],["process.env.relay_host",{"_index":3578,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["process.env.relay_secret",{"_index":3677,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["process.env.smart_wallets_host",{"_index":1273,"title":{},"body":{"modules/BundlerApiModule.html":{},"modules/EventsScannerModule.html":{},"modules/OperatorsModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["process.env.socket_server_url",{"_index":2430,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["processblocks",{"_index":1942,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["processblocks(fromblock",{"_index":1959,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["processblocks(romblock",{"_index":3704,"title":{},"body":{"classes/ScannerService.html":{}}}],["processblocktraces",{"_index":4451,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["processblocktraces(blocknumber",{"_index":4456,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["processevent",{"_index":1943,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["processevent(log",{"_index":1965,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["processtrace",{"_index":4452,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["processtrace(trace",{"_index":4459,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["processwebhooktokenevents",{"_index":4855,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["processwebhooktokenevents(eventdata",{"_index":4875,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["production",{"_index":1181,"title":{},"body":{"controllers/BundlerApiController.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"index.html":{}}}],["productionpaymasterinfoobj",{"_index":3363,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["project",{"_index":379,"title":{"interfaces/Project.html":{}},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"interfaces/BaseUserOp.html":{},"injectables/DataLayerService.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/RelayAccountsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"interfaces/UserOp.html":{}}}],["project.dto",{"_index":3545,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":1646,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts:10",{"_index":1647,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:4",{"_index":1649,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:7",{"_index":1648,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.ownerid.tostring",{"_index":1901,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["projectapikey",{"_index":2814,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["projectapikey.projectid",{"_index":2846,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["projectapikey?.secrethash",{"_index":2844,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{}}}],["projectapikeys",{"_index":538,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["projectapikeys?.encryptedlegacyjwt",{"_index":540,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["projectapikeys?.ownerid?.tostring",{"_index":571,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["projectapikeys?.projectid?.tostring",{"_index":543,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["projectencryptedjwt",{"_index":539,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["projectid",{"_index":329,"title":{},"body":{"interfaces/ApiKey.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateWebhookDto.html":{},"injectables/DataLayerService.html":{},"interfaces/ISmartWalletUser.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"interfaces/SmartContractWallet.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["projectid))?.publickey",{"_index":3801,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["projectjwt",{"_index":2922,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["projectkeys",{"_index":508,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["projectkeys?.sandboxkey",{"_index":534,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["projectmodel",{"_index":3583,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projectmodelstring",{"_index":3600,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projects",{"_index":3515,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller",{"_index":3495,"title":{"controllers/ProjectsController.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["projectsecrethash",{"_index":2843,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["projectsmodule",{"_index":196,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsproviders",{"_index":3576,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projectsservice",{"_index":2832,"title":{"injectables/ProjectsService.html":{}},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"overview.html":{}}}],["promise",{"_index":483,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/GraphqlAPIService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"injectables/NotificationsService.html":{},"controllers/PaymasterApiController.html":{},"injectables/ProjectsService.html":{},"classes/ScannerService.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StudioLegacyJwtService.html":{},"interfaces/Token.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"interfaces/UserStakedTokens.html":{},"injectables/UsersService.html":{},"classes/WalletAction.html":{},"injectables/WebhooksService.html":{}}}],["promise((resolve",{"_index":968,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["promise.all",{"_index":2682,"title":{},"body":{"injectables/GasService.html":{},"injectables/TokenService.html":{}}}],["promise.all(calls.map(async",{"_index":4597,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"classes/ApiKeysDto.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphService.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"injectables/LegacyApiInterceptor.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/OperatorWallet.html":{},"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"interfaces/RelayAccount.html":{},"classes/RelayDto.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"classes/SmartWalletsAuthDto.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{},"properties.html":{}}}],["protected",{"_index":769,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["provided",{"_index":1822,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["provider",{"_index":2499,"title":{},"body":{"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/TokenService.html":{},"injectables/VoltBarService.html":{}}}],["provider.getblock('latest",{"_index":3226,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["provider.getblocknumber",{"_index":2502,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["providers",{"_index":188,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/DatabaseModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["providers/fuse",{"_index":2565,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{}}}],["providers/volt",{"_index":4230,"title":{},"body":{"modules/StakingModule.html":{},"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["provides",{"_index":5060,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":726,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ConsensusApiService.html":{},"injectables/DataLayerService.html":{},"injectables/GraphqlAPIService.html":{},"injectables/NotificationsService.html":{},"injectables/PaymasterApiService.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/StakingAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["public",{"_index":384,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"controllers/ExplorerApiController.html":{},"classes/FuseLegacySDK.html":{},"controllers/GraphqlAPIController.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["publicapikey",{"_index":421,"title":{},"body":{"controllers/ApiKeysController.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/TransferToken.html":{}}}],["publickey",{"_index":330,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"interfaces/RelayAccount.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["publish",{"_index":3786,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["publishmessage",{"_index":3982,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["publishmessage(eventdata",{"_index":4004,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["publishuserop",{"_index":3759,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["publishuserop(messagedata",{"_index":3768,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["publishwalletaction",{"_index":3760,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["publishwalletaction(sender",{"_index":3771,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["put",{"_index":631,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/ProjectsController.html":{}}}],["put('/secret/:projectid",{"_index":3561,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["put('secret/:appname",{"_index":655,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["put('webhook",{"_index":3003,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["queries/aa",{"_index":2757,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["queries/nfts",{"_index":2756,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["queries/voltbar",{"_index":4695,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["query",{"_index":481,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/DataLayerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"interfaces/ISmartWalletUser.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["query('limit",{"_index":3929,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["query('page",{"_index":3928,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["query('tokenaddress",{"_index":3930,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["query:${getbarstats",{"_index":4743,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["query?.apikey",{"_index":2816,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["query?.apikey.includes('pk_test_",{"_index":2827,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{}}}],["questionnaire",{"_index":4316,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["questionnaire.dto",{"_index":4627,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["questionnaire.dto.ts",{"_index":4315,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["questionnaire.dto.ts:6",{"_index":4318,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["r",{"_index":2357,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["randomstring",{"_index":547,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["ratelimit",{"_index":2878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["readonly",{"_index":223,"title":{},"body":{"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"controllers/AuthController.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/ISmartWalletUser.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/User.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"controllers/UsersController.html":{},"injectables/VoltBarService.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["readonlyarray",{"_index":43,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["reason",{"_index":1372,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["receive",{"_index":1856,"title":{},"body":{"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"index.html":{}}}],["receive.ts",{"_index":4376,"title":{},"body":{"classes/TokenReceive.html":{}}}],["receive.ts:35",{"_index":4390,"title":{},"body":{"classes/TokenReceive.html":{}}}],["receive.ts:39",{"_index":4388,"title":{},"body":{"classes/TokenReceive.html":{}}}],["receive.ts:50",{"_index":4381,"title":{},"body":{"classes/TokenReceive.html":{}}}],["receive.ts:7",{"_index":4383,"title":{},"body":{"classes/TokenReceive.html":{}}}],["receive.ts:89",{"_index":4386,"title":{},"body":{"classes/TokenReceive.html":{}}}],["received",{"_index":1863,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/PaymasterApiService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["receivedamount",{"_index":2061,"title":{},"body":{"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{}}}],["receivedamountfloat",{"_index":2218,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["receivedtokenaddress",{"_index":2062,"title":{},"body":{"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{}}}],["receivedtokendata",{"_index":4129,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["receivedtokendata.decimals",{"_index":4352,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendata.symbol",{"_index":4350,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendata.value",{"_index":4370,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendetails",{"_index":4343,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendetails.decimals",{"_index":4366,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendetails.symbol",{"_index":4365,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokendetails.value",{"_index":4354,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivedtokensymbol",{"_index":2063,"title":{},"body":{"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{}}}],["receivetokendata",{"_index":4369,"title":{},"body":{"classes/SwapTokens.html":{}}}],["receivetokendetails",{"_index":4160,"title":{},"body":{"classes/StakeTokens.html":{}}}],["record",{"_index":40,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AnalyticsService.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/ISmartWalletUser.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/TokenReceive.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{}}}],["recording",{"_index":1817,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["recorduserop",{"_index":1742,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["recorduserop(baseuserop",{"_index":1765,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["recovered",{"_index":3849,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["recoveredaddress",{"_index":3834,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["recoverpublickey",{"_index":3828,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["recoverpublickey(arrayify(hashmessage(arrayify(smartwalletsauthdto.hash",{"_index":3832,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["recoverymanager",{"_index":2412,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["rectoken",{"_index":4349,"title":{},"body":{"classes/SwapTokens.html":{}}}],["rectokendata",{"_index":4542,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["rectokendecimals",{"_index":4351,"title":{},"body":{"classes/SwapTokens.html":{}}}],["rectokenvalueinwei",{"_index":4353,"title":{},"body":{"classes/SwapTokens.html":{}}}],["recvalue",{"_index":4326,"title":{},"body":{"classes/SwapTokens.html":{}}}],["redirectionlink",{"_index":3377,"title":{},"body":{"interfaces/PaymentLink.html":{}}}],["redirecturl",{"_index":1642,"title":{},"body":{"classes/CreatePaymentLinkDto.html":{}}}],["reduce((totalaverage",{"_index":4739,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["reflect",{"_index":5002,"title":{},"body":{"dependencies.html":{}}}],["registers",{"_index":834,"title":{},"body":{"controllers/AuthController.html":{}}}],["regular",{"_index":1593,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/StakingModule.html":{}}}],["rehydrate",{"_index":59,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["reject",{"_index":2557,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["reject(new",{"_index":2560,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["related",{"_index":5074,"title":{},"body":{"index.html":{}}}],["relay",{"_index":1487,"title":{},"body":{"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{},"index.html":{}}}],["relay(params",{"_index":3631,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["relay(relaydto",{"_index":3866,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["relayaccount",{"_index":3641,"title":{"interfaces/RelayAccount.html":{}},"body":{"interfaces/RelayAccount.html":{},"injectables/RelayAccountsService.html":{}}}],["relayaccountmodel",{"_index":3666,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["relayaccountmodelstring",{"_index":3671,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["relayaccountscontroller",{"_index":3646,"title":{"controllers/RelayAccountsController.html":{}},"body":{"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{}}}],["relayaccountsmodule",{"_index":1491,"title":{"modules/RelayAccountsModule.html":{}},"body":{"modules/ChargeRelayServiceModule.html":{},"modules/RelayAccountsModule.html":{},"modules.html":{},"overview.html":{}}}],["relayaccountsproviders",{"_index":3661,"title":{},"body":{"modules/RelayAccountsModule.html":{}}}],["relayaccountsservice",{"_index":3652,"title":{"injectables/RelayAccountsService.html":{}},"body":{"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"overview.html":{}}}],["relayapiservice",{"_index":3621,"title":{"injectables/RelayAPIService.html":{}},"body":{"injectables/RelayAPIService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["relayapiurl",{"_index":3625,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["relaybody",{"_index":2553,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["relayclient",{"_index":3603,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["relaydto",{"_index":3680,"title":{"classes/RelayDto.html":{}},"body":{"classes/RelayDto.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["relaydto.owneraddress",{"_index":3881,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["relayer",{"_index":4021,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["relayfailed",{"_index":4033,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["relayservice",{"_index":3051,"title":{},"body":{"injectables/NotificationsService.html":{},"modules/ProjectsModule.html":{}}}],["relaystarted",{"_index":4029,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["relaysuccess",{"_index":4031,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["relevant",{"_index":2917,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["replace",{"_index":2918,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["repository",{"_index":5100,"title":{},"body":{"index.html":{}}}],["representation",{"_index":1015,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["req",{"_index":3150,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["req).then((jsonrpcresponse",{"_index":3172,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["req.body",{"_index":3164,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["req.environment",{"_index":3159,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["req.projectid",{"_index":3160,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["request",{"_index":1248,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphService.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/PaymasterApiController.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"injectables/RelayAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/WebhookSendService.html":{},"dependencies.html":{}}}],["request(requestconfig",{"_index":1219,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["request.body",{"_index":1254,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["request.body?.ownerid",{"_index":2821,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["request.environment",{"_index":1251,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"guards/IsPrdOrSbxKeyGuard.html":{}}}],["request.header('api",{"_index":2845,"title":{},"body":{"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["request.headers",{"_index":2916,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["request.params",{"_index":2914,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["request.projectid",{"_index":2829,"title":{},"body":{"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["request.query",{"_index":2280,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["request.userid",{"_index":2854,"title":{},"body":{"guards/IsValidApiKeysGuard-1.html":{}}}],["request?.user?.sub",{"_index":2796,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["requestbody",{"_index":919,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["requestconfig",{"_index":1216,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/WebhookSendService.html":{}}}],["requestconfig.data",{"_index":1257,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["requestconfig.data.params[0",{"_index":1231,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["requestconfig.data?.method",{"_index":1229,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["requestconfig.params",{"_index":2284,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["requestenvironment",{"_index":1250,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["requestheaders",{"_index":2915,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["requesting",{"_index":3519,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["requests",{"_index":3167,"title":{},"body":{"controllers/PaymasterApiController.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["requesturl",{"_index":3636,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["require_tld",{"_index":1666,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["required",{"_index":4773,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["res",{"_index":3109,"title":{},"body":{"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"classes/TransferToken.html":{}}}],["res.data",{"_index":2699,"title":{},"body":{"injectables/GraphQLService.html":{},"injectables/RelayAPIService.html":{}}}],["res.data.data.price",{"_index":4441,"title":{},"body":{"injectables/TradeService.html":{}}}],["res.json(jsonrpcresponse",{"_index":3174,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["res.sendstatus(204",{"_index":3175,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["res.wait",{"_index":4517,"title":{},"body":{"classes/TransferToken.html":{}}}],["res?.wait",{"_index":4512,"title":{},"body":{"classes/TransferToken.html":{}}}],["reset",{"_index":199,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}],["resolve",{"_index":263,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["resolve(data",{"_index":2539,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["response",{"_index":267,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/WebhooksService.html":{}}}],["response.data",{"_index":992,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["response.data.jwt",{"_index":2525,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["response.json",{"_index":2344,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["response.sender",{"_index":1807,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["response.status",{"_index":2342,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["response.status(200).send",{"_index":3128,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["response.status(404).send",{"_index":3127,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["response.status(statuscode).send",{"_index":3118,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["response.statuscode",{"_index":292,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.statustext",{"_index":1134,"title":{},"body":{"injectables/BroadcasterService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["response.userophash",{"_index":1812,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["response?.result",{"_index":1232,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["responsebody",{"_index":284,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsedata",{"_index":989,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["responsedata?.data?.account?.address",{"_index":4304,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["responsedata?.data?.jwt",{"_index":4303,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["responsedata?.job",{"_index":1348,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["responses",{"_index":3168,"title":{},"body":{"controllers/PaymasterApiController.html":{},"interfaces/WebhookEvent-1.html":{}}}],["result",{"_index":515,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/DataLayerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/WebhooksService.html":{}}}],["result.callgaslimit",{"_index":3282,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["result.error",{"_index":3281,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["result.text_signature",{"_index":2350,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["results",{"_index":164,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["results.reverse",{"_index":2340,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["rethrow",{"_index":4715,"title":{},"body":{"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["retries",{"_index":2336,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["retrieval",{"_index":4717,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["retrieve",{"_index":2462,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"index.html":{}}}],["retry",{"_index":4089,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["retryafter",{"_index":1121,"title":{},"body":{"injectables/BroadcasterService.html":{},"interfaces/WebhookEvent-1.html":{}}}],["retrytimeintervalsms",{"_index":1079,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["return",{"_index":71,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"classes/AllExceptionsFilter.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["returned",{"_index":1147,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["returns",{"_index":177,"title":{},"body":{"controllers/AccountsController.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["revokes",{"_index":411,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{}}}],["rewardperblock",{"_index":2657,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["rewardperyearapr",{"_index":2661,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["rimraf",{"_index":5004,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":4296,"title":{},"body":{"injectables/StudioLegacyJwtService.html":{}}}],["rolls",{"_index":628,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["romblock",{"_index":3706,"title":{},"body":{"classes/ScannerService.html":{}}}],["rpc",{"_index":289,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"guards/IsValidApiKeysGuard-1.html":{},"controllers/PaymasterApiController.html":{},"modules/StakingModule.html":{},"dependencies.html":{}}}],["rpcconfig",{"_index":2246,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["rpcexception",{"_index":248,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/PaymasterApiService.html":{}}}],["rpcexception('internal",{"_index":517,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["rpcexception('not",{"_index":521,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["rpcexception('public",{"_index":511,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["rpcexception('sandboxkey",{"_index":535,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["rpcexception('secret",{"_index":525,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["rpcexception(`error",{"_index":3234,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["rpcexception(error",{"_index":3261,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["rpcexception(errorreason",{"_index":3275,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["rpcprovider",{"_index":1948,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/GasService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["rpcprovider.gettransaction(transactionhash",{"_index":2683,"title":{},"body":{"injectables/GasService.html":{}}}],["rpcprovider.gettransactionreceipt(transactionhash",{"_index":2684,"title":{},"body":{"injectables/GasService.html":{}}}],["rs256",{"_index":2891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["rsa",{"_index":2875,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["run",{"_index":5117,"title":{},"body":{"index.html":{}}}],["running",{"_index":5105,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":255,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/GraphQLService.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{},"injectables/WebhookSendService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1208,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["safefetch(`${urlto(hexsigtype)}${hexsig",{"_index":2339,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["salt",{"_index":3744,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["saltrounds",{"_index":528,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["sandbox",{"_index":389,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/BundlerApiController.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"controllers/ProjectsController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["sandboxkey",{"_index":331,"title":{},"body":{"interfaces/ApiKey.html":{},"injectables/ApiKeysService.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"injectables/ProjectsService.html":{}}}],["sandboxpaymasterinfoobj",{"_index":3366,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["save",{"_index":1156,"title":{},"body":{"injectables/BroadcasterService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["scanner",{"_index":3708,"title":{},"body":{"classes/ScannerService.html":{}}}],["scanner.constants",{"_index":1982,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scanner.module",{"_index":1483,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{}}}],["scanner.module.ts",{"_index":2245,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["scanner.providers",{"_index":2249,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["scanner.service",{"_index":1993,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scanner.service.ts",{"_index":1939,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scanner.service.ts:112",{"_index":1958,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["scanner.service.ts:17",{"_index":4453,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["scanner.service.ts:18",{"_index":4552,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["scanner.service.ts:19",{"_index":1955,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["scanner.service.ts:37",{"_index":2257,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["scanner.service.ts:42",{"_index":4458,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["scanner.service.ts:48",{"_index":2260,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["scanner.service.ts:64",{"_index":4461,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["scanner.service.ts:9",{"_index":2256,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["scanner/erc20",{"_index":1937,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{}}}],["scanner/events",{"_index":1482,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scanner/interfaces/logs",{"_index":1991,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/LogFilter.html":{}}}],["scanner/interfaces/token",{"_index":1990,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{}}}],["scanner/transactions",{"_index":1485,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{}}}],["scanner/userop",{"_index":2250,"title":{},"body":{"modules/EventsScannerModule.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scannerservice",{"_index":1962,"title":{"classes/ScannerService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scannerservice:16",{"_index":1971,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scannerservice:20",{"_index":1972,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["scannerservice:21",{"_index":2259,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["scannerservice:32",{"_index":4455,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["scannerservice:35",{"_index":4554,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["scannerservice:38",{"_index":1963,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["scannerstatus",{"_index":3722,"title":{"interfaces/ScannerStatus.html":{}},"body":{"interfaces/ScannerStatus.html":{}}}],["scannerstatusservice",{"_index":1945,"title":{"classes/ScannerStatusService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["schedulemodule",{"_index":1585,"title":{},"body":{"modules/ConsensusModule.html":{}}}],["schedulemodule.forroot",{"_index":1590,"title":{},"body":{"modules/ConsensusModule.html":{}}}],["scripts/.../fuselegacysdk.ts",{"_index":5150,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["scripts/fuselegacysdk",{"_index":4500,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/fuselegacysdk.ts",{"_index":2361,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"miscellaneous/typealiases.html":{}}}],["scripts/fuselegacysdk.ts:118",{"_index":2385,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:136",{"_index":2386,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:146",{"_index":2387,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:183",{"_index":2384,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:197",{"_index":2382,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:202",{"_index":2391,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:217",{"_index":2394,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:239",{"_index":2395,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:271",{"_index":2397,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:287",{"_index":2400,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:71",{"_index":2380,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:72",{"_index":2381,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:73",{"_index":2383,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:74",{"_index":2388,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:75",{"_index":2393,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:76",{"_index":2390,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:77",{"_index":2378,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:79",{"_index":2399,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/fuselegacysdk.ts:91",{"_index":2398,"title":{},"body":{"classes/FuseLegacySDK.html":{}}}],["scripts/smartwalletstransfertokentesting.ts",{"_index":4484,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/smartwalletstransfertokentesting.ts:17",{"_index":4494,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/smartwalletstransfertokentesting.ts:34",{"_index":4495,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/smartwalletstransfertokentesting.ts:7",{"_index":4492,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/smartwalletstransfertokentesting.ts:8",{"_index":4493,"title":{},"body":{"classes/TransferToken.html":{}}}],["scripts/smartwalletstransfertokentesting.ts:9",{"_index":4490,"title":{},"body":{"classes/TransferToken.html":{}}}],["sdk",{"_index":4499,"title":{},"body":{"classes/TransferToken.html":{},"dependencies.html":{}}}],["searchobject",{"_index":1860,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["secondsinday",{"_index":4696,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["secret",{"_index":394,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"modules/AuthModule.html":{},"modules/ChargeApiModule.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{}}}],["secrethash",{"_index":332,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["secretkey",{"_index":526,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{}}}],["secretkey.slice(secretkey.length",{"_index":551,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["secretlastfourchars",{"_index":333,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["secretorkey",{"_index":2896,"title":{},"body":{"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["secretorkeyprovider",{"_index":2877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretprefix",{"_index":334,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["secretprefix}${await",{"_index":550,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["select",{"_index":546,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["send",{"_index":1144,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymentsService.html":{}}}],["send.service",{"_index":1071,"title":{},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{}}}],["send.service.ts",{"_index":4791,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["send.service.ts:14",{"_index":4796,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["send.service.ts:8",{"_index":4793,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["senddata",{"_index":4792,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["senddata(webhookevent",{"_index":4794,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["sender",{"_index":815,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"controllers/GraphqlController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/SmartWalletsAAEventsService.html":{},"interfaces/UserOp.html":{}}}],["sender.tolowercase",{"_index":2765,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["sending",{"_index":1128,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["sent",{"_index":784,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["senttoken",{"_index":4345,"title":{},"body":{"classes/SwapTokens.html":{}}}],["senttokendata",{"_index":4128,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["senttokendata.decimals",{"_index":4167,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["senttokendata.symbol",{"_index":4166,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["senttokendata.value",{"_index":4168,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["senttokendecimals",{"_index":4346,"title":{},"body":{"classes/SwapTokens.html":{}}}],["senttokendetails",{"_index":4159,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{}}}],["senttokendetails.decimals",{"_index":4363,"title":{},"body":{"classes/SwapTokens.html":{}}}],["senttokendetails.symbol",{"_index":4362,"title":{},"body":{"classes/SwapTokens.html":{}}}],["senttokendetails.value",{"_index":4348,"title":{},"body":{"classes/SwapTokens.html":{}}}],["senttokenvalueinwei",{"_index":4347,"title":{},"body":{"classes/SwapTokens.html":{}}}],["sentvalue",{"_index":4323,"title":{},"body":{"classes/SwapTokens.html":{}}}],["server",{"_index":281,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/PaymasterApiController.html":{},"injectables/UsersService.html":{}}}],["server.receive",{"_index":3165,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["server.receivejson",{"_index":3170,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["serverresponse",{"_index":250,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["service",{"_index":2261,"title":{},"body":{"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{}}}],["service.controller",{"_index":1429,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{}}}],["service.controller.ts",{"_index":1413,"title":{},"body":{"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{}}}],["service.controller.ts:6",{"_index":1414,"title":{},"body":{"controllers/ChargeApiServiceController.html":{},"controllers/ChargeAppsServiceController.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"controllers/ChargeSmartWalletsServiceController.html":{}}}],["service.module.ts",{"_index":1428,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{}}}],["service.service",{"_index":1430,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{}}}],["service.service.ts",{"_index":1447,"title":{},"body":{"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{}}}],["service.service.ts:5",{"_index":1449,"title":{},"body":{"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{}}}],["service.ts",{"_index":3701,"title":{},"body":{"classes/ScannerService.html":{}}}],["service.ts:14",{"_index":3705,"title":{},"body":{"classes/ScannerService.html":{}}}],["service.ts:16",{"_index":3703,"title":{},"body":{"classes/ScannerService.html":{}}}],["service.ts:20",{"_index":3707,"title":{},"body":{"classes/ScannerService.html":{}}}],["service.ts:6",{"_index":3702,"title":{},"body":{"classes/ScannerService.html":{}}}],["service/.env",{"_index":5109,"title":{},"body":{"index.html":{}}}],["service/.env.example",{"_index":5108,"title":{},"body":{"index.html":{}}}],["service/accounts.controller",{"_index":207,"title":{},"body":{"modules/AccountsModule.html":{}}}],["service/api",{"_index":349,"title":{},"body":{"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"controllers/BundlerApiController.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"controllers/ExplorerApiController.html":{},"modules/ExplorerApiModule.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/ProjectsService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["service/app",{"_index":210,"title":{},"body":{"modules/AccountsModule.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{}}}],["service/auth/auth.controller",{"_index":856,"title":{},"body":{"modules/AuthModule.html":{}}}],["service/auth/auth.module",{"_index":203,"title":{},"body":{"modules/AccountsModule.html":{},"modules/OperatorsModule.html":{}}}],["service/auth/guards/jwt",{"_index":636,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["service/auth/jwt.strategy",{"_index":855,"title":{},"body":{"modules/AuthModule.html":{}}}],["service/broadcaster/broadcaster.module",{"_index":1480,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["service/broadcaster/broadcaster.service",{"_index":1063,"title":{},"body":{"modules/BroadcasterModule.html":{}}}],["service/broadcaster/config/configuration",{"_index":1069,"title":{},"body":{"modules/BroadcasterModule.html":{}}}],["service/bundler",{"_index":1177,"title":{},"body":{"controllers/BundlerApiController.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiServiceModule.html":{}}}],["service/charge",{"_index":941,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"modules/SmartWalletsModule.html":{}}}],["service/common/config/abi/basictoken.json",{"_index":4410,"title":{},"body":{"injectables/TokenService.html":{}}}],["service/common/config/configuration",{"_index":1286,"title":{},"body":{"modules/ChargeApiModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{}}}],["service/common/config/decorators/user.decorator",{"_index":2095,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["service/common/config/rpc",{"_index":2247,"title":{},"body":{"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["service/common/constants",{"_index":4254,"title":{},"body":{"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["service/common/constants/abi/blockreward.json",{"_index":2612,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["service/common/constants/abi/consensus",{"_index":2610,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["service/common/constants/abi/entrypoint.json",{"_index":4560,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["service/common/constants/abi/erc20.json",{"_index":2608,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["service/common/constants/abi/fuseliquidstaking.json",{"_index":2606,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["service/common/constants/abi/voltbar.json",{"_index":4691,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["service/common/constants/addresess",{"_index":4143,"title":{},"body":{"classes/StakeTokens.html":{},"classes/UnstakeTokens.html":{}}}],["service/common/constants/addresses",{"_index":4464,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["service/common/constants/fusetokeninfo",{"_index":2962,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{}}}],["service/common/constants/graph",{"_index":2755,"title":{},"body":{"controllers/GraphqlController.html":{},"injectables/VoltBarService.html":{}}}],["service/common/constants/token",{"_index":1973,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{}}}],["service/common/constants/tokentypes",{"_index":803,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["service/common/constants/webhook",{"_index":1107,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["service/common/decorators/log",{"_index":1975,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["service/common/interfaces/event",{"_index":1986,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhooksService.html":{}}}],["service/common/interfaces/webhook",{"_index":1109,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["service/common/providers/webhook",{"_index":1067,"title":{},"body":{"modules/BroadcasterModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/WebhooksModule.html":{}}}],["service/common/scanner",{"_index":1994,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["service/common/schemas/webhook",{"_index":4885,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/common/services/token.service",{"_index":1722,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/WalletAction.html":{}}}],["service/common/services/user",{"_index":1719,"title":{},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/UserOpFactory.html":{}}}],["service/common/utils/helper",{"_index":1787,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["service/common/utils/wallet",{"_index":1781,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["service/consensus",{"_index":1445,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{}}}],["service/consensus/consensus.controller",{"_index":1587,"title":{},"body":{"modules/ConsensusModule.html":{}}}],["service/consensus/consensus.module",{"_index":1473,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{}}}],["service/consensus/consensus.service",{"_index":1575,"title":{},"body":{"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{}}}],["service/consensus/dto/consensus.dto",{"_index":1527,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{}}}],["service/data",{"_index":804,"title":{},"body":{"classes/ApproveToken.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpFactory.html":{}}}],["service/dto/smart",{"_index":3753,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["service/ethereum",{"_index":945,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"modules/ChargeAppsServiceModule.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{}}}],["service/events",{"_index":1481,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["service/explorer",{"_index":1437,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/ExplorerApiController.html":{},"modules/ExplorerApiModule.html":{}}}],["service/graphql",{"_index":1443,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/GraphqlAPIController.html":{}}}],["service/graphql/graphql.module",{"_index":1472,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{}}}],["service/legacy",{"_index":1431,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/LegacyAdminApiController.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["service/notifications/notifications.controller",{"_index":3026,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["service/notifications/notifications.module",{"_index":1434,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/SmartWalletsModule.html":{}}}],["service/notifications/notifications.service",{"_index":2806,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["service/operators/dto/auth",{"_index":3113,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/operators/dto/create",{"_index":3110,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/operators/operator",{"_index":3142,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["service/operators/operators.constants",{"_index":2861,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["service/operators/operators.controller",{"_index":3141,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["service/operators/operators.module",{"_index":213,"title":{},"body":{"modules/AccountsModule.html":{},"modules/SmartWalletsModule.html":{}}}],["service/operators/operators.providers",{"_index":3145,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["service/operators/operators.service",{"_index":3112,"title":{},"body":{"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{}}}],["service/paymaster",{"_index":1439,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{}}}],["service/paymaster/interfaces/paymaster.interface",{"_index":3348,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/paymaster/paymaster.constants",{"_index":3350,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/paymaster/paymaster.controller",{"_index":3326,"title":{},"body":{"modules/PaymasterModule.html":{}}}],["service/paymaster/paymaster.module",{"_index":206,"title":{},"body":{"modules/AccountsModule.html":{},"modules/OperatorsModule.html":{}}}],["service/paymaster/paymaster.providers",{"_index":3328,"title":{},"body":{"modules/PaymasterModule.html":{}}}],["service/paymaster/paymaster.service",{"_index":3308,"title":{},"body":{"controllers/PaymasterController.html":{},"modules/PaymasterModule.html":{}}}],["service/payments/dto/create",{"_index":640,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["service/payments/dto/transfer",{"_index":642,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["service/payments/interfaces/payment",{"_index":3444,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/payments/interfaces/webhook",{"_index":2091,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["service/payments/payments.constants",{"_index":3443,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/payments/payments.controller",{"_index":3416,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["service/payments/payments.module",{"_index":1460,"title":{},"body":{"modules/ChargeAppsServiceModule.html":{}}}],["service/payments/payments.providers",{"_index":3418,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["service/payments/payments.service",{"_index":3397,"title":{},"body":{"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{}}}],["service/payments/schemas/payment",{"_index":3445,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/projects/dto/create",{"_index":3544,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["service/projects/dto/update",{"_index":3546,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["service/projects/guards/is",{"_index":3307,"title":{},"body":{"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{}}}],["service/projects/interfaces/project.interface",{"_index":3599,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/projects/projects.constants",{"_index":3601,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/projects/projects.controller",{"_index":3575,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["service/projects/projects.module",{"_index":205,"title":{},"body":{"modules/AccountsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/SmartWalletsModule.html":{}}}],["service/projects/projects.providers",{"_index":3577,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["service/projects/projects.service",{"_index":2835,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["service/relay",{"_index":1493,"title":{},"body":{"modules/ChargeRelayServiceModule.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{}}}],["service/smart",{"_index":1441,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{}}}],["service/src/accounts.controller.ts",{"_index":170,"title":{},"body":{"controllers/AccountsController.html":{}}}],["service/src/accounts.controller.ts:6",{"_index":176,"title":{},"body":{"controllers/AccountsController.html":{}}}],["service/src/accounts.module.ts",{"_index":200,"title":{},"body":{"modules/AccountsModule.html":{}}}],["service/src/api",{"_index":323,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"interfaces/CreateSecretDto.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["service/src/app",{"_index":217,"title":{},"body":{"interfaces/ActivatedApp.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["service/src/auth/auth.controller.ts",{"_index":828,"title":{},"body":{"controllers/AuthController.html":{}}}],["service/src/auth/auth.controller.ts:19",{"_index":833,"title":{},"body":{"controllers/AuthController.html":{}}}],["service/src/auth/auth.controller.ts:29",{"_index":837,"title":{},"body":{"controllers/AuthController.html":{}}}],["service/src/auth/auth.module.ts",{"_index":852,"title":{},"body":{"modules/AuthModule.html":{}}}],["service/src/auth/guards/jwt",{"_index":2856,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["service/src/auth/jwt.strategy.ts",{"_index":2862,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["service/src/auth/jwt.strategy.ts:24",{"_index":2867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["service/src/auth/jwt.strategy.ts:7",{"_index":2865,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["service/src/broadcaster/broadcaster.module.ts",{"_index":1061,"title":{},"body":{"modules/BroadcasterModule.html":{}}}],["service/src/broadcaster/broadcaster.service.ts",{"_index":1072,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:105",{"_index":1085,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:111",{"_index":1095,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:12",{"_index":1082,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:21",{"_index":1101,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:25",{"_index":1103,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:29",{"_index":1091,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:33",{"_index":1097,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:37",{"_index":1098,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/broadcaster/broadcaster.service.ts:97",{"_index":1089,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["service/src/bundler",{"_index":1170,"title":{},"body":{"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{}}}],["service/src/charge",{"_index":875,"title":{},"body":{"interfaces/BackendWallet.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/common/config/configuration",{"_index":1588,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/GraphqlModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{}}}],["service/src/common/constants/token",{"_index":5036,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service/src/common/interfaces/event",{"_index":2233,"title":{},"body":{"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["service/src/common/interfaces/scanner",{"_index":3723,"title":{},"body":{"interfaces/ScannerStatus.html":{}}}],["service/src/common/interfaces/webhook",{"_index":4788,"title":{},"body":{"interfaces/WebhookEvent-1.html":{}}}],["service/src/common/scanner",{"_index":3700,"title":{},"body":{"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{}}}],["service/src/common/schemas/webhook",{"_index":5024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service/src/common/services/relay",{"_index":3622,"title":{},"body":{"injectables/RelayAPIService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{}}}],["service/src/common/services/token.service.ts",{"_index":4404,"title":{},"body":{"injectables/TokenService.html":{}}}],["service/src/common/services/token.service.ts:12",{"_index":4406,"title":{},"body":{"injectables/TokenService.html":{}}}],["service/src/common/services/token.service.ts:18",{"_index":4408,"title":{},"body":{"injectables/TokenService.html":{}}}],["service/src/common/services/user",{"_index":4569,"title":{},"body":{"injectables/UserOpFactory.html":{},"injectables/UserOpParser-1.html":{}}}],["service/src/common/utils/helper",{"_index":4079,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["service/src/consensus",{"_index":1508,"title":{},"body":{"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{}}}],["service/src/consensus/consensus.controller.ts",{"_index":1564,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["service/src/consensus/consensus.controller.ts:11",{"_index":1571,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["service/src/consensus/consensus.controller.ts:16",{"_index":1569,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["service/src/consensus/consensus.controller.ts:21",{"_index":1567,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["service/src/consensus/consensus.controller.ts:26",{"_index":1573,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["service/src/consensus/consensus.module.ts",{"_index":1584,"title":{},"body":{"modules/ConsensusModule.html":{}}}],["service/src/consensus/dto/consensus.dto.ts",{"_index":1931,"title":{},"body":{"classes/DelegatedAmountsDto.html":{}}}],["service/src/consensus/dto/consensus.dto.ts:5",{"_index":1934,"title":{},"body":{"classes/DelegatedAmountsDto.html":{}}}],["service/src/consensus/dto/consensus.dto.ts:8",{"_index":1933,"title":{},"body":{"classes/DelegatedAmountsDto.html":{}}}],["service/src/consensus/interfaces/index.ts",{"_index":2773,"title":{},"body":{"interfaces/IValidator.html":{}}}],["service/src/data",{"_index":764,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["service/src/dto/smart",{"_index":3935,"title":{},"body":{"classes/SmartWalletsAuthDto.html":{}}}],["service/src/ethereum",{"_index":883,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"classes/TransferTokensEthereumDto.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/events",{"_index":1936,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"interfaces/LogFilter.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["service/src/explorer",{"_index":2267,"title":{},"body":{"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{}}}],["service/src/graphql",{"_index":2724,"title":{},"body":{"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{}}}],["service/src/graphql/graphql.controller",{"_index":2769,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["service/src/graphql/graphql.controller.ts",{"_index":2748,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["service/src/graphql/graphql.controller.ts:24",{"_index":2750,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["service/src/graphql/graphql.controller.ts:29",{"_index":2753,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["service/src/graphql/graphql.module.ts",{"_index":2768,"title":{},"body":{"modules/GraphqlModule.html":{}}}],["service/src/legacy",{"_index":2898,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["service/src/notifications/notifications.controller.ts",{"_index":2975,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:16",{"_index":2982,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:21",{"_index":3004,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:26",{"_index":2988,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:31",{"_index":2994,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:36",{"_index":3000,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:41",{"_index":2985,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:46",{"_index":2997,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.controller.ts:51",{"_index":2991,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["service/src/notifications/notifications.module.ts",{"_index":3025,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["service/src/notifications/notifications.service.ts",{"_index":3029,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:14",{"_index":3036,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:19",{"_index":3040,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:23",{"_index":3050,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:27",{"_index":3043,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:31",{"_index":3048,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:35",{"_index":3046,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:39",{"_index":3038,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:43",{"_index":3044,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/notifications/notifications.service.ts:47",{"_index":3041,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["service/src/operators/dto/auth",{"_index":867,"title":{},"body":{"classes/AuthOperatorDto.html":{}}}],["service/src/operators/dto/create",{"_index":1620,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{}}}],["service/src/operators/interfaces/operator",{"_index":3068,"title":{},"body":{"interfaces/OperatorWallet.html":{}}}],["service/src/operators/interfaces/production",{"_index":3492,"title":{},"body":{"interfaces/PrdOrSbxKeyRequest.html":{}}}],["service/src/operators/operator",{"_index":3063,"title":{},"body":{"injectables/OperatorJwtStrategy.html":{}}}],["service/src/operators/operators.controller.ts",{"_index":3070,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:100",{"_index":3090,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:23",{"_index":3081,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:34",{"_index":3107,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:45",{"_index":3095,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:56",{"_index":3087,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:64",{"_index":3103,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:74",{"_index":3084,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:89",{"_index":3099,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.controller.ts:95",{"_index":3092,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["service/src/operators/operators.module.ts",{"_index":3140,"title":{},"body":{"modules/OperatorsModule.html":{}}}],["service/src/paymaster",{"_index":3147,"title":{},"body":{"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{}}}],["service/src/paymaster/interfaces/paymaster.interface.ts",{"_index":3318,"title":{},"body":{"interfaces/PaymasterInfo.html":{}}}],["service/src/paymaster/paymaster.controller.ts",{"_index":3291,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["service/src/paymaster/paymaster.controller.ts:18",{"_index":3306,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["service/src/paymaster/paymaster.controller.ts:24",{"_index":3297,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["service/src/paymaster/paymaster.controller.ts:30",{"_index":3304,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["service/src/paymaster/paymaster.controller.ts:35",{"_index":3300,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["service/src/paymaster/paymaster.module",{"_index":358,"title":{},"body":{"modules/ApiKeyModule.html":{}}}],["service/src/paymaster/paymaster.module.ts",{"_index":3325,"title":{},"body":{"modules/PaymasterModule.html":{}}}],["service/src/paymaster/paymaster.service.ts",{"_index":3329,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:16",{"_index":3338,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:53",{"_index":3344,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:61",{"_index":3342,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:67",{"_index":3340,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:73",{"_index":3345,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:78",{"_index":3347,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/paymaster/paymaster.service.ts:8",{"_index":3334,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["service/src/payments/dto/create",{"_index":1641,"title":{},"body":{"classes/CreatePaymentLinkDto.html":{}}}],["service/src/payments/dto/transfer",{"_index":4518,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["service/src/payments/interfaces/payment",{"_index":3376,"title":{},"body":{"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{}}}],["service/src/payments/interfaces/webhook",{"_index":4786,"title":{},"body":{"interfaces/WebhookEvent.html":{}}}],["service/src/payments/payments.controller.ts",{"_index":3379,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:17",{"_index":3386,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:22",{"_index":3382,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:29",{"_index":3384,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:34",{"_index":3387,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:41",{"_index":3389,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:46",{"_index":3395,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:53",{"_index":3392,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.controller.ts:58",{"_index":3394,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["service/src/payments/payments.module.ts",{"_index":3415,"title":{},"body":{"modules/PaymentsModule.html":{}}}],["service/src/payments/payments.service.ts",{"_index":3419,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:103",{"_index":3425,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:113",{"_index":3426,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:117",{"_index":3429,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:124",{"_index":3434,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:136",{"_index":3430,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:19",{"_index":3422,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:200",{"_index":3433,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:31",{"_index":3436,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:35",{"_index":3438,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:39",{"_index":3439,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:43",{"_index":3440,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:47",{"_index":3427,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:51",{"_index":3432,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:63",{"_index":3423,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/payments.service.ts:75",{"_index":3424,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["service/src/payments/schemas/payment",{"_index":5035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service/src/projects/dto/create",{"_index":1645,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["service/src/projects/dto/update",{"_index":4544,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["service/src/projects/guards/is",{"_index":2819,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["service/src/projects/interfaces/project.interface.ts",{"_index":3494,"title":{},"body":{"interfaces/Project.html":{}}}],["service/src/projects/projects.controller.ts",{"_index":3496,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:101",{"_index":3525,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:112",{"_index":3542,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:123",{"_index":3531,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:134",{"_index":3508,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:145",{"_index":3535,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:150",{"_index":3523,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:155",{"_index":3521,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:160",{"_index":3533,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:30",{"_index":3506,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:39",{"_index":3513,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:50",{"_index":3516,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:56",{"_index":3529,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:68",{"_index":3539,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:79",{"_index":3511,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.controller.ts:90",{"_index":3502,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["service/src/projects/projects.module",{"_index":359,"title":{},"body":{"modules/ApiKeyModule.html":{}}}],["service/src/projects/projects.module.ts",{"_index":3574,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["service/src/projects/projects.service.ts",{"_index":3580,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:15",{"_index":3584,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:24",{"_index":3586,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:33",{"_index":3590,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:37",{"_index":3592,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:41",{"_index":3589,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:46",{"_index":3597,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:55",{"_index":3588,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:63",{"_index":3587,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:68",{"_index":3594,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:74",{"_index":3596,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:78",{"_index":3585,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:87",{"_index":3593,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:91",{"_index":3598,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/projects/projects.service.ts:95",{"_index":3595,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["service/src/relay",{"_index":3642,"title":{},"body":{"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{}}}],["service/src/smart",{"_index":2892,"title":{},"body":{"injectables/JwtStrategy-1.html":{},"classes/RelayDto.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/TokenTransferWebhookDto.html":{},"miscellaneous/enumerations.html":{}}}],["service/src/staking",{"_index":4180,"title":{},"body":{"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{}}}],["service/src/staking/dto/stake.dto.ts",{"_index":4118,"title":{},"body":{"classes/StakeDto.html":{}}}],["service/src/staking/dto/stake.dto.ts:11",{"_index":4120,"title":{},"body":{"classes/StakeDto.html":{}}}],["service/src/staking/dto/stake.dto.ts:5",{"_index":4119,"title":{},"body":{"classes/StakeDto.html":{}}}],["service/src/staking/dto/stake.dto.ts:8",{"_index":4121,"title":{},"body":{"classes/StakeDto.html":{}}}],["service/src/staking/dto/unstake.dto.ts",{"_index":4533,"title":{},"body":{"classes/UnstakeDto.html":{}}}],["service/src/staking/dto/unstake.dto.ts:11",{"_index":4535,"title":{},"body":{"classes/UnstakeDto.html":{}}}],["service/src/staking/dto/unstake.dto.ts:5",{"_index":4534,"title":{},"body":{"classes/UnstakeDto.html":{}}}],["service/src/staking/dto/unstake.dto.ts:8",{"_index":4536,"title":{},"body":{"classes/UnstakeDto.html":{}}}],["service/src/staking/graph.service.ts",{"_index":2702,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:19",{"_index":2713,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:23",{"_index":2710,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:27",{"_index":2712,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:7",{"_index":2715,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:8",{"_index":2714,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/graph.service.ts:9",{"_index":2709,"title":{},"body":{"injectables/GraphService.html":{}}}],["service/src/staking/interfaces/index.ts",{"_index":4169,"title":{},"body":{"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{}}}],["service/src/staking/staking",{"_index":2564,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["service/src/staking/staking.controller.ts",{"_index":4207,"title":{},"body":{"controllers/StakingController.html":{}}}],["service/src/staking/staking.controller.ts:12",{"_index":4213,"title":{},"body":{"controllers/StakingController.html":{}}}],["service/src/staking/staking.controller.ts:17",{"_index":4209,"title":{},"body":{"controllers/StakingController.html":{}}}],["service/src/staking/staking.controller.ts:22",{"_index":4215,"title":{},"body":{"controllers/StakingController.html":{}}}],["service/src/staking/staking.controller.ts:27",{"_index":4211,"title":{},"body":{"controllers/StakingController.html":{}}}],["service/src/staking/staking.module.ts",{"_index":4227,"title":{},"body":{"modules/StakingModule.html":{}}}],["service/src/staking/staking.service.ts",{"_index":4234,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:13",{"_index":4239,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:20",{"_index":4250,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:24",{"_index":4246,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:42",{"_index":4244,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:52",{"_index":4247,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:62",{"_index":4245,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:85",{"_index":4241,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/staking/staking.service.ts:89",{"_index":4243,"title":{},"body":{"injectables/StakingService.html":{}}}],["service/src/studio",{"_index":4281,"title":{},"body":{"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{}}}],["service/src/transactions",{"_index":4446,"title":{},"body":{"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{}}}],["service/src/users/dto/create",{"_index":1651,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["service/src/users/dto/submit",{"_index":4314,"title":{},"body":{"classes/SubmitQuestionnaireDto.html":{}}}],["service/src/users/guards/is",{"_index":2789,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{}}}],["service/src/users/interfaces/user.interface.ts",{"_index":4551,"title":{},"body":{"interfaces/User.html":{}}}],["service/src/users/users.controller.ts",{"_index":4618,"title":{},"body":{"controllers/UsersController.html":{}}}],["service/src/users/users.controller.ts:20",{"_index":4623,"title":{},"body":{"controllers/UsersController.html":{}}}],["service/src/users/users.controller.ts:28",{"_index":4620,"title":{},"body":{"controllers/UsersController.html":{}}}],["service/src/users/users.module.ts",{"_index":4637,"title":{},"body":{"modules/UsersModule.html":{}}}],["service/src/users/users.service.ts",{"_index":4641,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:15",{"_index":4646,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:21",{"_index":4647,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:25",{"_index":4648,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:29",{"_index":4650,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:33",{"_index":4651,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/users/users.service.ts:9",{"_index":4644,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/src/webhooks/dto/create",{"_index":1653,"title":{},"body":{"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{}}}],["service/src/webhooks/dto/update",{"_index":4548,"title":{},"body":{"classes/UpdateWebhookDto.html":{}}}],["service/src/webhooks/interfaces/webhook",{"_index":4784,"title":{},"body":{"interfaces/WebhookAddress.html":{}}}],["service/src/webhooks/interfaces/webhook.interface.ts",{"_index":4782,"title":{},"body":{"interfaces/Webhook.html":{}}}],["service/src/webhooks/schemas/webhook.schema.ts",{"_index":5025,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service/src/webhooks/webhooks.controller.ts",{"_index":4808,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:13",{"_index":4812,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:18",{"_index":4830,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:23",{"_index":4816,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:28",{"_index":4820,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:33",{"_index":4828,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:38",{"_index":4814,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:43",{"_index":4822,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:48",{"_index":4818,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.controller.ts:54",{"_index":4826,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["service/src/webhooks/webhooks.module.ts",{"_index":4847,"title":{},"body":{"modules/WebhooksModule.html":{}}}],["service/src/webhooks/webhooks.service.ts",{"_index":4851,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:105",{"_index":4871,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:122",{"_index":4876,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:140",{"_index":4861,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:171",{"_index":4874,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:18",{"_index":4858,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:180",{"_index":4864,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:29",{"_index":4865,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:33",{"_index":4877,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:41",{"_index":4867,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:51",{"_index":4869,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:55",{"_index":4873,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:59",{"_index":4866,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:88",{"_index":4870,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/src/webhooks/webhooks.service.ts:92",{"_index":4868,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/staking",{"_index":1435,"title":{},"body":{"modules/ChargeApiServiceModule.html":{},"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{}}}],["service/staking/dto/stake.dto",{"_index":4170,"title":{},"body":{"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["service/staking/dto/unstake.dto",{"_index":2616,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["service/staking/graph.service",{"_index":4232,"title":{},"body":{"modules/StakingModule.html":{},"injectables/VoltBarService.html":{}}}],["service/staking/interfaces",{"_index":2618,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/StakingAPIService.html":{},"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["service/staking/staking",{"_index":4229,"title":{},"body":{"modules/StakingModule.html":{},"injectables/StakingService.html":{}}}],["service/staking/staking.controller",{"_index":4228,"title":{},"body":{"modules/StakingModule.html":{}}}],["service/staking/staking.module",{"_index":1471,"title":{},"body":{"modules/ChargeNetworkServiceModule.html":{}}}],["service/staking/staking.service",{"_index":4217,"title":{},"body":{"controllers/StakingController.html":{},"modules/StakingModule.html":{}}}],["service/studio",{"_index":354,"title":{},"body":{"modules/ApiKeyModule.html":{},"injectables/ApiKeysService.html":{},"modules/StudioLegacyJwtModule.html":{}}}],["service/transactions",{"_index":1484,"title":{},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["service/users/dto/create",{"_index":841,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["service/users/dto/submit",{"_index":4626,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["service/users/guards/is",{"_index":4628,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/users/interfaces/user.interface",{"_index":4652,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users/user.decorator",{"_index":639,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{}}}],["service/users/users.constants",{"_index":4654,"title":{},"body":{"injectables/UsersService.html":{}}}],["service/users/users.controller",{"_index":4638,"title":{},"body":{"modules/UsersModule.html":{}}}],["service/users/users.module",{"_index":204,"title":{},"body":{"modules/AccountsModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsModule.html":{}}}],["service/users/users.providers",{"_index":4640,"title":{},"body":{"modules/UsersModule.html":{}}}],["service/users/users.service",{"_index":720,"title":{},"body":{"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/webhooks/dto/create",{"_index":3005,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/UpdateWebhookDto.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["service/webhooks/dto/update",{"_index":3006,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["service/webhooks/interfaces/webhook",{"_index":4879,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/webhooks/interfaces/webhook.interface",{"_index":1112,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/NotificationsService.html":{},"injectables/WebhooksService.html":{}}}],["service/webhooks/schemas/webhook.schema",{"_index":1105,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/CreateWebhookDto.html":{},"injectables/WebhooksService.html":{}}}],["service/webhooks/webhooks.constants",{"_index":4883,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["service/webhooks/webhooks.controller",{"_index":4848,"title":{},"body":{"modules/WebhooksModule.html":{}}}],["service/webhooks/webhooks.module",{"_index":1064,"title":{},"body":{"modules/BroadcasterModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["service/webhooks/webhooks.providers",{"_index":4850,"title":{},"body":{"modules/WebhooksModule.html":{}}}],["service/webhooks/webhooks.service",{"_index":1988,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{}}}],["set",{"_index":5061,"title":{},"body":{"index.html":{}}}],["settimeout(async",{"_index":1352,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["settimeout(resolve",{"_index":969,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["settokenservice",{"_index":776,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["settokenservice(tokenservice",{"_index":797,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["sfbalance",{"_index":2639,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["sfcontract",{"_index":2635,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["sfcontract.balanceof(accountaddress",{"_index":2640,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["sftokenaddress",{"_index":2573,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["sharedaddresses",{"_index":3984,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["sig",{"_index":2311,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["sighash",{"_index":1912,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["sighashfromcalldata",{"_index":2324,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["signature",{"_index":12,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AuthOperatorDto.html":{},"interfaces/BaseUserOp.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"classes/RelayDto.html":{},"injectables/SmartWalletsAAService.html":{},"classes/SmartWalletsAuthDto.html":{},"injectables/SmartWalletsLegacyService.html":{},"interfaces/UserOp.html":{}}}],["signatureforestimateuseropgascall",{"_index":3240,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["signatures",{"_index":2307,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"miscellaneous/typealiases.html":{}}}],["signhash",{"_index":3188,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["signhash(hash",{"_index":3212,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["sigtype",{"_index":2309,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["situations",{"_index":258,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["sk_",{"_index":549,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["sleep",{"_index":886,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["sleep(500",{"_index":4062,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["sleep(timeout",{"_index":3718,"title":{},"body":{"classes/ScannerService.html":{}}}],["smart",{"_index":762,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/OperatorsController.html":{},"injectables/RelayAPIService.html":{},"classes/RelayDto.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser-1.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["smartcontractwallet",{"_index":3740,"title":{"interfaces/SmartContractWallet.html":{}},"body":{"interfaces/SmartContractWallet.html":{},"injectables/SmartWalletsAAService.html":{}}}],["smartcontractwalletmodel",{"_index":3817,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["smartcontractwalletstring",{"_index":3830,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["smartwallet",{"_index":2392,"title":{"interfaces/SmartWallet.html":{}},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"miscellaneous/typealiases.html":{}}}],["smartwallet.iscontractdeployed",{"_index":4082,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["smartwallet.salt",{"_index":4087,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletaddress",{"_index":1635,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{},"classes/FuseLegacySDK.html":{},"interfaces/ISmartWalletUser.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/OperatorWallet.html":{},"injectables/RelayAPIService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"classes/SmartWalletsAuthDto.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletcreationfailed",{"_index":5042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smartwalletcreationstarted",{"_index":5040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smartwalletcreationsucceeded",{"_index":5044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["smartwalletmodel",{"_index":3987,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletowner",{"_index":3871,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["smartwalletsaaeventsservice",{"_index":1710,"title":{"injectables/SmartWalletsAAEventsService.html":{}},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"overview.html":{}}}],["smartwalletsaaservice",{"_index":3810,"title":{"injectables/SmartWalletsAAService.html":{}},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["smartwalletsapicontroller",{"_index":3856,"title":{"controllers/SmartWalletsAPIController.html":{}},"body":{"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["smartwalletsapimodule",{"_index":1425,"title":{"modules/SmartWalletsAPIModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules.html":{},"overview.html":{}}}],["smartwalletsapiservice",{"_index":3869,"title":{"injectables/SmartWalletsAPIService.html":{}},"body":{"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"overview.html":{}}}],["smartwalletsapiv2controller",{"_index":3890,"title":{"controllers/SmartWalletsAPIV2Controller.html":{}},"body":{"modules/SmartWalletsAPIModule.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["smartwalletsauthdto",{"_index":3752,"title":{"classes/SmartWalletsAuthDto.html":{}},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletsauthdto.owneraddress",{"_index":3837,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletsauthdto.projectid",{"_index":3855,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["smartwalletsauthdto.signature",{"_index":3833,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletsauthdto.smartwalletaddress",{"_index":3836,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsController.html":{}}}],["smartwalletsclient",{"_index":3896,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["smartwalletscontroller",{"_index":3942,"title":{"controllers/SmartWalletsController.html":{}},"body":{"controllers/SmartWalletsController.html":{},"modules/SmartWalletsModule.html":{}}}],["smartwalletservice",{"_index":3756,"title":{"interfaces/SmartWalletService.html":{}},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletseventsservice",{"_index":3974,"title":{"injectables/SmartWalletsEventsService.html":{}},"body":{"injectables/SmartWalletsEventsService.html":{},"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["smartwalletslegacyservice",{"_index":3961,"title":{"injectables/SmartWalletsLegacyService.html":{}},"body":{"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"overview.html":{}}}],["smartwalletsmodule",{"_index":1502,"title":{"modules/SmartWalletsModule.html":{}},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"modules/SmartWalletsModule.html":{},"modules.html":{},"overview.html":{}}}],["smartwalletsproviders",{"_index":4106,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["smartwalletsservice",{"_index":1214,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/EventsScannerModule.html":{},"modules/OperatorsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["smartwalletstring",{"_index":4016,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["smartwalletuser",{"_index":3949,"title":{},"body":{"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["socket_server_url",{"_index":2429,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["sort",{"_index":1866,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"modules/AccountsModule.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"modules/ApiKeyModule.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"modules/ApiKeysModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"controllers/BundlerApiController.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"modules/ChargeApiServiceModule.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"modules/ChargeAppsServiceModule.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"modules/ChargeNetworkServiceModule.html":{},"controllers/ChargeNotificationsServiceController.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeRelayServiceController.html":{},"modules/ChargeRelayServiceModule.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/ConsensusApiController.html":{},"modules/ConsensusApiModule.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"modules/ConsensusModule.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"modules/DatabaseModule.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"modules/EventsScannerModule.html":{},"injectables/EventsScannerService.html":{},"controllers/ExplorerApiController.html":{},"injectables/ExplorerApiInterceptor.html":{},"modules/ExplorerApiModule.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"modules/GraphqlAPIModule.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"modules/GraphqlModule.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"controllers/LegacyAdminApiController.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"modules/OperatorsModule.html":{},"controllers/PaymasterApiController.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"modules/PaymasterModule.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"modules/RelayAccountsModule.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"controllers/TradeApiController.html":{},"injectables/TradeService.html":{},"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{}}}],["sparkprovider",{"_index":3191,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["special",{"_index":2931,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["specifics",{"_index":5078,"title":{},"body":{"index.html":{}}}],["specifies",{"_index":1023,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["spent",{"_index":1050,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["sponsored",{"_index":3100,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["sponsoredtransactionscount",{"_index":1671,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["sponsoredtransactionscount(sponsorid",{"_index":1686,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["sponsorid",{"_index":1011,"title":{},"body":{"interfaces/BaseUserOp.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/PaymasterApiService.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/UserOp.html":{}}}],["stack",{"_index":5095,"title":{},"body":{"index.html":{}}}],["stake",{"_index":2568,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stake(stakedto",{"_index":4186,"title":{},"body":{"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{}}}],["stake(undefined",{"_index":4673,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["stakeamount",{"_index":2781,"title":{},"body":{"interfaces/IValidator.html":{}}}],["staked",{"_index":4165,"title":{},"body":{"classes/StakeTokens.html":{},"injectables/StakingService.html":{}}}],["staked_tokens",{"_index":4194,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["stakedamount",{"_index":2641,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakedamountusd",{"_index":2646,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakedto",{"_index":4117,"title":{"classes/StakeDto.html":{}},"body":{"classes/StakeDto.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakedtoken",{"_index":2569,"title":{"interfaces/StakedToken.html":{}},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakedtoken(accountaddress",{"_index":2583,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["stakedtoken.stakedamount",{"_index":4270,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakedtokens",{"_index":4175,"title":{},"body":{"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{}}}],["stakedtokens(accountaddress",{"_index":4188,"title":{},"body":{"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{}}}],["stakedtokens.push(stakedtoken",{"_index":4271,"title":{},"body":{"injectables/StakingService.html":{}}}],["staketokens",{"_index":4122,"title":{"classes/StakeTokens.html":{}},"body":{"classes/StakeTokens.html":{}}}],["staking",{"_index":4716,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["staking.service",{"_index":4233,"title":{},"body":{"modules/StakingModule.html":{},"injectables/StakingService.html":{}}}],["staking.service.ts",{"_index":2567,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:102",{"_index":2586,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:119",{"_index":2587,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:22",{"_index":2581,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:31",{"_index":2592,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:35",{"_index":2594,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:39",{"_index":2596,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:43",{"_index":2598,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:47",{"_index":2600,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:51",{"_index":2602,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:55",{"_index":2604,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:59",{"_index":2582,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:63",{"_index":2590,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking.service.ts:67",{"_index":2585,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["staking_options",{"_index":4193,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["stakingapicontroller",{"_index":4181,"title":{"controllers/StakingApiController.html":{}},"body":{"modules/StakingAPIModule.html":{},"controllers/StakingApiController.html":{}}}],["stakingapimodule",{"_index":1426,"title":{"modules/StakingAPIModule.html":{}},"body":{"modules/ChargeApiServiceModule.html":{},"modules/StakingAPIModule.html":{},"modules.html":{},"overview.html":{}}}],["stakingapiservice",{"_index":4179,"title":{"injectables/StakingAPIService.html":{}},"body":{"modules/StakingAPIModule.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"overview.html":{}}}],["stakingapr",{"_index":2570,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakingclient",{"_index":4185,"title":{},"body":{"injectables/StakingAPIService.html":{}}}],["stakingcontroller",{"_index":4206,"title":{"controllers/StakingController.html":{}},"body":{"controllers/StakingController.html":{},"modules/StakingModule.html":{}}}],["stakingdata",{"_index":4707,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["stakingmodule",{"_index":1469,"title":{"modules/StakingModule.html":{}},"body":{"modules/ChargeNetworkServiceModule.html":{},"modules/StakingModule.html":{},"modules.html":{},"overview.html":{}}}],["stakingoption",{"_index":2584,"title":{"interfaces/StakingOption.html":{}},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakingoption.stakingproviderid",{"_index":4275,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingoption.tokenaddress",{"_index":4274,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingoptions",{"_index":4182,"title":{},"body":{"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{}}}],["stakingoptionsconfig",{"_index":4237,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingoptionsdata",{"_index":4256,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingoptionsdata.push",{"_index":4261,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider",{"_index":2617,"title":{"interfaces/StakingProvider.html":{}},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakingprovider.address",{"_index":4264,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider.stake(stakedto",{"_index":4266,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider.stakedtoken(accountaddress",{"_index":4269,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider.stakingapr(stakingoption",{"_index":4259,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider.tvl(stakingoption",{"_index":4260,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingprovider.unstake(unstakedto",{"_index":4268,"title":{},"body":{"injectables/StakingService.html":{}}}],["stakingproviderid",{"_index":4171,"title":{},"body":{"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["stakingservice",{"_index":4216,"title":{"injectables/StakingService.html":{}},"body":{"controllers/StakingController.html":{},"modules/StakingModule.html":{},"injectables/StakingService.html":{},"overview.html":{}}}],["stamati",{"_index":5145,"title":{},"body":{"properties.html":{}}}],["standard",{"_index":5071,"title":{},"body":{"index.html":{}}}],["start",{"_index":1078,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"index.html":{}}}],["start:dev",{"_index":5127,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":5128,"title":{},"body":{"index.html":{}}}],["started",{"_index":5052,"title":{"index.html":{}},"body":{}}],["starter",{"_index":5099,"title":{},"body":{"index.html":{}}}],["starttimestamp",{"_index":4722,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["statemutability",{"_index":2441,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["stats",{"_index":4723,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["stats?.bars",{"_index":4729,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["stats?.voltbalancehistories",{"_index":4727,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["status",{"_index":291,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ApproveToken.html":{},"injectables/BroadcasterService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"interfaces/IValidator.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"miscellaneous/enumerations.html":{}}}],["status.blocknumber",{"_index":3713,"title":{},"body":{"classes/ScannerService.html":{}}}],["status.interface.ts",{"_index":3724,"title":{},"body":{"interfaces/ScannerStatus.html":{}}}],["status.not_paid",{"_index":2209,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["status.overpaid",{"_index":2224,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["status.service",{"_index":1995,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["status.service.ts",{"_index":3725,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["status.service.ts:1",{"_index":3730,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["status.service.ts:24",{"_index":3734,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["status.service.ts:9",{"_index":3732,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["status.successful",{"_index":2223,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["status.underpaid",{"_index":2225,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["status.wrong_token",{"_index":2222,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["statuscode",{"_index":285,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/OperatorsController.html":{}}}],["statusfilter",{"_index":3729,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["statusmodel",{"_index":3731,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["statustext",{"_index":1088,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["step",{"_index":5114,"title":{},"body":{"index.html":{}}}],["store",{"_index":576,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.constants",{"_index":718,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.controller",{"_index":671,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["store.controller.ts",{"_index":574,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:18",{"_index":588,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:27",{"_index":603,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:36",{"_index":610,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:45",{"_index":600,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:54",{"_index":627,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:60",{"_index":617,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:69",{"_index":594,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:78",{"_index":614,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:84",{"_index":620,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.controller.ts:90",{"_index":624,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["store.module",{"_index":212,"title":{},"body":{"modules/AccountsModule.html":{}}}],["store.module.ts",{"_index":670,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["store.providers",{"_index":675,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["store.service",{"_index":634,"title":{},"body":{"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{}}}],["store.service.ts",{"_index":687,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:101",{"_index":709,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:107",{"_index":712,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:16",{"_index":696,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:25",{"_index":715,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:29",{"_index":711,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:33",{"_index":698,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:50",{"_index":702,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:60",{"_index":708,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:65",{"_index":704,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:71",{"_index":701,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:77",{"_index":713,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:83",{"_index":700,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:91",{"_index":705,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store.service.ts:97",{"_index":706,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store/app",{"_index":211,"title":{},"body":{"modules/AccountsModule.html":{},"controllers/AppStoreController.html":{},"modules/AppStoreModule.html":{},"injectables/AppStoreService.html":{}}}],["store/config/configuration",{"_index":673,"title":{},"body":{"modules/AppStoreModule.html":{}}}],["store/constants/app",{"_index":717,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store/interfaces/application.interface",{"_index":719,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["store/interfaces/application.interface.ts",{"_index":218,"title":{},"body":{"interfaces/ActivatedApp.html":{},"interfaces/Application.html":{},"interfaces/AvailableApp.html":{}}}],["storesmartcontractwallet",{"_index":3813,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["storesmartcontractwallet(smartwalletsauthdto",{"_index":3821,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["storing",{"_index":3845,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["strategy",{"_index":2871,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["stream",{"_index":5082,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AccountsController.html":{},"interfaces/ActivatedApp.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/ChargeApiService.html":{},"controllers/ChargeApiServiceController.html":{},"injectables/ChargeApiServiceService.html":{},"controllers/ChargeAppsServiceController.html":{},"injectables/ChargeAppsServiceService.html":{},"controllers/ChargeNetworkServiceController.html":{},"controllers/ChargeNotificationsServiceController.html":{},"controllers/ChargeRelayServiceController.html":{},"injectables/ChargeRelayServiceService.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"interfaces/ScannerStatus.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["string(starttimestamp",{"_index":4725,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["studiolegacyjwtmodule",{"_index":342,"title":{"modules/StudioLegacyJwtModule.html":{}},"body":{"modules/ApiKeyModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules.html":{},"overview.html":{}}}],["studiolegacyjwtservice",{"_index":469,"title":{"injectables/StudioLegacyJwtService.html":{}},"body":{"injectables/ApiKeysService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"overview.html":{}}}],["sub",{"_index":3840,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["submitquestionnaire",{"_index":4619,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnaire(id",{"_index":4621,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnairedto",{"_index":4313,"title":{"classes/SubmitQuestionnaireDto.html":{}},"body":{"classes/SubmitQuestionnaireDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["submitquestionnairedto.questionnaire",{"_index":4665,"title":{},"body":{"injectables/UsersService.html":{}}}],["submits",{"_index":4624,"title":{},"body":{"controllers/UsersController.html":{}}}],["subscribe",{"_index":3793,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["subscribetopublications",{"_index":3983,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["subscribeuserophash",{"_index":3761,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["subscribeuserophash(userophash",{"_index":3773,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["subscribewallettonotifications",{"_index":3814,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["subscribewallettonotifications(walletaddress",{"_index":3823,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["subscribing",{"_index":3843,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"index.html":{}}}],["subscription",{"_index":2531,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["subscription.off('publication",{"_index":2538,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["subscription.on('publication",{"_index":2533,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["succeeded",{"_index":1222,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["success",{"_index":1044,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WebhookEvent-1.html":{}}}],["successful",{"_index":1047,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{},"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":1929,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["such",{"_index":5076,"title":{},"body":{"index.html":{}}}],["sumby",{"_index":4251,"title":{},"body":{"injectables/StakingService.html":{}}}],["sumby(stakedtokens",{"_index":4272,"title":{},"body":{"injectables/StakingService.html":{}}}],["super",{"_index":2876,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["super(configservice",{"_index":2003,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["support",{"_index":5130,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":5110,"title":{},"body":{"index.html":{}}}],["svg",{"_index":5131,"title":{},"body":{"modules.html":{}}}],["swapethforexacttokens",{"_index":4368,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swapexactethfortokens",{"_index":4360,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swapexacttokensforeth",{"_index":4367,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swapexacttokensfortokens",{"_index":4355,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swapped",{"_index":4330,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swaptokens",{"_index":4320,"title":{"classes/SwapTokens.html":{}},"body":{"classes/SwapTokens.html":{}}}],["swaptokensforexacteth",{"_index":4364,"title":{},"body":{"classes/SwapTokens.html":{}}}],["swaptokensforexacttokens",{"_index":4333,"title":{},"body":{"classes/SwapTokens.html":{}}}],["switch",{"_index":74,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["symbol",{"_index":816,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"interfaces/Token-1.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["symbol.tolowercase",{"_index":2177,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["t",{"_index":147,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["takes",{"_index":3166,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["targetaddress",{"_index":809,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["targetfunction",{"_index":823,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NftTransfer.html":{}}}],["targetfunctions",{"_index":1042,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["targets",{"_index":4593,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["targets.map((targetaddress",{"_index":4594,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["tech",{"_index":5094,"title":{},"body":{"index.html":{}}}],["text_signature",{"_index":2293,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["this._axios",{"_index":2443,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._axios.get('/v1/smart",{"_index":2541,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._axios.post('/v1/smart",{"_index":2523,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._credentials",{"_index":2448,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._encodeddataforcontractcall(abi",{"_index":2545,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._eth",{"_index":4504,"title":{},"body":{"classes/TransferToken.html":{}}}],["this._from",{"_index":2449,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._getnonce",{"_index":2544,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._initwebsocket",{"_index":2454,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._privatekey",{"_index":4502,"title":{},"body":{"classes/TransferToken.html":{}}}],["this._signer(this._credentials",{"_index":2451,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._signoffchain",{"_index":2546,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._smartwalletsjwt",{"_index":2452,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._socketclient",{"_index":2469,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._socketclient.connect",{"_index":2472,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._socketclient.disconnect",{"_index":2521,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._socketclient.newsubscription(`transaction:#${response.data.transactionid",{"_index":2532,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._socketclient.ready",{"_index":2473,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._throwerror",{"_index":2527,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._throwerror('unable",{"_index":2474,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._to",{"_index":4503,"title":{},"body":{"classes/TransferToken.html":{}}}],["this._wallet",{"_index":2456,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._wallet.smartwalletaddress",{"_index":2460,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this._wallet.walletmodules.transfermanager",{"_index":2547,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.aaservice.auth(smartwalletsauthdto",{"_index":3966,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.addrelevantwebhooktokenseventstoqueue(fromaddresswatchers",{"_index":4941,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.addrelevantwebhooktokenseventstoqueue(toaddresswatchers",{"_index":4937,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.addrelevantwebhooktokenseventstoqueue(tokenaddresswatchers",{"_index":4933,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.address",{"_index":4757,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.address.tolowercase",{"_index":4753,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.alchemybaseurl",{"_index":983,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.alchemywebookid",{"_index":985,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.allowedpaymenttokens",{"_index":2170,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.allowedpaymenttokens.map(token",{"_index":2167,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.allowedtokenaddresses.some(address",{"_index":2172,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.allowedtokensymbols.some(symbol",{"_index":2176,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.analyticsservice.trackevent('account",{"_index":3806,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.analyticsservice.trackevent('transaction",{"_index":1891,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.apikeymodel.create",{"_index":516,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.apikeymodel.findone",{"_index":510,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.apikeymodel.findone(query",{"_index":523,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.apikeymodel.findoneandupdate",{"_index":532,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.apikeysservice.createpublickey(apikeysdto",{"_index":443,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["this.apikeysservice.createpublickey(projectid",{"_index":424,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.createsandboxkey(projectid",{"_index":426,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.createsecretkey(apikeysdto",{"_index":440,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["this.apikeysservice.createsecretkey(createsecretdto.projectid",{"_index":418,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.findone",{"_index":2815,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{}}}],["this.apikeysservice.getapikeysinfo(apikeysdto",{"_index":441,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["this.apikeysservice.getapikeysinfo(projectid",{"_index":420,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.getprojectidbypublickey(apikey",{"_index":422,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.getprojectidbypublickey(query?.apikey",{"_index":2927,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["this.apikeysservice.getprojectjwt",{"_index":2923,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["this.apikeysservice.getpublickey(apikeysdto",{"_index":444,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["this.apikeysservice.getpublickey(projectid",{"_index":425,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.getsandboxkey(projectid",{"_index":427,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.apikeysservice.updatesecretkey(apikeysdto",{"_index":442,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["this.apikeysservice.updatesecretkey(projectid",{"_index":423,"title":{},"body":{"controllers/ApiKeysController.html":{}}}],["this.applicationmodel.find",{"_index":741,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.applicationmodel.updateone",{"_index":739,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.appstoreservice.activateapp(appname",{"_index":649,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.createpaymentlink(auth0id",{"_index":660,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.createsecret(appname",{"_index":654,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.getactivatedapps(auth0id",{"_index":650,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.getapikeysinfo(appname",{"_index":652,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.getpaymentlinks(auth0id",{"_index":662,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.getpaymentsallowedtokens",{"_index":658,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.getwalletbalance(auth0id",{"_index":664,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.transfertokensfrompaymentsaccount(auth0id",{"_index":666,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.appstoreservice.updatesecret(appname",{"_index":656,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["this.authenticate(hash",{"_index":2453,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.availableapps.some(app",{"_index":730,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.backendwalletethereummodel.create",{"_index":980,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.backendwalletethereummodel.findone",{"_index":982,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.backendwalletethereummodel.findone().sort",{"_index":972,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.backendwalletethereumservice.addwebhookaddress(backendwallet.walletaddress",{"_index":2193,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.backendwalletethereumservice.createbackendwallet(wallettypes.payment_account",{"_index":2179,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.backendwalletethereumservice.createbackendwallet(wallettypes.payment_link",{"_index":2189,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.backendwalletethereumservice.findwalletbyaddress(toaddress",{"_index":2206,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.backendwalletmodel.create",{"_index":1350,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.backendwalletmodel.findbyidandupdate",{"_index":1355,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.backendwalletmodel.findone",{"_index":1401,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.blockclient",{"_index":2719,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.builddocs(createwebhookaddressesdto",{"_index":4898,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.buildpaymasteranddata(paymasteraddress",{"_index":3243,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.cachemanager.get(tokenaddress",{"_index":2040,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["this.cachemanager.set(tokenaddress",{"_index":2048,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["this.centclient.publish",{"_index":3783,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["this.centclient.subscribe",{"_index":3792,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.centclient.unsubscribe",{"_index":3795,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["this.centrifuge.connect",{"_index":4036,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.centrifuge.on('publication",{"_index":4020,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.chargeapiservice.addwebhookaddress",{"_index":3458,"title":{},"body":{"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{}}}],["this.chargeapiservice.createbackendwallet(wallettypes.payment_account",{"_index":3450,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.chargeapiservice.createbackendwallet(wallettypes.payment_link",{"_index":3455,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.chargeapiservice.getbackendwalletbyaddress(webhookevent.to",{"_index":3469,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.chargeapiservice.getwalletbalance(paymentaccount.backendwalletid.walletaddress",{"_index":3463,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.chargeapiservice.transfertokens(transfertokensdto",{"_index":3467,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.chargebaseurl}/api/v0/admin/tokens/transfer?apikey=${this.chargepublickey",{"_index":1361,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.chargebaseurl}/api/v0/admin/wallets/create?apikey=${this.chargepublickey",{"_index":1346,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.chargebaseurl}/api/v0/jobs/${jobid}?apikey=${this.chargepublickey",{"_index":1403,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.chargebaseurl}/api/v0/notifications/webhook/add",{"_index":1406,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.chargebaseurl}/api/v0/trade/price/${tokenaddress}?apikey=${this.chargepublickey",{"_index":1411,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.chargepaymentlinkswebhookid",{"_index":3460,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.configservice.get('accountabstractiongraphurl",{"_index":2762,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["this.configservice.get('alchemy_auth_key",{"_index":963,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.configservice.get('alchemy_base_url",{"_index":962,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.configservice.get('alchemy_webhook_id",{"_index":964,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.configservice.get('availableapps",{"_index":729,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.configservice.get('blockrewardaddress",{"_index":2622,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('charge_base_url",{"_index":1340,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.configservice.get('charge_payments_ethereum_mnemonic",{"_index":965,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.configservice.get('charge_public_key",{"_index":1341,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.configservice.get('charge_wallet_phone_number",{"_index":1343,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.configservice.get('charge_webhook_id",{"_index":1342,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{}}}],["this.configservice.get('consensusaddress",{"_index":2621,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('ethereum_payments_network_name",{"_index":2165,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.configservice.get('fuseliquidstakingaddress",{"_index":2619,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('incoming_token_transfers_webhook_id",{"_index":3852,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.configservice.get('job_sleep_ms",{"_index":966,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["this.configservice.get('nftgraphurl",{"_index":2760,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["this.configservice.get('paddedversion",{"_index":4039,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.configservice.get('paymentsallowedtokens",{"_index":959,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{}}}],["this.configservice.get('relayapi",{"_index":3635,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["this.configservice.get('retrytimeintervalsms",{"_index":1114,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.configservice.get('rpcconfig').rpc.maxblockstoprocess",{"_index":3715,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.configservice.get('rpcconfig').timeoutinterval",{"_index":3717,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.configservice.get('sftokenaddress",{"_index":2620,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('sharedaddresses",{"_index":4037,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.configservice.get('stakingoptions",{"_index":4255,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.configservice.get('unmarshal_auth_key",{"_index":961,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["this.configservice.get('unmarshal_base_url",{"_index":960,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["this.configservice.get('validatorfee",{"_index":2624,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('version",{"_index":4038,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.configservice.get('voltbaraddress",{"_index":4700,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.configservice.get('wfuseaddress",{"_index":2623,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.configservice.get('wsurl",{"_index":4080,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["this.configservice.get(`${this.networkname}paymentsallowedtokens",{"_index":2166,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.configservice.get(`bundler.${environment",{"_index":1262,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["this.configservice.get>('legacyv1apiurl",{"_index":2936,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["this.configservice.get>('legacywalletapicontroller')?.baseurl",{"_index":2933,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["this.configservice.get>(ctxclassname",{"_index":2281,"title":{},"body":{"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{}}}],["this.configservice.getorthrow",{"_index":3264,"title":{},"body":{"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{}}}],["this.consensusapiservice.delegate(data.validator",{"_index":1535,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["this.consensusapiservice.getdelegatedamounts(delegatedamountsdto",{"_index":1534,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["this.consensusapiservice.getvalidators",{"_index":1533,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["this.consensusapiservice.withdraw(data.validator",{"_index":1536,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["this.consensusservice.delegate(data.validator",{"_index":1579,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["this.consensusservice.getcachedvalidatorsinfo",{"_index":1577,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["this.consensusservice.getdelegatedamounts(delegatedamountsdto",{"_index":1578,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["this.consensusservice.withdraw(data.validator",{"_index":1580,"title":{},"body":{"controllers/ConsensusController.html":{}}}],["this.constructresponse",{"_index":4403,"title":{},"body":{"classes/TokenReceive.html":{}}}],["this.constructresponse(parseduserop",{"_index":826,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{}}}],["this.constructtokentransferdata",{"_index":4402,"title":{},"body":{"classes/TokenReceive.html":{}}}],["this.constructtokentransferdata(targetaddress",{"_index":2964,"title":{},"body":{"classes/NativeTransfer.html":{}}}],["this.constructtokentransferdata(targetfunction",{"_index":825,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{}}}],["this.createwallet",{"_index":2458,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.createwalletactionfromuserop(userop",{"_index":1813,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.datalayerservice.findsponsoredtransactionscount",{"_index":1706,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["this.datalayerservice.getpaginatedwalletactions(data.page",{"_index":1701,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["this.datalayerservice.handletokentransferwebhook",{"_index":1705,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["this.datalayerservice.recorduserop(userop",{"_index":1699,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["this.datalayerservice.updateuserop(userop",{"_index":1700,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["this.decodecalldata",{"_index":4606,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["this.decodecalldata(call.data",{"_index":4602,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["this.descgenerator",{"_index":2972,"title":{},"body":{"classes/NftTransfer.html":{}}}],["this.descgenerator(data",{"_index":4768,"title":{},"body":{"classes/WalletAction.html":{}}}],["this.estimateuseropgas(op",{"_index":3246,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.etherscontract.create",{"_index":2044,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["this.events.emit(ctx.data.eventname",{"_index":2534,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.events.once(websocketevents.transaction_failed",{"_index":2559,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.events.once(websocketevents.transaction_succeeded",{"_index":2558,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.events.once(websocketevents.wallet_creation_succeeded",{"_index":2537,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.fetchlogs(fromblock",{"_index":2005,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.fetchtokentransferdata(targetfunction",{"_index":2973,"title":{},"body":{"classes/NftTransfer.html":{}}}],["this.findone",{"_index":519,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.fuseliquidstakingservice",{"_index":4277,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.fuseprovider",{"_index":3288,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.gasservice.fetchtransactiongascosts",{"_index":2022,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.generatedescription",{"_index":819,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["this.generaterandomtoken",{"_index":514,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.generatesecretkey",{"_index":527,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["this.getaddresswatchers(fromaddress",{"_index":4940,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.getaddresswatchers(toaddress",{"_index":4936,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.getaddresswatchers(tokenaddress",{"_index":4932,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.geterc20transferdata(firstcalldata",{"_index":4155,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.gethash(paymastercontract",{"_index":3239,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.getnewretryafterdate(webhookevent",{"_index":1152,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.getoperatorbyapikey(body.userop.apikey",{"_index":1873,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.getpaymentsallowedtokens",{"_index":1379,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.getpricefromtradeapi(token.tokenaddress",{"_index":1390,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.getproviderbyenv(env",{"_index":3223,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.getreceivedtokendata(liquid_staking_contract_address",{"_index":4158,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.getreceivedtokendata(senttokendata.to",{"_index":4156,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.getresponsedetailswithdate(errorstatus",{"_index":1150,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.getretrytimeintervalms(webhookevent.numberoftries",{"_index":1159,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.getsleepms",{"_index":1360,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.getsponsorid(projectid",{"_index":3361,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["this.getstakingdata(accountaddress",{"_index":4708,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.getstakingoption(stakedto.tokenaddress",{"_index":4262,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.getstakingoption(unstakedto.tokenaddress",{"_index":4267,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.getstakingprovider(stakingoption",{"_index":4258,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.gettargetfunction(calls",{"_index":4616,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["this.gettoken(tokentype",{"_index":4393,"title":{},"body":{"classes/TokenReceive.html":{}}}],["this.gettokeninfo(tokenaddress",{"_index":2018,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["this.getupdatedjobdata(jobdata",{"_index":1354,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.getuserid(auth0id",{"_index":735,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.getwallet",{"_index":2457,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["this.graphqlapiservice.getcollectiblesbyowner(address",{"_index":2737,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["this.graphqlapiservice.getuseropsbysender(address",{"_index":2738,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["this.graphqlservice.fetchfromgraphql(this.accountabstractiongraphurl",{"_index":2764,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["this.graphqlservice.fetchfromgraphql(this.nftgraphurl",{"_index":2763,"title":{},"body":{"controllers/GraphqlController.html":{}}}],["this.graphservice.getblockclient",{"_index":4703,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.graphservice.getvoltageclient",{"_index":4702,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.graphservice.getvoltbarclient",{"_index":4701,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.handlebatchexecution(parseduserop",{"_index":4147,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.handlereceivewalletaction(messagedata",{"_index":3790,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.handlesingleexecution(parseduserop",{"_index":4148,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.handleuseropandwalletactionofoperatortosendanalyticsevent",{"_index":1814,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.httpadapterhost",{"_index":264,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.httpproxy(requestconfig",{"_index":3638,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["this.httpproxyget(tokensbalanceurl",{"_index":1377,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.httpproxyget(url",{"_index":1404,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.httpproxypatch(url",{"_index":988,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.httpproxypost(url",{"_index":1347,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.httpservice",{"_index":1218,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/GraphQLService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"injectables/StudioLegacyJwtService.html":{},"injectables/TradeService.html":{}}}],["this.httpservice.get(url",{"_index":999,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["this.httpservice.patch(url",{"_index":998,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["this.httpservice.post(url",{"_index":990,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["this.isappavailable(appname",{"_index":732,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["this.isrelevantevent(eventdata.tokentype",{"_index":4946,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.isrequestedallowedtoken(createpaymentlinkdto",{"_index":3452,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.isrequestedallowedtoken(createpaymentlinkethereumdto",{"_index":2185,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.istokenmatch(paymentlink",{"_index":2220,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.jwtservice.sign",{"_index":3839,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.legacyservice.auth(smartwalletsauthdto",{"_index":3967,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.createwallet(smartwalletuser",{"_index":3969,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.getavailableupgrades",{"_index":3972,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.gethistoricaltxs(user",{"_index":3971,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.getwallet(smartwalletuser",{"_index":3968,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.installupgrade",{"_index":3973,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.legacyservice.relay(relaydto",{"_index":3970,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["this.liquidstakinginterface.encodefunctiondata('deposit",{"_index":2626,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.liquidstakinginterface.encodefunctiondata('withdraw",{"_index":2628,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.logger.debug",{"_index":1857,"title":{},"body":{"injectables/DataLayerService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["this.logger.debug('creating",{"_index":1855,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.logger.debug('handling",{"_index":1847,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.logger.debug('returning",{"_index":3846,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["this.logger.debug('signing",{"_index":3838,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.logger.debug('subscribing",{"_index":3851,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.logger.debug(`publishing",{"_index":3780,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.logger.debug(`subscribing",{"_index":3791,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.logger.debug(`tx",{"_index":1851,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.logger.debug(`unsubscribing",{"_index":3794,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.logger.error",{"_index":1146,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{}}}],["this.logger.error('error",{"_index":1816,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/PaymasterApiService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["this.logger.error('failed",{"_index":2007,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.logger.error('response",{"_index":3279,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.error('result",{"_index":3283,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.error(`an",{"_index":3784,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.logger.error(`arguments",{"_index":4744,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.logger.error(`failed",{"_index":1155,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.logger.error(`gatstakingdata",{"_index":4756,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.logger.error(`getstakingdata",{"_index":4755,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.logger.error(`params",{"_index":4750,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.logger.error(`paymaster",{"_index":3259,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.error(`rpcexception",{"_index":3274,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.error(`stakingapr",{"_index":2668,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["this.logger.error(`tvl",{"_index":2672,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["this.logger.error(`unable",{"_index":2019,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["this.logger.error(`webhook",{"_index":4951,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.logger.error(err",{"_index":4916,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.logger.error(error",{"_index":320,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.logger.error(errormessage",{"_index":3488,"title":{},"body":{"injectables/PaymentsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.logger.error(exception",{"_index":283,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.log",{"_index":4947,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.logger.log('error",{"_index":3913,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["this.logger.log('operator",{"_index":1904,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.logger.log(`bundlerapiinterceptor",{"_index":1221,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(`eth_senduseroperation",{"_index":1234,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(`gas",{"_index":3284,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.log(`initial",{"_index":3224,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.log(`no",{"_index":1237,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(`oncreatesmartwalletstarted",{"_index":4040,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.logger.log(`oncreatesmartwalletsuccess",{"_index":4053,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.logger.log(`paymaster",{"_index":3257,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.logger.log(`record",{"_index":1243,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(`sent",{"_index":4804,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["this.logger.log(`starting",{"_index":1127,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.logger.log(e",{"_index":1245,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(error",{"_index":1246,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["this.logger.log(json.stringify(jobdata",{"_index":1368,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.logger.warn(`some",{"_index":4909,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.logger.warn(`webhook",{"_index":1141,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.logsfilter.address",{"_index":2265,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["this.logsfilter.topics",{"_index":2264,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["this.maxtimeintervalsms",{"_index":1117,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.nftdescgenerator",{"_index":4400,"title":{},"body":{"classes/TokenReceive.html":{}}}],["this.notificationservice.getwebhook(webhookid",{"_index":2811,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["this.notificationsservice.createaddresses(createwebhookaddressesdto",{"_index":3018,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.createwebhook(createwebhookdto",{"_index":3011,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.deleteaddresses(createwebhookaddressesdto",{"_index":3020,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.deletewebhook(webhookid",{"_index":3014,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.getaddresses(webhookid",{"_index":3019,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.getallwebhooks(projectid",{"_index":3017,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.getwebhook(webhookid",{"_index":3015,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.notificationsservice.updatewebhook(updatewebhookdto",{"_index":3012,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["this.oncreatesmartwalletfailed(eventdata",{"_index":4028,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.oncreatesmartwalletstarted(eventdata",{"_index":4023,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.oncreatesmartwalletsuccess(eventdata",{"_index":4026,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.onrelayfailed(eventdata",{"_index":4034,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.onrelaystarted(eventdata",{"_index":4030,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.onrelaysuccess(eventdata",{"_index":4032,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.ontransactionhash(eventdata",{"_index":4035,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.operatorsservice.checkoperatorexistencebyeoaaddress(address",{"_index":3117,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.checkwalletactivationstatus(auth0id",{"_index":3126,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.createoperatoruserandprojectandwallet(createoperatoruserdto",{"_index":3123,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.findoperatorbysmartwallet(walletaddress",{"_index":3134,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.findwalletowner(walletaddress",{"_index":3135,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.getoperatoruserandproject(auth0id",{"_index":3121,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.getsponsoredtransactionscount(auth0id",{"_index":3130,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.handlewebhookreceiveandfundpaymasteranddeletewalletaddressfromoperatorswebhook(webhookevent",{"_index":3124,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.operatorsservice.validate(authoperatordto",{"_index":3119,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["this.paginatedwalletactionmodel.create(walletaction",{"_index":1836,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.paginatedwalletactionmodel.findoneandupdate",{"_index":1841,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.paginatedwalletactionmodel.paginate(query",{"_index":1868,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.paymastermodel.create([productionpaymasterinfoobj",{"_index":3369,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["this.paymastermodel.find",{"_index":3374,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["this.paymastermodel.findone",{"_index":3371,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["this.paymasterservice.create(id",{"_index":3313,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["this.paymasterservice.findactivepaymasters(id",{"_index":3316,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["this.paymasterservice.findonebyprojectidandenv(idandenv",{"_index":3317,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["this.paymasterservice.getavailableversionlist",{"_index":3310,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["this.paymasterservice.pm_accounts",{"_index":3162,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["this.paymasterservice.pm_sponsoruseroperation",{"_index":3158,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["this.paymentaccountmodel",{"_index":3465,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.paymentaccountmodel.create",{"_index":2181,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.paymentaccountmodel.findone",{"_index":3461,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.paymentlinkmodel.create(createpaymentlinkdto",{"_index":3457,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.paymentlinkmodel.create(createpaymentlinkethereumdto",{"_index":2191,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["this.paymentlinkmodel.find",{"_index":2198,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.paymentlinkmodel.findbyid(paymentlinkid).populate('backendwalletid",{"_index":2195,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.paymentlinkmodel.findone",{"_index":2208,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.paymentsethereumservice.createpaymentaccount(ownerid",{"_index":2102,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsethereumservice.createpaymentlink(userid",{"_index":2103,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsethereumservice.getpaymentlink(paymentlinkid",{"_index":2105,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsethereumservice.getpaymentlinks(userid",{"_index":2106,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsethereumservice.getpaymentsallowedtokens",{"_index":2100,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsethereumservice.handlewebhook(webhookevent",{"_index":2107,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["this.paymentsservice.createpaymentaccount(ownerid",{"_index":3401,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.createpaymentlink(userid",{"_index":3403,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.getpaymentlink(paymentlinkid",{"_index":3404,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.getpaymentlinks(userid",{"_index":3406,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.getpaymentsallowedtokens",{"_index":3400,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.getwalletbalance(userid",{"_index":3410,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.handlewebhook(webhookevent",{"_index":3407,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.paymentsservice.transfertokens(transfertokensdto",{"_index":3411,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["this.preparerequestconfig",{"_index":1217,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/ExplorerApiInterceptor.html":{}}}],["this.preparerequestconfig(context",{"_index":2913,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{}}}],["this.prepareurl(requestenvironment",{"_index":1255,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{},"injectables/PaymasterApiService.html":{}}}],["this.processblocks",{"_index":3719,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.processevent(log",{"_index":2006,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.processtrace(trace",{"_index":4472,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["this.projectmodel(createprojectdto",{"_index":3606,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.find",{"_index":3612,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyid(id",{"_index":3610,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findbyidandupdate(id",{"_index":3614,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectmodel.findone",{"_index":3611,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsservice.checkifsecretexists(projectid",{"_index":3558,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.create(createprojectdto",{"_index":3547,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.createsandboxkey(projectid",{"_index":3566,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.createsecret",{"_index":3556,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findall(auth0id",{"_index":3548,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(id",{"_index":3549,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(projectid",{"_index":2838,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.projectsservice.findonebyownerid(id",{"_index":3569,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.getapikeysinfo(projectid",{"_index":3560,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.getprojectbysponsorid(sponsorid",{"_index":3552,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.getpublic(projectid",{"_index":3564,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.getsandboxkey(projectid",{"_index":3568,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.update(id",{"_index":3554,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.updatesecret(projectid",{"_index":3562,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.provider",{"_index":2634,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/TokenService.html":{},"injectables/VoltBarService.html":{}}}],["this.publishmessage(eventdata",{"_index":4050,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.relayaccountmodel.create",{"_index":3679,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["this.relayaccountsservice.createaccount(projectid",{"_index":3654,"title":{},"body":{"controllers/RelayAccountsController.html":{}}}],["this.relayapiservice.createwallet",{"_index":4085,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["this.relayapiservice.gethistoricaltxs(smartwalletaddress",{"_index":4097,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["this.relayapiservice.relay",{"_index":4095,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["this.relayapiurl}/relay",{"_index":3640,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["this.relayapiurl}/wallets",{"_index":3639,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["this.relayapiurl}/wallets/actions/${smartwalletaddress",{"_index":3637,"title":{},"body":{"injectables/RelayAPIService.html":{}}}],["this.retrytimeintervalsms[numberoftries",{"_index":1116,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.retrytimeintervalsms[object.keys(this.retrytimeintervalsms).length",{"_index":1115,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.rpcprovider",{"_index":2024,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["this.rpcprovider.getblock('latest",{"_index":3710,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.rpcprovider.getlogs",{"_index":2263,"title":{},"body":{"injectables/EventsScannerService.html":{}}}],["this.scannerstatusservice.getstatus",{"_index":3711,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.scannerstatusservice.updatestatus(toblocknumber",{"_index":3720,"title":{},"body":{"classes/ScannerService.html":{}}}],["this.server.addmethod('pm_accounts",{"_index":3161,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["this.server.addmethod('pm_sponsoruseroperation",{"_index":3157,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["this.server.receive(jsonrpcrequest",{"_index":3171,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["this.sharedaddresses.walletfactory",{"_index":4044,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.sharedaddresses.walletimplementation",{"_index":4045,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.sharedaddresses.walletmodules",{"_index":4084,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["this.signhash(hash",{"_index":3256,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.signhash(hashforestimateuseropgascall",{"_index":3241,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.sleep(this.getsleepms",{"_index":1367,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.smartcontractwalletmodel.create",{"_index":3854,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.smartcontractwalletmodel.findone",{"_index":3853,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.smartwalletmodel.create",{"_index":4043,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.smartwalletmodel.findone",{"_index":4042,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["this.smartwalletmodel.findoneandupdate",{"_index":4054,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.smartwalletsaaeventsservice.publishuserop",{"_index":1808,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.smartwalletsaaeventsservice.publishwalletaction(updatedwalletaction.walletaddress",{"_index":1844,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.smartwalletsaaeventsservice.publishwalletaction(walletaction.walletaddress",{"_index":1815,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.smartwalletsaaeventsservice.subscribeuserophash(response.userophash",{"_index":1806,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.smartwalletsaaeventsservice.unsubscribeuserophash(updateduserop.userophash",{"_index":1831,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.smartwalletsapiservice.auth(smartwalletsauthdto",{"_index":3875,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["this.smartwalletsapiservice.createwallet(user",{"_index":3879,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["this.smartwalletsapiservice.gethistoricaltxs(user",{"_index":3886,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["this.smartwalletsapiservice.getwallet(user",{"_index":3877,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["this.smartwalletsapiservice.getwalletactions(user.smartwalletaddress",{"_index":3931,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["this.smartwalletsapiservice.handletokentransferwebhook",{"_index":3934,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["this.smartwalletsapiservice.relay(relaydto",{"_index":3883,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["this.sparkprovider",{"_index":3289,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["this.stakingapiservice.stake(stakedto",{"_index":4202,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["this.stakingapiservice.stakedtokens(accountaddress",{"_index":4205,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["this.stakingapiservice.stakingoptions",{"_index":4201,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["this.stakingapiservice.unstake(unstakedto",{"_index":4203,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["this.stakingapr",{"_index":2648,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["this.stakingoptionsconfig",{"_index":4257,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.stakingoptionsconfig.find(stakingoption",{"_index":4273,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.stakingservice.stake(stakedto",{"_index":4220,"title":{},"body":{"controllers/StakingController.html":{}}}],["this.stakingservice.stakedtokens(accountaddress",{"_index":4222,"title":{},"body":{"controllers/StakingController.html":{}}}],["this.stakingservice.stakingoptions",{"_index":4219,"title":{},"body":{"controllers/StakingController.html":{}}}],["this.stakingservice.unstake(unstakedto",{"_index":4221,"title":{},"body":{"controllers/StakingController.html":{}}}],["this.start",{"_index":1118,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/ScannerService.html":{}}}],["this.statusfilter",{"_index":3736,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["this.statusmodel.create",{"_index":3738,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["this.statusmodel.findone",{"_index":3735,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["this.statusmodel.updateone",{"_index":3739,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["this.storesmartcontractwallet(smartwalletsauthdto",{"_index":3844,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.studiolegacyjwtservice.createlegacyjwt(`chargeapp_${projectid",{"_index":531,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["this.studiolegacyjwtservice.decryptencryptedjwt(projectencryptedjwt",{"_index":541,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["this.subscribetopublications",{"_index":4019,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.subscribewallettonotifications(smartwalletaddress",{"_index":3842,"title":{},"body":{"injectables/SmartWalletsAAService.html":{}}}],["this.tokenservice",{"_index":1835,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/WalletAction.html":{}}}],["this.tokenservice.fetchtokendetails('0x34ef2cc892a88415e9f02b91bfa9c91fc0be6bd4",{"_index":4543,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["this.tokenservice.fetchtokendetails(firstcalldata.targetaddress",{"_index":4539,"title":{},"body":{"classes/UnstakeTokens.html":{}}}],["this.tokenservice.fetchtokendetails(targetaddress",{"_index":811,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["this.tokenservice.fetchtokendetails(to",{"_index":4161,"title":{},"body":{"classes/StakeTokens.html":{}}}],["this.tokenservice.fetchtokendetails(tokenin",{"_index":4341,"title":{},"body":{"classes/SwapTokens.html":{}}}],["this.tokenservice.fetchtokendetails(tokenout",{"_index":4340,"title":{},"body":{"classes/SwapTokens.html":{}}}],["this.tradeservice.gettokenprice(address",{"_index":1881,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.tradeservice.gettokenprice(this.wfuseaddress",{"_index":2645,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["this.tradeservice.gettokenprice(tokenaddress",{"_index":4710,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.tradeservice.gettokenprice(walletaction?.sent[0]?.address",{"_index":3802,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["this.transfertokens",{"_index":3474,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["this.transformarray([[decoded[0",{"_index":4613,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["this.transformarray(decoded",{"_index":4611,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["this.unmarshalbaseurl}/v1/${networkname}/address/${address}/assets?chainid=122&token=false&auth_key=${this.unmarshalauthkey",{"_index":1375,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.unsubscribe(eventdata",{"_index":4057,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.updatewalletaction(updateduserop",{"_index":1832,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.usermodel(createuserdto",{"_index":4658,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":4660,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":4664,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":4661,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.useropfactory.createuserop(baseuserop",{"_index":1804,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.useropmodel.countdocuments",{"_index":1871,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.useropmodel.create(userop",{"_index":1805,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.useropmodel.findone",{"_index":1819,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.useropmodel.findoneandupdate",{"_index":1824,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["this.useropparser.parsecalldata(baseuserop.calldata",{"_index":4576,"title":{},"body":{"injectables/UserOpFactory.html":{}}}],["this.usersservice.create(createuserdto",{"_index":845,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findone(id",{"_index":4632,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(ownerid",{"_index":2822,"title":{},"body":{"guards/IsCreatorOwnerGuard.html":{}}}],["this.usersservice.findone(params.id",{"_index":2798,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{}}}],["this.usersservice.findone(project?.ownerid",{"_index":2839,"title":{},"body":{"guards/IsProjectOwnerGuard.html":{}}}],["this.usersservice.findonebyauth0id(auth0id",{"_index":749,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ProjectsService.html":{}}}],["this.usersservice.findonebyauth0id(id",{"_index":847,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.submitquestionnaire(id",{"_index":4631,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.voltageclient",{"_index":2721,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.voltbarclient",{"_index":2717,"title":{},"body":{"injectables/GraphService.html":{}}}],["this.voltbargraphclient.request(getbarstats",{"_index":4724,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.voltbargraphclient.request(getbaruser",{"_index":4751,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.voltbarinterface.encodefunctiondata('enter",{"_index":4705,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.voltbarinterface.encodefunctiondata('leave",{"_index":4706,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["this.voltbarservice",{"_index":4276,"title":{},"body":{"injectables/StakingService.html":{}}}],["this.walletpaddedversion",{"_index":4049,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.walletphonenumber",{"_index":1345,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["this.walletversion",{"_index":4046,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["this.webhookaddressmodel",{"_index":4921,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookaddressmodel.deletemany",{"_index":4894,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookaddressmodel.deletemany(query",{"_index":4920,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookaddressmodel.find",{"_index":4917,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookaddressmodel.insertmany(docs",{"_index":4899,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookeventmodel.create",{"_index":4949,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookeventmodel.find",{"_index":1120,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.webhookmodel.create(createwebhookdto",{"_index":4889,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookmodel.find",{"_index":4896,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookmodel.findbyid(webhookid",{"_index":4895,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookmodel.findbyidanddelete(webhookid",{"_index":4892,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhookmodel.findbyidandupdate",{"_index":4890,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["this.webhooksendservice.senddata(paymentlinkwebhookevent",{"_index":2229,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["this.webhooksendservice.senddata(webhookevent",{"_index":1132,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["this.webhooksservice.create(createwebhookdto",{"_index":4832,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.createaddresses(createwebhookaddressesdto",{"_index":4837,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.delete(webhookid",{"_index":4834,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.deleteaddresses(createwebhookaddressesdto",{"_index":4839,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.get(webhookid",{"_index":4835,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.getaddresses(webhookid",{"_index":4838,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.getaddresswatchers(address",{"_index":4842,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.getallbyprojectid(projectid",{"_index":4836,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.webhooksservice.processwebhooktokenevents(eventdata).catch((error",{"_index":2039,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{}}}],["this.webhooksservice.update(updatewebhookdto",{"_index":4833,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["this.wsurl",{"_index":4093,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["through",{"_index":2932,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{},"index.html":{}}}],["throw",{"_index":79,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/RelayAPIService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/TransferToken.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["throwerror",{"_index":254,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["thus",{"_index":262,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timeout",{"_index":3716,"title":{},"body":{"classes/ScannerService.html":{},"injectables/WebhookSendService.html":{}}}],["timestamp",{"_index":2503,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{}}}],["timestamphex",{"_index":2508,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["timestamphex.substring(2",{"_index":2512,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["timestamps",{"_index":4778,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["title",{"_index":1603,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{}}}],["to.tolowercase",{"_index":1854,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["toaddress",{"_index":2015,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/WebhooksService.html":{}}}],["toaddresswatchers",{"_index":4935,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["toblock",{"_index":1960,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/EventsScannerService.html":{},"classes/ScannerService.html":{},"injectables/TransactionsScannerService.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["toblocknumber",{"_index":3709,"title":{},"body":{"classes/ScannerService.html":{}}}],["todo",{"_index":1161,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/PaymasterService.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/UsersService.html":{},"injectables/WebhooksService.html":{}}}],["token",{"_index":1384,"title":{"interfaces/Token.html":{},"interfaces/Token-1.html":{}},"body":{"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/ERC721Transfer.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"modules/PaymasterApiModule.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"interfaces/StakedToken.html":{},"modules/StakingModule.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"modules/TransactionsScannerModule.html":{},"interfaces/UserStakedTokens.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["token.balance",{"_index":1387,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["token.contract_address",{"_index":1391,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["token.contract_decimals",{"_index":1396,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["token.decimals",{"_index":2043,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["token.name",{"_index":2041,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["token.quote",{"_index":1397,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["token.quote_rate",{"_index":1392,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["token.symbol",{"_index":2042,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["token.tokenaddress",{"_index":2168,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["token.tokensymbol",{"_index":2169,"title":{},"body":{"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{}}}],["token.ts",{"_index":767,"title":{},"body":{"classes/ApproveToken.html":{}}}],["token.ts:18",{"_index":781,"title":{},"body":{"classes/ApproveToken.html":{}}}],["token.ts:6",{"_index":790,"title":{},"body":{"classes/ApproveToken.html":{}}}],["tokenaddress",{"_index":1310,"title":{},"body":{"injectables/ChargeApiService.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/PaymentLink.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/StakeDto.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WebhookEvent.html":{},"injectables/WebhooksService.html":{}}}],["tokenaddress.tolowercase",{"_index":1862,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/EthereumPaymentsService.html":{}}}],["tokenaddresswatchers",{"_index":4931,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["tokenamount",{"_index":2627,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"classes/StakeDto.html":{},"classes/UnstakeDto.html":{},"injectables/VoltBarService.html":{}}}],["tokencontractinstance",{"_index":4414,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontractinstance.decimals",{"_index":4418,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontractinstance.name",{"_index":4416,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokencontractinstance.symbol",{"_index":4417,"title":{},"body":{"injectables/TokenService.html":{}}}],["tokendata",{"_index":810,"title":{},"body":{"classes/ApproveToken.html":{},"classes/NftTransfer.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["tokendata.decimals",{"_index":812,"title":{},"body":{"classes/ApproveToken.html":{}}}],["tokendecimal",{"_index":2551,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["tokendecimals",{"_index":1849,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WebhookEvent.html":{}}}],["tokendetails",{"_index":1853,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{}}}],["tokeneventdata",{"_index":1985,"title":{"interfaces/TokenEventData.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"injectables/WebhooksService.html":{}}}],["tokenexchanger",{"_index":2416,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["tokenid",{"_index":1850,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EventData.html":{},"classes/NftTransfer.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["tokenin",{"_index":4338,"title":{},"body":{"classes/SwapTokens.html":{}}}],["tokeninfo",{"_index":1989,"title":{"interfaces/TokenInfo.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{}}}],["tokeninfocache",{"_index":4372,"title":{"interfaces/TokenInfoCache.html":{}},"body":{"interfaces/TokenInfo.html":{},"interfaces/TokenInfoCache.html":{}}}],["tokenlogouri",{"_index":2630,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["tokenname",{"_index":1848,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/TokenEventData.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WebhookEvent.html":{}}}],["tokenout",{"_index":4336,"title":{},"body":{"classes/SwapTokens.html":{}}}],["tokenpriceinusd",{"_index":1880,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["tokenreceive",{"_index":3789,"title":{"classes/TokenReceive.html":{}},"body":{"injectables/SmartWalletsAAEventsService.html":{},"classes/TokenReceive.html":{}}}],["tokenreceivetowalletaction",{"_index":1779,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["tokens",{"_index":1371,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/LegacyApiInterceptor.html":{},"injectables/StakingService.html":{},"classes/TransferTokensEthereumDto.html":{}}}],["tokens.dto",{"_index":643,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["tokens.dto.ts",{"_index":4519,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokens.dto.ts:13",{"_index":4521,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokens.dto.ts:16",{"_index":4523,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokens.dto.ts:19",{"_index":4520,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokens.dto.ts:6",{"_index":4522,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokens.dto.ts:9",{"_index":4524,"title":{},"body":{"classes/TransferTokensDto.html":{}}}],["tokensbalance",{"_index":1376,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["tokensbalanceurl",{"_index":1374,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["tokenservice",{"_index":770,"title":{"injectables/TokenService.html":{}},"body":{"classes/ApproveToken.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{},"overview.html":{}}}],["tokensymbol",{"_index":1604,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/PaymentLink.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/TokenEventData.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{},"interfaces/WebhookEvent.html":{}}}],["tokentransfer",{"_index":1877,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{}}}],["tokentransferdata",{"_index":780,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/TokenReceive.html":{}}}],["tokentransferdata.decimals",{"_index":4398,"title":{},"body":{"classes/TokenReceive.html":{}}}],["tokentransferdata.symbol",{"_index":4397,"title":{},"body":{"classes/TokenReceive.html":{}}}],["tokentransferdata.type",{"_index":4399,"title":{},"body":{"classes/TokenReceive.html":{}}}],["tokentransferdata.value",{"_index":2963,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/TokenReceive.html":{}}}],["tokentransferwebhookdto",{"_index":1682,"title":{"classes/TokenTransferWebhookDto.html":{}},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/TokenTransferWebhookDto.html":{}}}],["tokentransferwebhookdto).catch((error",{"_index":3912,"title":{},"body":{"injectables/SmartWalletsAPIService.html":{}}}],["tokentype",{"_index":1096,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WebhookEvent.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.erc20",{"_index":2031,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["tokentype.fuse",{"_index":4480,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["tokentype?.valueof",{"_index":2028,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{}}}],["topic",{"_index":84,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["topichash",{"_index":105,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["topics",{"_index":34,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"interfaces/LogFilter.html":{}}}],["totalaverage",{"_index":4741,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["totalearnedamountusd",{"_index":4174,"title":{},"body":{"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{}}}],["totalstakeamount",{"_index":2654,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["totalstaked",{"_index":2669,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["totalstakedamountusd",{"_index":4173,"title":{},"body":{"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{}}}],["totalvalidated",{"_index":2782,"title":{},"body":{"interfaces/IValidator.html":{}}}],["towalletaddress",{"_index":4385,"title":{},"body":{"classes/TokenReceive.html":{}}}],["trace",{"_index":4462,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["trace.blockhash",{"_index":4479,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["trace.blocknumber",{"_index":4478,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["trace.subtraces",{"_index":4481,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["trace.traceaddress.length",{"_index":4482,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["trace.transactionhash",{"_index":4473,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["track",{"_index":314,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["track(eventinput",{"_index":319,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["trackevent",{"_index":299,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["trackevent(eventinput",{"_index":303,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["tracking",{"_index":1894,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["trade",{"_index":2946,"title":{},"body":{"modules/LegacyApiModule.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/TradeApiController.html":{}}}],["tradeapicontroller",{"_index":2944,"title":{"controllers/TradeApiController.html":{}},"body":{"modules/LegacyApiModule.html":{},"controllers/TradeApiController.html":{}}}],["tradeservice",{"_index":1711,"title":{"injectables/TradeService.html":{}},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"injectables/TradeService.html":{},"injectables/VoltBarService.html":{},"overview.html":{}}}],["trading",{"_index":5092,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":1039,"title":{},"body":{"interfaces/BaseUserOp.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"controllers/OperatorsController.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOp.html":{},"index.html":{}}}],["transaction:#${transactionid",{"_index":4061,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["transaction:#${userophash",{"_index":3782,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["transaction_failed",{"_index":5048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transaction_hash",{"_index":5047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transaction_started",{"_index":5045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transaction_succeeded",{"_index":5050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactionbody",{"_index":2548,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{}}}],["transactiondata",{"_index":2543,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["transactionfailed",{"_index":5049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactionhash",{"_index":2677,"title":{},"body":{"injectables/GasService.html":{},"injectables/SmartWalletsEventsService.html":{},"miscellaneous/enumerations.html":{}}}],["transactionid",{"_index":4060,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["transactions",{"_index":1688,"title":{},"body":{"controllers/DataLayerController.html":{},"controllers/OperatorsController.html":{},"injectables/TransactionsScannerService.html":{}}}],["transactionsscannermodule",{"_index":1479,"title":{"modules/TransactionsScannerModule.html":{}},"body":{"modules/ChargeNotificationsServiceModule.html":{},"modules/TransactionsScannerModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionsscannerproviders",{"_index":4447,"title":{},"body":{"modules/TransactionsScannerModule.html":{}}}],["transactionsscannerservice",{"_index":4445,"title":{"injectables/TransactionsScannerService.html":{}},"body":{"modules/TransactionsScannerModule.html":{},"injectables/TransactionsScannerService.html":{},"overview.html":{}}}],["transactionsscannerstatusservicestring",{"_index":4465,"title":{},"body":{"injectables/TransactionsScannerService.html":{}}}],["transactionstarted",{"_index":5046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactionsucceeded",{"_index":5051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transfer",{"_index":1684,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/TokenTransferWebhookDto.html":{}}}],["transfer.ts",{"_index":2050,"title":{},"body":{"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{}}}],["transfer.ts:10",{"_index":2971,"title":{},"body":{"classes/NftTransfer.html":{}}}],["transfer.ts:16",{"_index":2956,"title":{},"body":{"classes/NativeTransfer.html":{}}}],["transfer.ts:18",{"_index":2051,"title":{},"body":{"classes/ERC20Transfer.html":{}}}],["transfer.ts:21",{"_index":2967,"title":{},"body":{"classes/NftTransfer.html":{}}}],["transfer.ts:6",{"_index":2052,"title":{},"body":{"classes/ERC20Transfer.html":{}}}],["transfer.ts:7",{"_index":2958,"title":{},"body":{"classes/NativeTransfer.html":{}}}],["transfer_tokens",{"_index":760,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["transfering",{"_index":1370,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["transfermanager",{"_index":2414,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["transferred",{"_index":2054,"title":{},"body":{"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{}}}],["transfers",{"_index":3922,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["transfertoken",{"_index":2438,"title":{"classes/TransferToken.html":{}},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/TransferToken.html":{}}}],["transfertokens",{"_index":1295,"title":{},"body":{"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["transfertokens(transfertokensdto",{"_index":1320,"title":{},"body":{"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{}}}],["transfertokensdto",{"_index":622,"title":{"classes/TransferTokensDto.html":{}},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"classes/TransferTokensDto.html":{}}}],["transfertokensdto).then((transfertokensres",{"_index":3475,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transfertokensdto.amount",{"_index":1365,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["transfertokensdto.from",{"_index":1362,"title":{},"body":{"injectables/ChargeApiService.html":{},"injectables/PaymentsService.html":{}}}],["transfertokensdto.ownerid",{"_index":759,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/PaymentsService.html":{}}}],["transfertokensdto.to",{"_index":1363,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["transfertokensdto.tokenaddress",{"_index":1366,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["transfertokensethereumdto",{"_index":4525,"title":{"classes/TransferTokensEthereumDto.html":{}},"body":{"classes/TransferTokensEthereumDto.html":{}}}],["transfertokensfrompaymentsaccount",{"_index":584,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["transfertokensfrompaymentsaccount(auth0id",{"_index":621,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["transfertokensres.data.data.amount",{"_index":3484,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transfertokensres.data.data.to",{"_index":3482,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transfertokensres.data.data.txhash",{"_index":3483,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transfertokensres.data.data.wallet",{"_index":3481,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transfertokensres.data.status",{"_index":3480,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["transformarray",{"_index":4581,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["transformarray(input",{"_index":4589,"title":{},"body":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}}}],["transformer",{"_index":4977,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":678,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["transport.tcp",{"_index":682,"title":{},"body":{"modules/AppStoreModule.html":{},"modules/BundlerApiModule.html":{},"modules/ConsensusApiModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{}}}],["true",{"_index":38,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"modules/AccountsModule.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"injectables/BroadcasterService.html":{},"classes/CreateWebhookAddressesDto.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"interfaces/EventProps.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/ScannerService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UsersService.html":{},"interfaces/WalletActionDocument.html":{},"injectables/WebhooksService.html":{}}}],["try",{"_index":48,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/AnalyticsService.html":{},"injectables/AppStoreService.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"classes/ScannerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"injectables/StakingService.html":{},"injectables/TokenService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhooksService.html":{}}}],["trytodecodeevent",{"_index":101,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["trytodecodeevent(iface",{"_index":88,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["ts",{"_index":326,"title":{},"body":{"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{}}}],["ttl",{"_index":1543,"title":{},"body":{"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/EventsScannerModule.html":{}}}],["tvl",{"_index":2571,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["tvl(undefined",{"_index":4677,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["tx",{"_index":2680,"title":{},"body":{"injectables/GasService.html":{},"injectables/WebhooksService.html":{}}}],["tx?.gaslimit?.tostring",{"_index":2688,"title":{},"body":{"injectables/GasService.html":{}}}],["tx?.gasprice?.mul(txreceipt?.gasused)?.tostring",{"_index":2687,"title":{},"body":{"injectables/GasService.html":{}}}],["tx?.gasprice?.tostring",{"_index":2685,"title":{},"body":{"injectables/GasService.html":{}}}],["tx?.value?.tostring",{"_index":2689,"title":{},"body":{"injectables/GasService.html":{}}}],["txhash",{"_index":786,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumPaymentLink.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/PaymentsService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/WebhookEvent.html":{}}}],["txmetadata",{"_index":2554,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["txnvalue",{"_index":2239,"title":{},"body":{"interfaces/EventData.html":{},"injectables/GasService.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{}}}],["txreceipt",{"_index":2681,"title":{},"body":{"injectables/GasService.html":{}}}],["txreceipt?.gasused?.tostring",{"_index":2686,"title":{},"body":{"injectables/GasService.html":{}}}],["txs",{"_index":4099,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"classes/AllExceptionsFilter.html":{},"injectables/AnalyticsService.html":{},"interfaces/ApiKey.html":{},"interfaces/ApiKey-1.html":{},"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"classes/ApiKeysDto.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"interfaces/Application.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"classes/AuthOperatorDto.html":{},"interfaces/AvailableApp.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"modules/ChargeApiModule.html":{},"injectables/ChargeApiService.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"interfaces/CreateSecretDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodeResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"classes/DelegatedAmountsDto.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/EthereumPaymentAccount.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/GraphService.html":{},"controllers/GraphqlAPIController.html":{},"injectables/GraphqlAPIService.html":{},"controllers/GraphqlController.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/IValidator.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsPrdOrSbxKeyGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/LogFilter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/OperatorJwtStrategy.html":{},"interfaces/OperatorWallet.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"controllers/PaymasterController.html":{},"interfaces/PaymasterInfo.html":{},"injectables/PaymasterService.html":{},"interfaces/PaymentAccount.html":{},"interfaces/PaymentLink.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/PrdOrSbxKeyRequest.html":{},"interfaces/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"interfaces/RelayAccount.html":{},"controllers/RelayAccountsController.html":{},"injectables/RelayAccountsService.html":{},"classes/RelayDto.html":{},"classes/ScannerService.html":{},"interfaces/ScannerStatus.html":{},"classes/ScannerStatusService.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeDto.html":{},"classes/StakeTokens.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"modules/StudioLegacyJwtModule.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/SwapTokens.html":{},"interfaces/Token.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"interfaces/TokenInfo.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TradeService.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UnstakeTokens.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"interfaces/UserStakedTokens.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookAddress.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":5146,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":315,"title":{},"body":{"injectables/AnalyticsService.html":{},"injectables/ERC20EventsScannerService.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/TransactionsScannerService.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateWebhookDto.html":{},"dependencies.html":{}}}],["types.baseevent",{"_index":304,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["types.eventoptions",{"_index":307,"title":{},"body":{"injectables/AnalyticsService.html":{}}}],["types.ts",{"_index":5019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":5098,"title":{},"body":{"index.html":{}}}],["uint256",{"_index":2436,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/PaymasterApiService.html":{}}}],["uint48",{"_index":3270,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["uint8array.from",{"_index":4510,"title":{},"body":{"classes/TransferToken.html":{}}}],["uint8array.from(buffer.from(owneraddress.replace('0x",{"_index":2478,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["unable",{"_index":1143,"title":{},"body":{"injectables/BroadcasterService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["undefined",{"_index":1915,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"injectables/FuseLiquidStakingService.html":{},"classes/TokenReceive.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/VoltBarService.html":{}}}],["under",{"_index":52,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["underpaid",{"_index":5033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unique",{"_index":278,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["unit",{"_index":1031,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["unknown",{"_index":126,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"classes/ApproveToken.html":{},"controllers/AuthController.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventProps.html":{},"injectables/EventsScannerService.html":{},"injectables/ExplorerApiInterceptor.html":{},"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/GraphQLService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymasterService.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/RelayAPIService.html":{},"injectables/RelayAccountsService.html":{},"classes/ScannerStatusService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"classes/SwapTokens.html":{},"injectables/TradeService.html":{},"classes/UnstakeTokens.html":{},"injectables/UserOpEventsScannerService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/UsersService.html":{},"injectables/VoltBarService.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["unmarshalauthkey",{"_index":895,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["unmarshalbaseurl",{"_index":894,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["unsensitive",{"_index":376,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/ProjectsController.html":{}}}],["unstake",{"_index":2572,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["unstake(undefined",{"_index":2588,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"injectables/VoltBarService.html":{}}}],["unstake(unstakedto",{"_index":4190,"title":{},"body":{"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"injectables/StakingService.html":{}}}],["unstakedto",{"_index":2589,"title":{"classes/UnstakeDto.html":{}},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"controllers/StakingApiController.html":{},"controllers/StakingController.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"injectables/StakingService.html":{},"interfaces/Token.html":{},"classes/UnstakeDto.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["unstaketokenaddress",{"_index":2631,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{},"interfaces/StakedToken.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{},"injectables/VoltBarService.html":{}}}],["unstaketokens",{"_index":4537,"title":{"classes/UnstakeTokens.html":{}},"body":{"classes/UnstakeTokens.html":{}}}],["unsubscribe",{"_index":3796,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["unsubscribe(eventdata",{"_index":4007,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["unsubscribeuserophash",{"_index":3762,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["unsubscribeuserophash(userophash",{"_index":3775,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["update",{"_index":1672,"title":{},"body":{"controllers/DataLayerController.html":{},"controllers/NotificationsController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/UserOpEventsScannerService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{},"index.html":{}}}],["update(id",{"_index":3536,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["update(updatewebhookdto",{"_index":3001,"title":{},"body":{"controllers/NotificationsController.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["update(userop",{"_index":1691,"title":{},"body":{"controllers/DataLayerController.html":{}}}],["update_secret",{"_index":753,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ProjectsService.html":{}}}],["update_webhook",{"_index":3055,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["updatedat",{"_index":1867,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updatedjobdata",{"_index":1353,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["updatedjobdata.data.accountaddress",{"_index":1358,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["updatedjobdata.data.data.owner",{"_index":1359,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["updatedjobdata.data.walletaddress",{"_index":1357,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["updateduserop",{"_index":1823,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateduserop.sender",{"_index":1826,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateduserop.success",{"_index":1828,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateduserop.txhash",{"_index":1827,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateduserop.userophash",{"_index":1825,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updatedwalletaction",{"_index":1840,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateprojectdto",{"_index":3537,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["updates",{"_index":3540,"title":{},"body":{"controllers/ProjectsController.html":{},"index.html":{}}}],["updatesecret",{"_index":368,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ApiKeysController-1.html":{},"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["updatesecret(apikeysdto",{"_index":435,"title":{},"body":{"controllers/ApiKeysController-1.html":{}}}],["updatesecret(appname",{"_index":625,"title":{},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{}}}],["updatesecret(projectid",{"_index":408,"title":{},"body":{"controllers/ApiKeysController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["updatesecretkey",{"_index":466,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{}}}],["updatesecretkey(apikeysdto",{"_index":566,"title":{},"body":{"injectables/ApiKeysService-1.html":{}}}],["updatesecretkey(projectid",{"_index":495,"title":{},"body":{"injectables/ApiKeysService.html":{}}}],["updatestatus",{"_index":3727,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["updatestatus(blocknumber",{"_index":3733,"title":{},"body":{"classes/ScannerStatusService.html":{}}}],["updateuserop",{"_index":1743,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updateuserop(body",{"_index":1767,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updatewalletaction",{"_index":1744,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updatewalletaction(userop",{"_index":1769,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["updatewebhook",{"_index":3034,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["updatewebhook(updatewebhookdto",{"_index":3049,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["updatewebhookdto",{"_index":3002,"title":{"classes/UpdateWebhookDto.html":{}},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"classes/UpdateWebhookDto.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["updatewebhookdto.webhookid",{"_index":4891,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["updating",{"_index":1833,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["upgradesinstalled",{"_index":3755,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{}}}],["upsert",{"_index":533,"title":{},"body":{"injectables/ApiKeysService.html":{},"injectables/ApiKeysService-1.html":{},"injectables/AppStoreService.html":{},"classes/ScannerStatusService.html":{}}}],["uptime",{"_index":2783,"title":{},"body":{"interfaces/IValidator.html":{}}}],["url",{"_index":917,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"injectables/ExplorerApiInterceptor.html":{},"injectables/LegacyApiInterceptor.html":{},"modules/PaymasterApiModule.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAPIService.html":{},"modules/StakingModule.html":{},"injectables/WebhookSendService.html":{}}}],["url:${webhookevent.webhook.webhookurl",{"_index":1145,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["urlto",{"_index":2346,"title":{},"body":{"interfaces/FourBytesReponseEntry.html":{},"interfaces/FourBytesResponse.html":{}}}],["use",{"_index":1026,"title":{},"body":{"interfaces/BaseUserOp.html":{},"controllers/PaymasterApiController.html":{},"interfaces/UserOp.html":{}}}],["used",{"_index":1034,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/StudioLegacyJwtService.html":{},"interfaces/UserOp.html":{}}}],["usedefaultprovider",{"_index":1597,"title":{},"body":{"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/StakingModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["usefactory",{"_index":863,"title":{},"body":{"modules/AuthModule.html":{},"modules/ChargeApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/PaymasterApiModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{}}}],["useguards",{"_index":632,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/BundlerApiController.html":{},"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterApiController.html":{},"controllers/PaymasterController.html":{},"controllers/PaymentsController.html":{},"controllers/ProjectsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard('jwt",{"_index":3876,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["useguards(isapikeyprojectmatchguard",{"_index":3009,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["useguards(isprdorsbxkeyguard",{"_index":1183,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/PaymasterApiController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{}}}],["useguards(isprdorsbxkeyguard)@post('auth",{"_index":3916,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["useguards(isvalidapikeysguard",{"_index":2098,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@get('account_balance')@messagepattern('get_wallet_balance",{"_index":3391,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@get('payment_link/allowed_tokens",{"_index":2077,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@get('payment_link/allowed_tokens')@messagepattern('get_allowed_tokens",{"_index":3385,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@get('payment_links",{"_index":2084,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@get('payment_links')@messagepattern('get_payment_links",{"_index":3388,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@post('payment_account",{"_index":2071,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@post('payment_link",{"_index":2074,"title":{},"body":{"controllers/EthereumPaymentsController.html":{}}}],["useguards(isvalidapikeysguard)@post('payment_link')@messagepattern('create_payment_link",{"_index":3383,"title":{},"body":{"controllers/PaymentsController.html":{}}}],["useguards(isvalidpublicapikeyguard",{"_index":2272,"title":{},"body":{"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["useguards(jwtauthguard",{"_index":645,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":602,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/ProjectsController.html":{}}}],["useguards(jwtauthguard)@get('/account",{"_index":3094,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["useguards(jwtauthguard)@get('/is",{"_index":3083,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["useguards(jwtauthguard)@get('/sponsored",{"_index":3098,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["useguards(jwtauthguard)@get('api",{"_index":608,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@get('payment_links",{"_index":613,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@get('payments/account/balance",{"_index":619,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@get('payments/allowed_tokens",{"_index":616,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@get('version",{"_index":3305,"title":{},"body":{"controllers/PaymasterController.html":{}}}],["useguards(jwtauthguard)@post('/account",{"_index":3086,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["useguards(jwtauthguard)@post('/login",{"_index":836,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@post('/register",{"_index":832,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard)@post('activate/:appname",{"_index":587,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@post('payment_link",{"_index":593,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@post('payments/account/transfer_tokens",{"_index":623,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@post('secret/:appname",{"_index":599,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(jwtauthguard)@put('secret/:appname",{"_index":626,"title":{},"body":{"controllers/AppStoreController.html":{}}}],["useguards(undefined",{"_index":3918,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["useguards(undefined)@get",{"_index":3865,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["useguards(undefined)@get('historical_txs",{"_index":3862,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["useguards(undefined)@post('create",{"_index":3859,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["useguards(undefined)@post('relay",{"_index":3867,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{}}}],["useinterceptors",{"_index":1175,"title":{},"body":{"controllers/BundlerApiController.html":{},"controllers/ConsensusApiController.html":{},"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["useinterceptors(bundlerapiinterceptor",{"_index":1185,"title":{},"body":{"controllers/BundlerApiController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":1532,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["useinterceptors(explorerapiinterceptor",{"_index":2273,"title":{},"body":{"controllers/ExplorerApiController.html":{}}}],["useinterceptors(legacyapiinterceptor",{"_index":2907,"title":{},"body":{"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/TradeApiController.html":{}}}],["user",{"_index":638,"title":{"interfaces/User.html":{}},"body":{"controllers/AppStoreController.html":{},"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"interfaces/BaseUserOp.html":{},"injectables/BundlerApiInterceptor.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{},"injectables/SmartWalletsAAEventsService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"interfaces/User.html":{},"interfaces/UserOp.html":{},"injectables/UserOpEventsScannerService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["user's",{"_index":839,"title":{},"body":{"controllers/AuthController.html":{}}}],["user('sub",{"_index":648,"title":{},"body":{"controllers/AppStoreController.html":{},"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"controllers/ProjectsController.html":{}}}],["user._id",{"_index":1903,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["user.auth0id",{"_index":1893,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["user.dto",{"_index":842,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OperatorsController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1622,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{}}}],["user.dto.ts:11",{"_index":1629,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{}}}],["user.dto.ts:15",{"_index":1632,"title":{},"body":{"classes/CreateOperatorUserDto.html":{}}}],["user.dto.ts:19",{"_index":1627,"title":{},"body":{"classes/CreateOperatorUserDto.html":{}}}],["user.dto.ts:5",{"_index":1630,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":1631,"title":{},"body":{"classes/CreateOperatorUserDto.html":{},"classes/CreateUserDto.html":{}}}],["user.email",{"_index":1889,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["user.owneraddress",{"_index":3882,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["user.query",{"_index":3885,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["user?.auth0id",{"_index":3809,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["user?.email",{"_index":1888,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["user?.id",{"_index":750,"title":{},"body":{"injectables/AppStoreService.html":{},"controllers/AuthController.html":{}}}],["user_id",{"_index":1892,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{}}}],["userbyid",{"_index":2797,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userbyid.auth0id",{"_index":2799,"title":{},"body":{"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{}}}],["userid",{"_index":2076,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"injectables/ProjectsService.html":{},"injectables/VoltBarService.html":{}}}],["userid._id",{"_index":3613,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["usermodel",{"_index":4645,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodelstring",{"_index":4653,"title":{},"body":{"injectables/UsersService.html":{}}}],["userop",{"_index":1036,"title":{"interfaces/UserOp.html":{}},"body":{"interfaces/BaseUserOp.html":{},"injectables/BundlerApiInterceptor.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{}}}],["userop).catch(e",{"_index":1242,"title":{},"body":{"injectables/BundlerApiInterceptor.html":{}}}],["useropeventdata",{"_index":2240,"title":{"interfaces/UserOpEventData.html":{}},"body":{"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{}}}],["useropeventsscannerservice",{"_index":2244,"title":{"injectables/UserOpEventsScannerService.html":{}},"body":{"modules/EventsScannerModule.html":{},"injectables/UserOpEventsScannerService.html":{},"overview.html":{}}}],["useropfactory",{"_index":1712,"title":{"injectables/UserOpFactory.html":{}},"body":{"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/UserOpFactory.html":{},"overview.html":{}}}],["userophash",{"_index":785,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BaseUserOp.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EventData.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/SmartWalletsAAEventsService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/TokenEventData.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpEventsScannerService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["useroplogsfilterstring",{"_index":4558,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["useropmodel",{"_index":1751,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["useropparser",{"_index":1713,"title":{"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{}},"body":{"modules/DataLayerModule.html":{},"modules/PaymasterApiModule.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"overview.html":{}}}],["useropscannerstatusservicestring",{"_index":4557,"title":{},"body":{"injectables/UserOpEventsScannerService.html":{}}}],["useropstring",{"_index":1772,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["users",{"_index":4629,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["userscontroller",{"_index":4617,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["usersmodule",{"_index":197,"title":{"modules/UsersModule.html":{}},"body":{"modules/AccountsModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterModule.html":{},"modules/ProjectsModule.html":{},"modules/SmartWalletsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":4639,"title":{},"body":{"modules/UsersModule.html":{}}}],["usersservice",{"_index":695,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AppStoreService.html":{},"controllers/AuthController.html":{},"guards/IsAccountOwnerGuard.html":{},"guards/IsCreatorOwnerGuard.html":{},"guards/IsProjectOwnerGuard.html":{},"injectables/ProjectsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["userstakedtokens",{"_index":4172,"title":{"interfaces/UserStakedTokens.html":{}},"body":{"interfaces/StakedToken.html":{},"injectables/StakingAPIService.html":{},"interfaces/StakingOption.html":{},"interfaces/StakingProvider.html":{},"interfaces/Token.html":{},"interfaces/UserStakedTokens.html":{}}}],["util",{"_index":4984,"title":{},"body":{"dependencies.html":{}}}],["utilize",{"_index":5072,"title":{},"body":{"index.html":{}}}],["v0/admin",{"_index":2908,"title":{},"body":{"controllers/LegacyAdminApiController.html":{}}}],["v0/bundler",{"_index":1184,"title":{},"body":{"controllers/BundlerApiController.html":{}}}],["v0/consensus",{"_index":1509,"title":{},"body":{"controllers/ConsensusApiController.html":{}}}],["v0/explorer",{"_index":2274,"title":{},"body":{"controllers/ExplorerApiController.html":{}}}],["v0/graphql",{"_index":2725,"title":{},"body":{"controllers/GraphqlAPIController.html":{}}}],["v0/jobs",{"_index":2948,"title":{},"body":{"controllers/LegacyJobsApiController.html":{}}}],["v0/notifications",{"_index":2976,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["v0/paymaster",{"_index":3155,"title":{},"body":{"controllers/PaymasterApiController.html":{}}}],["v0/staking",{"_index":4195,"title":{},"body":{"controllers/StakingApiController.html":{}}}],["v0/trade",{"_index":2949,"title":{},"body":{"controllers/LegacyTradeApiController.html":{}}}],["v0/wallets",{"_index":2952,"title":{},"body":{"controllers/LegacyWalletApiController.html":{}}}],["v1",{"_index":2935,"title":{},"body":{"injectables/LegacyApiInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["v1/trade",{"_index":4434,"title":{},"body":{"controllers/TradeApiController.html":{}}}],["v2",{"_index":4086,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{},"interfaces/WalletActionDocument.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["v2.controller",{"_index":2947,"title":{},"body":{"modules/LegacyApiModule.html":{},"modules/SmartWalletsAPIModule.html":{}}}],["v2.controller.ts",{"_index":3914,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/TradeApiController.html":{}}}],["v2.controller.ts:10",{"_index":4432,"title":{},"body":{"controllers/TradeApiController.html":{}}}],["v2.controller.ts:14",{"_index":4433,"title":{},"body":{"controllers/TradeApiController.html":{}}}],["v2.controller.ts:19",{"_index":3917,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["v2.controller.ts:26",{"_index":3920,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["v2.controller.ts:36",{"_index":3923,"title":{},"body":{"controllers/SmartWalletsAPIV2Controller.html":{}}}],["val",{"_index":150,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["valid",{"_index":2093,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/ExplorerApiController.html":{},"controllers/GraphqlAPIController.html":{},"guards/IsValidApiKeysGuard.html":{},"guards/IsValidApiKeysGuard-1.html":{},"guards/IsValidPublicApiKeyGuard.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/NotificationsController.html":{},"controllers/PaymentsController.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/StakingApiController.html":{},"controllers/TradeApiController.html":{}}}],["validafter",{"_index":3196,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["validate",{"_index":2864,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{},"controllers/OperatorsController.html":{}}}],["validate(authoperatordto",{"_index":3105,"title":{},"body":{"controllers/OperatorsController.html":{}}}],["validate(payload",{"_index":2866,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtStrategy-1.html":{},"injectables/OperatorJwtStrategy.html":{}}}],["validator",{"_index":449,"title":{},"body":{"classes/ApiKeysDto.html":{},"classes/AuthOperatorDto.html":{},"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreateOperatorUserDto.html":{},"classes/CreateOperatorWalletDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWebhookAddressesDto.html":{},"classes/CreateWebhookDto.html":{},"classes/DelegatedAmountsDto.html":{},"classes/RelayDto.html":{},"classes/SmartWalletsAuthDto.html":{},"classes/StakeDto.html":{},"classes/SubmitQuestionnaireDto.html":{},"classes/TransferTokensDto.html":{},"classes/TransferTokensEthereumDto.html":{},"classes/UnstakeDto.html":{},"classes/UpdateWebhookDto.html":{},"dependencies.html":{}}}],["validatorfee",{"_index":2577,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["validuntil",{"_index":3195,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["value",{"_index":311,"title":{},"body":{"injectables/AnalyticsService.html":{},"classes/ApproveToken.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"injectables/BroadcasterService.html":{},"injectables/BundlerApiInterceptor.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"injectables/EthereumPaymentsService.html":{},"interfaces/EventData.html":{},"classes/FuseLegacySDK.html":{},"injectables/FuseLiquidStakingService.html":{},"injectables/GasService.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"injectables/PaymasterApiService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"classes/StakeTokens.html":{},"injectables/StakingService.html":{},"injectables/StudioLegacyJwtService.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"interfaces/TokenEventData.html":{},"classes/TokenReceive.html":{},"classes/TokenTransferWebhookDto.html":{},"injectables/TransactionsScannerService.html":{},"classes/TransferToken.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"interfaces/UserOpEventData.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"injectables/VoltBarService.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"interfaces/WebhookEvent.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{},"miscellaneous/enumerations.html":{}}}],["value.tostring",{"_index":814,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["valueeth",{"_index":2029,"title":{},"body":{"injectables/ERC20EventsScannerService.html":{},"interfaces/EventData.html":{},"interfaces/TokenEventData.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/UserOpEventData.html":{},"interfaces/WebhookEvent.html":{}}}],["valueinwei",{"_index":822,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["values",{"_index":723,"title":{},"body":{"injectables/AppStoreService.html":{},"injectables/ChargeApiService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"index.html":{}}}],["values(merge(keyby(apps",{"_index":745,"title":{},"body":{"injectables/AppStoreService.html":{}}}],["values(merge(keyby(tokensbalance",{"_index":1381,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["variable",{"_index":1167,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{},"index.html":{}}}],["variables",{"_index":2422,"title":{},"body":{"classes/FuseLegacySDK.html":{},"injectables/GraphQLService.html":{},"classes/LegacyEventEmitter.html":{},"index.html":{}}}],["variables.fuse_api_base_url}/api",{"_index":2446,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["variables.socket_server_url",{"_index":2470,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["various",{"_index":5064,"title":{},"body":{"index.html":{}}}],["ver",{"_index":3337,"title":{},"body":{"injectables/PaymasterService.html":{}}}],["verificationgaslimit",{"_index":1012,"title":{},"body":{"interfaces/BaseUserOp.html":{},"injectables/PaymasterApiService.html":{},"interfaces/UserOp.html":{}}}],["verifies",{"_index":3518,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/UsersController.html":{}}}],["verifying",{"_index":1027,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["version",{"_index":21,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"controllers/AuthController.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"controllers/OperatorsController.html":{},"controllers/PaymasterController.html":{},"injectables/PaymasterService.html":{},"controllers/ProjectsController.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"controllers/SmartWalletsAPIController.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["versiontype",{"_index":3745,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"miscellaneous/enumerations.html":{}}}],["versiontype.v2",{"_index":4048,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["void",{"_index":799,"title":{},"body":{"classes/ApproveToken.html":{},"controllers/BundlerApiController.html":{},"classes/ERC20Transfer.html":{},"controllers/ExplorerApiController.html":{},"controllers/LegacyAdminApiController.html":{},"controllers/LegacyJobsApiController.html":{},"controllers/LegacyTradeApiController.html":{},"controllers/LegacyWalletApiController.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/PaymasterApiController.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"controllers/TradeApiController.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["voltageclient",{"_index":2704,"title":{},"body":{"injectables/GraphService.html":{},"injectables/VoltBarService.html":{}}}],["voltbalance",{"_index":4747,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbalancehistories",{"_index":4726,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbalancehistories.length",{"_index":4742,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbarabi",{"_index":4690,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbarclient",{"_index":2705,"title":{},"body":{"injectables/GraphService.html":{}}}],["voltbargraphclient",{"_index":4668,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbarid",{"_index":4253,"title":{},"body":{"injectables/StakingService.html":{},"injectables/VoltBarService.html":{}}}],["voltbarinterface",{"_index":4669,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["voltbarservice",{"_index":4226,"title":{"injectables/VoltBarService.html":{}},"body":{"modules/StakingModule.html":{},"injectables/StakingService.html":{},"injectables/VoltBarService.html":{},"overview.html":{}}}],["voltprice",{"_index":4709,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["volttokencontract",{"_index":4745,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["volttokencontract.balanceof(this.address",{"_index":4748,"title":{},"body":{"injectables/VoltBarService.html":{}}}],["vs",{"_index":5124,"title":{},"body":{"index.html":{}}}],["wait",{"_index":2536,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["wallet",{"_index":1678,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"modules/LegacyApiModule.html":{},"classes/LegacyEventEmitter.html":{},"controllers/LegacyWalletApiController.html":{},"controllers/OperatorsController.html":{},"injectables/PaymasterApiService.html":{},"injectables/RelayAccountsService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["wallet(privatekeystring",{"_index":3267,"title":{},"body":{"injectables/PaymasterApiService.html":{}}}],["wallet.constants",{"_index":948,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{}}}],["wallet.dto.ts",{"_index":1634,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["wallet.dto.ts:12",{"_index":1637,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["wallet.dto.ts:5",{"_index":1638,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["wallet.dto.ts:8",{"_index":1639,"title":{},"body":{"classes/CreateOperatorWalletDto.html":{}}}],["wallet.generate",{"_index":3675,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["wallet.getchecksumaddressstring",{"_index":3678,"title":{},"body":{"injectables/RelayAccountsService.html":{}}}],["wallet.interface",{"_index":951,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["wallet.interface.ts",{"_index":877,"title":{},"body":{"interfaces/BackendWallet.html":{},"interfaces/EthereumBackendWallet.html":{},"interfaces/ISmartWalletUser.html":{},"interfaces/OperatorWallet.html":{},"interfaces/SmartContractWallet.html":{}}}],["wallet.providers",{"_index":1285,"title":{},"body":{"modules/ChargeApiModule.html":{}}}],["wallet.schema",{"_index":943,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["wallet.schema.ts",{"_index":5021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_creation_failed",{"_index":5041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_creation_started",{"_index":5039,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet_creation_succeeded",{"_index":5043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["walletaction",{"_index":768,"title":{"classes/WalletAction.html":{}},"body":{"classes/ApproveToken.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"classes/WalletAction.html":{}}}],["walletaction.name",{"_index":1876,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["walletaction.sent",{"_index":1878,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["walletaction.sent[0].symbol",{"_index":3805,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["walletaction.userophash",{"_index":1842,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["walletaction.walletaddress",{"_index":3797,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["walletaction:#${sender",{"_index":3787,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["walletaction:10",{"_index":4131,"title":{},"body":{"classes/StakeTokens.html":{}}}],["walletaction:11",{"_index":4392,"title":{},"body":{"classes/TokenReceive.html":{}}}],["walletaction:15",{"_index":794,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["walletaction:19",{"_index":796,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["walletaction:36",{"_index":2959,"title":{},"body":{"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{}}}],["walletaction:38",{"_index":792,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{}}}],["walletaction:5",{"_index":778,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["walletaction:6",{"_index":2969,"title":{},"body":{"classes/NftTransfer.html":{}}}],["walletaction:7",{"_index":798,"title":{},"body":{"classes/ApproveToken.html":{},"classes/ERC20Transfer.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{}}}],["walletaction:9",{"_index":4322,"title":{},"body":{"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["walletaction?.sent[0]?.decimals",{"_index":3804,"title":{},"body":{"injectables/SmartWalletsAAEventsService.html":{}}}],["walletactiondocument",{"_index":1775,"title":{"interfaces/WalletActionDocument.html":{}},"body":{"injectables/DataLayerService.html":{},"interfaces/WalletActionDocument.html":{}}}],["walletactioninterface",{"_index":1783,"title":{"interfaces/WalletActionInterface.html":{}},"body":{"injectables/DataLayerService.html":{},"interfaces/WalletActionInterface.html":{}}}],["walletactionschema",{"_index":4776,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["walletactionschema.index",{"_index":4779,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["walletactionschema.plugin(paginate",{"_index":4780,"title":{},"body":{"interfaces/WalletActionDocument.html":{}}}],["walletactionstring",{"_index":1773,"title":{},"body":{"injectables/DataLayerService.html":{}}}],["walletaddress",{"_index":783,"title":{},"body":{"classes/ApproveToken.html":{},"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/EthereumBackendWallet.html":{},"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"controllers/OperatorsController.html":{},"injectables/PaymentsService.html":{},"classes/RelayDto.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsAPIService.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/TokenReceive.html":{},"classes/UnstakeTokens.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{}}}],["walletfactoryaddress",{"_index":4088,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["walletfactorycurrentaddress",{"_index":3746,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletfactoryoriginaladdress",{"_index":3747,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletfunction",{"_index":1041,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{}}}],["walletfunctionname",{"_index":4144,"title":{},"body":{"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["walletimplementationcurrentaddress",{"_index":3748,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletimplementationoriginaladdress",{"_index":3749,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletmodule",{"_index":2542,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"classes/RelayDto.html":{}}}],["walletmoduleaddress",{"_index":2555,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["walletmoduleaddresses",{"_index":2409,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"miscellaneous/typealiases.html":{}}}],["walletmodules",{"_index":2419,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["walletmodulesoriginal",{"_index":3750,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletowneroriginaladdress",{"_index":3751,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["walletownershipmanager",{"_index":2418,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["walletpaddedversion",{"_index":3986,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["walletphonenumber",{"_index":1299,"title":{},"body":{"injectables/ChargeApiService.html":{}}}],["wallets",{"_index":763,"title":{},"body":{"classes/ApproveToken.html":{},"injectables/BackendWalletsEthereumService.html":{},"interfaces/BaseUserOp.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"controllers/ChargeSmartWalletsServiceController.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"controllers/DataLayerController.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"classes/ERC20Transfer.html":{},"interfaces/ERC721Transfer.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"classes/FuseLegacySDK.html":{},"injectables/JwtStrategy-1.html":{},"injectables/LegacyApiInterceptor.html":{},"classes/LegacyEventEmitter.html":{},"classes/NativeTransfer.html":{},"classes/NftTransfer.html":{},"injectables/RelayAPIService.html":{},"classes/RelayDto.html":{},"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsAPIController.html":{},"modules/SmartWalletsAPIModule.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/SmartWalletsAuthDto.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{},"classes/StakeTokens.html":{},"classes/SwapTokens.html":{},"interfaces/Token-1.html":{},"classes/TokenReceive.html":{},"injectables/TokenService.html":{},"classes/TokenTransferWebhookDto.html":{},"classes/UnstakeTokens.html":{},"interfaces/UserOp.html":{},"injectables/UserOpFactory.html":{},"injectables/UserOpParser-1.html":{},"classes/WalletAction.html":{},"interfaces/WalletActionDocument.html":{},"interfaces/WalletActionInterface.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["wallets.constants",{"_index":1791,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["wallets.constants.ts",{"_index":5023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallets.controller",{"_index":4105,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["wallets.controller.ts",{"_index":3943,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:17",{"_index":3945,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:26",{"_index":3956,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:31",{"_index":3948,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:36",{"_index":3960,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:41",{"_index":3953,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:46",{"_index":3951,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.controller.ts:51",{"_index":3958,"title":{},"body":{"controllers/SmartWalletsController.html":{}}}],["wallets.interface",{"_index":3829,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["wallets.interface.ts",{"_index":3742,"title":{},"body":{"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{}}}],["wallets.module",{"_index":1504,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{}}}],["wallets.module.ts",{"_index":4104,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["wallets.providers",{"_index":4107,"title":{},"body":{"modules/SmartWalletsModule.html":{}}}],["wallets/auth",{"_index":2524,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["wallets/constants/smart",{"_index":1790,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsEventsService.html":{},"miscellaneous/enumerations.html":{}}}],["wallets/create",{"_index":2528,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["wallets/dto/relay.dto",{"_index":3870,"title":{},"body":{"controllers/SmartWalletsAPIController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["wallets/dto/relay.dto.ts",{"_index":3681,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:12",{"_index":3683,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:15",{"_index":3690,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:18",{"_index":3688,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:21",{"_index":3693,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:24",{"_index":3697,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:28",{"_index":3684,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:32",{"_index":3695,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:36",{"_index":3687,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:40",{"_index":3686,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:44",{"_index":3689,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:6",{"_index":3692,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/relay.dto.ts:9",{"_index":3696,"title":{},"body":{"classes/RelayDto.html":{}}}],["wallets/dto/token",{"_index":1697,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/TokenTransferWebhookDto.html":{}}}],["wallets/interfaces/smart",{"_index":3741,"title":{},"body":{"interfaces/SmartContractWallet.html":{},"interfaces/SmartWallet.html":{},"interfaces/SmartWalletService.html":{},"injectables/SmartWalletsAAService.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{}}}],["wallets/relay",{"_index":2556,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["wallets/schemas/smart",{"_index":4017,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{},"miscellaneous/enumerations.html":{}}}],["wallets/services/smart",{"_index":3811,"title":{},"body":{"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{}}}],["wallets/smart",{"_index":1503,"title":{},"body":{"modules/ChargeSmartWalletsServiceModule.html":{},"modules/DataLayerModule.html":{},"injectables/DataLayerService.html":{},"injectables/SmartWalletsAAEventsService.html":{},"injectables/SmartWalletsAAService.html":{},"controllers/SmartWalletsController.html":{},"injectables/SmartWalletsEventsService.html":{},"injectables/SmartWalletsLegacyService.html":{},"modules/SmartWalletsModule.html":{}}}],["wallettype",{"_index":881,"title":{},"body":{"interfaces/BackendWallet.html":{},"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"interfaces/EthereumBackendWallet.html":{}}}],["wallettypes",{"_index":909,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{},"injectables/ChargeApiService.html":{},"injectables/EthereumPaymentsService.html":{},"injectables/PaymentsService.html":{},"miscellaneous/enumerations.html":{}}}],["walletversion",{"_index":3985,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["want",{"_index":1926,"title":{},"body":{"interfaces/DecodeResult.html":{},"interfaces/Decoded.html":{}}}],["watch",{"_index":5125,"title":{},"body":{"index.html":{}}}],["watcher.tojson",{"_index":4925,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["watcherjson",{"_index":4924,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["watcherjson.webhookid",{"_index":4927,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["watchers/:address",{"_index":4840,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["watchers/:address')@messagepattern('get_address_watchers",{"_index":4825,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["web",{"_index":4498,"title":{},"body":{"classes/TransferToken.html":{},"dependencies.html":{}}}],["webhook",{"_index":1111,"title":{"interfaces/Webhook.html":{}},"body":{"injectables/BroadcasterService.html":{},"classes/CreateWebhookAddressesDto.html":{},"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"injectables/ERC20EventsScannerService.html":{},"controllers/EthereumPaymentsController.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"controllers/OperatorsController.html":{},"controllers/PaymentsController.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"injectables/TransactionsScannerService.html":{},"interfaces/Webhook.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["webhook(webhookevent",{"_index":2086,"title":{},"body":{"controllers/EthereumPaymentsController.html":{},"controllers/PaymentsController.html":{}}}],["webhook.dto",{"_index":1698,"title":{},"body":{"controllers/DataLayerController.html":{},"injectables/DataLayerService.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/SmartWalletsAPIService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/UpdateWebhookDto.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["webhook.dto.ts",{"_index":1659,"title":{},"body":{"classes/CreateWebhookDto.html":{},"classes/TokenTransferWebhookDto.html":{},"classes/UpdateWebhookDto.html":{}}}],["webhook.dto.ts:10",{"_index":4431,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:12",{"_index":4426,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:13",{"_index":1661,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["webhook.dto.ts:14",{"_index":4429,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:16",{"_index":4424,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:18",{"_index":4427,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:2",{"_index":4423,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:20",{"_index":4428,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:22",{"_index":4425,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:24",{"_index":4421,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:4",{"_index":4422,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:6",{"_index":1662,"title":{},"body":{"classes/CreateWebhookDto.html":{},"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:7",{"_index":4550,"title":{},"body":{"classes/UpdateWebhookDto.html":{}}}],["webhook.dto.ts:8",{"_index":4430,"title":{},"body":{"classes/TokenTransferWebhookDto.html":{}}}],["webhook.dto.ts:9",{"_index":1664,"title":{},"body":{"classes/CreateWebhookDto.html":{}}}],["webhook?.projectid",{"_index":2813,"title":{},"body":{"guards/IsApiKeyProjectMatchGuard.html":{}}}],["webhook_id",{"_index":984,"title":{},"body":{"injectables/BackendWalletsEthereumService.html":{}}}],["webhookaddress",{"_index":4783,"title":{"interfaces/WebhookAddress.html":{}},"body":{"interfaces/WebhookAddress.html":{},"injectables/WebhooksService.html":{}}}],["webhookaddressmodel",{"_index":4857,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["webhookaddressmodelstring",{"_index":4881,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["webhookevent",{"_index":1086,"title":{"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{}},"body":{"injectables/BroadcasterService.html":{},"interfaces/EthereumPaymentLink.html":{},"controllers/EthereumPaymentsController.html":{},"injectables/EthereumPaymentsService.html":{},"controllers/OperatorsController.html":{},"controllers/PaymentsController.html":{},"injectables/PaymentsService.html":{},"interfaces/WebhookEvent.html":{},"interfaces/WebhookEvent-1.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["webhookevent._id",{"_index":1142,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.addresstype",{"_index":4801,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["webhookevent.direction",{"_index":3468,"title":{},"body":{"injectables/PaymentsService.html":{},"injectables/WebhookSendService.html":{}}}],["webhookevent.event.activity[0].asset",{"_index":2202,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["webhookevent.event.activity[0].hash",{"_index":2203,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["webhookevent.event.activity[0].value",{"_index":2201,"title":{},"body":{"injectables/EthereumPaymentsService.html":{}}}],["webhookevent.eventdata",{"_index":4799,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["webhookevent.eventdata.txhash",{"_index":1130,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.from",{"_index":3476,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.numberoftries",{"_index":1131,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.projectid",{"_index":4800,"title":{},"body":{"injectables/WebhookSendService.html":{}}}],["webhookevent.responses.push",{"_index":1149,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.responses.push(this.getresponsedetailswithdate(response.status",{"_index":1133,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.retryafter",{"_index":1151,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.save",{"_index":1154,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.success",{"_index":1135,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookevent.to",{"_index":3477,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.tokenaddress",{"_index":3471,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.tokenaddress.tolowercase",{"_index":3489,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.tokensymbol",{"_index":3472,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.tokensymbol.tolowercase",{"_index":3490,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.txhash",{"_index":3478,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.value",{"_index":3479,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.valueeth",{"_index":3470,"title":{},"body":{"injectables/PaymentsService.html":{}}}],["webhookevent.webhook.webhookurl",{"_index":1129,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhookSendService.html":{}}}],["webhookevent?.retryafter",{"_index":1157,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookeventmodel",{"_index":1083,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["webhookeventmodelstring",{"_index":1106,"title":{},"body":{"injectables/BroadcasterService.html":{},"injectables/WebhooksService.html":{}}}],["webhookeventproviders",{"_index":1066,"title":{},"body":{"modules/BroadcasterModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/WebhooksModule.html":{}}}],["webhookeventstosendnow",{"_index":1119,"title":{},"body":{"injectables/BroadcasterService.html":{}}}],["webhookid",{"_index":1405,"title":{},"body":{"injectables/ChargeApiService.html":{},"classes/CreateWebhookAddressesDto.html":{},"guards/IsApiKeyProjectMatchGuard.html":{},"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{},"injectables/PaymentsService.html":{},"injectables/SmartWalletsAAService.html":{},"classes/UpdateWebhookDto.html":{},"interfaces/WebhookAddress.html":{},"controllers/WebhooksController.html":{},"injectables/WebhooksService.html":{}}}],["webhookmodel",{"_index":4859,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["webhookmodelstring",{"_index":4882,"title":{},"body":{"injectables/WebhooksService.html":{}}}],["webhooks",{"_index":4809,"title":{},"body":{"controllers/WebhooksController.html":{}}}],["webhookscontroller",{"_index":4807,"title":{"controllers/WebhooksController.html":{}},"body":{"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{}}}],["webhooksendservice",{"_index":1059,"title":{"injectables/WebhookSendService.html":{}},"body":{"modules/BroadcasterModule.html":{},"injectables/BroadcasterService.html":{},"modules/EthereumPaymentsModule.html":{},"injectables/EthereumPaymentsService.html":{},"modules/PaymentsModule.html":{},"injectables/PaymentsService.html":{},"injectables/WebhookSendService.html":{},"overview.html":{}}}],["webhooksmodule",{"_index":1057,"title":{"modules/WebhooksModule.html":{}},"body":{"modules/BroadcasterModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/EventsScannerModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/WebhooksModule.html":{},"modules.html":{},"overview.html":{}}}],["webhooksproviders",{"_index":4849,"title":{},"body":{"modules/WebhooksModule.html":{}}}],["webhooksservice",{"_index":1951,"title":{"injectables/WebhooksService.html":{}},"body":{"injectables/ERC20EventsScannerService.html":{},"injectables/TransactionsScannerService.html":{},"controllers/WebhooksController.html":{},"modules/WebhooksModule.html":{},"injectables/WebhooksService.html":{},"overview.html":{}}}],["webhookurl",{"_index":1605,"title":{},"body":{"classes/CreateEthereumPaymentLinkDto.html":{},"classes/CreatePaymentLinkDto.html":{},"classes/CreateWebhookDto.html":{},"interfaces/EthereumPaymentLink.html":{},"interfaces/PaymentLink.html":{},"interfaces/Webhook.html":{},"injectables/WebhookSendService.html":{},"injectables/WebhooksService.html":{}}}],["website",{"_index":2784,"title":{},"body":{"interfaces/IValidator.html":{}}}],["websocket",{"_index":2405,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["websocketevents",{"_index":1789,"title":{},"body":{"injectables/DataLayerService.html":{},"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"injectables/SmartWalletsEventsService.html":{},"miscellaneous/enumerations.html":{}}}],["websocketevents.transaction_failed",{"_index":1830,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.transaction_hash",{"_index":4052,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.transaction_started",{"_index":1810,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.transaction_succeeded",{"_index":1829,"title":{},"body":{"injectables/DataLayerService.html":{},"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.wallet_creation_failed",{"_index":4058,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.wallet_creation_started",{"_index":4051,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["websocketevents.wallet_creation_succeeded",{"_index":4056,"title":{},"body":{"injectables/SmartWalletsEventsService.html":{}}}],["wfuseaddress",{"_index":2576,"title":{},"body":{"injectables/FuseLiquidStakingService.html":{}}}],["whenever",{"_index":1038,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["whether",{"_index":1046,"title":{},"body":{"interfaces/BaseUserOp.html":{},"interfaces/UserOp.html":{}}}],["withdraw",{"_index":1513,"title":{},"body":{"controllers/ConsensusApiController.html":{},"injectables/ConsensusApiService.html":{},"controllers/ConsensusController.html":{},"classes/SwapTokens.html":{},"classes/UnstakeTokens.html":{}}}],["withdraw(data",{"_index":1523,"title":{},"body":{"controllers/ConsensusApiController.html":{},"controllers/ConsensusController.html":{}}}],["withdraw(validator",{"_index":1557,"title":{},"body":{"injectables/ConsensusApiService.html":{}}}],["without",{"_index":57,"title":{},"body":{"interfaces/AbstractDecodedEventResult.html":{},"interfaces/DecodedEventResultWithArgNames.html":{},"interfaces/DecodedEventResultWithoutArgNames.html":{},"interfaces/EventProps.html":{}}}],["withpaymaster",{"_index":4508,"title":{},"body":{"classes/TransferToken.html":{}}}],["world",{"_index":1451,"title":{},"body":{"injectables/ChargeApiServiceService.html":{},"injectables/ChargeAppsServiceService.html":{},"injectables/ChargeRelayServiceService.html":{}}}],["wrong",{"_index":3355,"title":{},"body":{"injectables/PaymasterService.html":{},"injectables/UserOpParser.html":{},"injectables/UserOpParser-1.html":{},"miscellaneous/enumerations.html":{}}}],["wrong_token",{"_index":5034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ws",{"_index":2406,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{},"dependencies.html":{}}}],["wss://ws.fuse.io/connection/websocket",{"_index":2431,"title":{},"body":{"classes/FuseLegacySDK.html":{},"classes/LegacyEventEmitter.html":{}}}],["wsurl",{"_index":4064,"title":{},"body":{"injectables/SmartWalletsLegacyService.html":{}}}],["x",{"_index":2116,"title":{},"body":{"modules/EthereumPaymentsModule.html":{}}}],["yes",{"_index":310,"title":{},"body":{"injectables/AnalyticsService.html":{},"controllers/SmartWalletsAPIV2Controller.html":{},"classes/TokenReceive.html":{},"injectables/WebhookSendService.html":{}}}],["zod",{"_index":5008,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":198,"title":{},"body":{"modules/AccountsModule.html":{},"modules/ApiKeyModule.html":{},"modules/ApiKeysModule.html":{},"modules/AppStoreModule.html":{},"modules/AuthModule.html":{},"modules/BroadcasterModule.html":{},"modules/BundlerApiModule.html":{},"modules/ChargeApiModule.html":{},"modules/ChargeApiServiceModule.html":{},"modules/ChargeAppsServiceModule.html":{},"modules/ChargeNetworkServiceModule.html":{},"modules/ChargeNotificationsServiceModule.html":{},"modules/ChargeRelayServiceModule.html":{},"modules/ChargeSmartWalletsServiceModule.html":{},"modules/ConsensusApiModule.html":{},"modules/ConsensusModule.html":{},"modules/DataLayerModule.html":{},"modules/EthereumPaymentsModule.html":{},"modules/EventsScannerModule.html":{},"modules/ExplorerApiModule.html":{},"modules/GraphqlAPIModule.html":{},"modules/GraphqlModule.html":{},"modules/LegacyApiModule.html":{},"modules/NotificationsModule.html":{},"modules/OperatorsModule.html":{},"modules/PaymasterApiModule.html":{},"modules/PaymasterModule.html":{},"modules/PaymentsModule.html":{},"modules/ProjectsModule.html":{},"modules/RelayAccountsModule.html":{},"modules/SmartWalletsAPIModule.html":{},"modules/SmartWalletsModule.html":{},"modules/StakingAPIModule.html":{},"modules/StakingModule.html":{},"modules/StudioLegacyJwtModule.html":{},"modules/TransactionsScannerModule.html":{},"modules/UsersModule.html":{},"modules/WebhooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractDecodedEventResult.html":{"url":"interfaces/AbstractDecodedEventResult.html","title":"interface - AbstractDecodedEventResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractDecodedEventResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeEvent.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            eventFragment\n                                        \n                                \n                                \n                                        \n                                            fullSignature\n                                        \n                                \n                                \n                                        \n                                            hasArgumentNames\n                                        \n                                \n                                \n                                        \n                                            signature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventFragment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventFragment:     EventFragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventFragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullSignature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fullSignature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasArgumentNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasArgumentNames:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  EventFragment,\n  FormatTypes,\n  Interface,\n  ParamType\n} from '@ethersproject/abi'\nimport { version } from '@ethersproject/abi/lib/_version'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Logger } from '@ethersproject/logger'\n\nimport { combinations as generateCombinations } from './combinations'\n\nconst logger = new Logger(version)\n\nexport interface EventProps {\n  topics: string[];\n  data: string;\n}\n\ninterface AbstractDecodedEventResult {\n  eventFragment: EventFragment;\n  hasArgumentNames: boolean;\n  signature: string;\n  fullSignature: string;\n}\n\nexport interface DecodedEventResultWithArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: true;\n  args: Record;\n}\n\nexport interface DecodedEventResultWithoutArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: false;\n  args: ReadonlyArray;\n}\n\nexport type DecodedEventResult =\n  | DecodedEventResultWithArgNames\n  | DecodedEventResultWithoutArgNames;\n\nexport function decodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  try {\n    const decoded = iface.parseLog(eventProps)\n    /**\n     * Ethers under the hood converts EventFragment to object-like form without format function, so we rehydrate it here.\n     */\n    const eventFragment = EventFragment.fromObject({\n      ...decoded.eventFragment,\n      _isFragment: false // Otherwise this function noops\n    })\n    const hasArgumentNames = doesContainNamedKeys(decoded.args)\n    const decodedEventResult = {\n      args: hasArgumentNames ? omitNonNamedKeys(decoded.args) : decoded.args,\n      eventFragment,\n      hasArgumentNames,\n      signature: decoded.signature,\n      fullSignature: eventFragment.format(FormatTypes.full)\n    }\n    return decodedEventResult as DecodedEventResult\n  } catch (e: any) {\n    switch (e.reason) {\n      case 'no matching event':\n        throw e\n      case 'data out-of-bounds':\n        // At this point we know that we have a matching topic, but the number of indexed args is incorrect\n        return tryToDecodeEvent(iface, eventProps)\n      default:\n        throw e\n    }\n  }\n}\n\ntype ChangedParamType = Omit;\n\n/**\n * We assume that we don't have partial indexing information.\n * This may not be true, but it's an edge case and it's PITA to handle.\n */\nexport function tryToDecodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  const indexedArgsCount = eventProps.topics.length - 1\n  const topichash = eventProps.topics[0]\n\n  for (const name in iface.events) {\n    if (topichash === iface.getEventTopic(name)) {\n      const event = iface.getEvent(name)\n      const inputsCombinations = combinationsMap(\n        event.inputs,\n        indexedArgsCount,\n        (input: ParamType): ChangedParamType => ({\n          arrayChildren: input.arrayChildren,\n          components: input.components,\n          name: input.name,\n          type: input.type,\n          arrayLength: input.arrayLength,\n          baseType: input.baseType,\n          indexed: true\n        })\n      )\n\n      let error: unknown\n      for (const inputs of inputsCombinations) {\n        const newEvent = EventFragment.fromObject({\n          inputs,\n          anonymous: event.anonymous,\n          type: event.type,\n          name: event.name\n        })\n\n        iface.events[name] = newEvent\n\n        try {\n          const args = iface.decodeEventLog(\n            newEvent,\n            eventProps.data,\n            eventProps.topics\n          )\n\n          return {\n            args,\n            hasArgumentNames: false,\n            eventFragment: newEvent,\n            signature: newEvent.format(FormatTypes.sighash),\n            fullSignature: newEvent.format(FormatTypes.full)\n          }\n        } catch (err) {\n          error = err\n          // We expect this to fail for some combinations. It's only a problem if it fails for all combinations.\n        }\n      }\n\n      if (error) {\n        throw error\n      }\n    }\n  }\n\n  return logger.throwArgumentError('no matching event', 'topichash', topichash)\n}\n\n// @internal\nexport function omitNonNamedKeys (\n  object: T\n): Record | T {\n  const obj: Record = {}\n  for (const [key, val] of Object.entries(object)) {\n    if (isNaN(parseInt(key))) {\n      obj[key] = val\n    }\n  }\n  return obj\n}\n\n// @internal\nexport function doesContainNamedKeys (object: T): boolean {\n  return Object.keys(object).some((key) => isNaN(parseInt(key)))\n}\n\nfunction combinationsMap (\n  inputs: ParamType[],\n  indexedArgsCount: number,\n  change: (param: ParamType) => ChangedParamType\n): ChangedParamType[][] {\n  const combinations = generateCombinations(inputs.length, indexedArgsCount)\n  return combinations.map((combination) =>\n    inputs.map((input, idx) =>\n      combination.includes(idx) ? change(input) : input\n    )\n  )\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AccountsController.html":{"url":"controllers/AccountsController.html","title":"controller - AccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/accounts.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/accounts.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class AccountsController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountsModule.html":{"url":"modules/AccountsModule.html","title":"module - AccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_imports\n\n\n\n\nAppStoreModule\n\nAppStoreModule\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAppStoreModule->AccountsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAccountsModule -->\n\nAuthModule->AccountsModule\n\n\n\n\n\nOperatorsModule\n\nOperatorsModule\n\nAccountsModule -->\n\nOperatorsModule->AccountsModule\n\n\n\n\n\nPaymasterModule\n\nPaymasterModule\n\nAccountsModule -->\n\nPaymasterModule->AccountsModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAccountsModule -->\n\nProjectsModule->AccountsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAccountsModule -->\n\nUsersModule->AccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AccountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppStoreModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            OperatorsModule\n                        \n                        \n                            PaymasterModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AuthModule } from '@app/accounts-service/auth/auth.module'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { ProjectsModule } from '@app/accounts-service/projects/projects.module'\nimport { PaymasterModule } from '@app/accounts-service/paymaster/paymaster.module'\nimport { AccountsController } from '@app/accounts-service/accounts.controller'\nimport { ConfigModule } from '@nestjs/config'\nimport { AppStoreModule } from '@app/accounts-service/app-store/app-store.module'\nimport { OperatorsModule } from '@app/accounts-service/operators/operators.module'\n\n@Module({\n  imports: [\n    AuthModule,\n    UsersModule,\n    ProjectsModule,\n    ConfigModule.forRoot({ isGlobal: true }),\n    AppStoreModule,\n    PaymasterModule,\n    OperatorsModule\n  ],\n  controllers: [AccountsController],\n  providers: []\n})\nexport class AccountsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActivatedApp.html":{"url":"interfaces/ActivatedApp.html","title":"interface - ActivatedApp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ActivatedApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/interfaces/application.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AvailableApp\n                            Application\n            \n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Application extends Document {\n  readonly ownerId: string;\n  readonly appName: string;\n  readonly isActivated: boolean;\n}\n\nexport interface AvailableApp {\n    readonly appName: string;\n    readonly hasApi: boolean;\n}\n\nexport interface ActivatedApp extends AvailableApp, Application {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/exceptions/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/exceptions/all-exceptions.filter.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/exceptions/all-exceptions.filter.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost, Catch, ExceptionFilter, HttpException,\n  HttpStatus,\n  Logger\n} from '@nestjs/common'\nimport { HttpAdapterHost } from '@nestjs/core'\nimport { RpcException } from '@nestjs/microservices'\nimport { ServerResponse } from 'http'\nimport { MongoServerError } from 'mongodb'\nimport { throwError } from 'rxjs'\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  constructor (\n    private readonly httpAdapterHost: HttpAdapterHost,\n    private readonly logger: Logger\n  ) {}\n\n  catch (exception: any, host: ArgumentsHost): any {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost\n\n    const ctx = host.switchToHttp()\n    const response : ServerResponse = ctx.getResponse()\n\n    let httpStatus: HttpStatus\n    let errorMessage: string | object\n\n    if (exception instanceof HttpException) {\n      httpStatus = exception.getStatus() || HttpStatus.INTERNAL_SERVER_ERROR\n      errorMessage = exception.getResponse()\n    } else if (exception instanceof MongoServerError) {\n      if (exception.code === 11000) {\n        httpStatus = HttpStatus.BAD_REQUEST\n        errorMessage = `${Object.keys(exception?.keyValue)} must be unique`\n      }\n    } else if (exception instanceof RpcException) {\n      httpStatus = HttpStatus.INTERNAL_SERVER_ERROR\n      errorMessage = exception.message\n    } else {\n      httpStatus = HttpStatus.INTERNAL_SERVER_ERROR\n      errorMessage = 'Critical Internal Server Error Occurred'\n    }\n\n    this.logger.error(exception)\n\n    const responseBody = {\n      statusCode: httpStatus,\n      errorMessage,\n      path: httpAdapter.getRequestUrl(ctx.getRequest())\n    }\n\n    if (host.getType() === 'rpc') {\n      return throwError(() => ({ message: errorMessage, status: httpStatus }))\n    }\n\n    response.statusCode = httpStatus\n\n    httpAdapter.reply(response, responseBody, httpStatus)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnalyticsService.html":{"url":"injectables/AnalyticsService.html","title":"injectable - AnalyticsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnalyticsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/analytics.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                trackEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/analytics.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        trackEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    trackEvent(eventInput: string | Types.BaseEvent, eventProperties?: Record, eventOptions?: Types.EventOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/analytics.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventInput\n                                            \n                                                        string | Types.BaseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                eventProperties\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                eventOptions\n                                            \n                                                        Types.EventOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AnalyticsService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/services/analytics.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { init, track, Types } from '@amplitude/analytics-node'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class AnalyticsService {\n  private readonly logger = new Logger(AnalyticsService.name)\n\n  constructor (\n    private configService: ConfigService\n  ) {\n    init(this.configService.getOrThrow('amplitudeApiKey'))\n  }\n\n  async trackEvent (eventInput: string | Types.BaseEvent, eventProperties?: Record, eventOptions?: Types.EventOptions) {\n    try {\n      track(eventInput, eventProperties, eventOptions)\n    } catch (error) {\n      this.logger.error(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiKey.html":{"url":"interfaces/ApiKey.html","title":"interface - ApiKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/api-keys/interfaces/api-keys.interface .ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            encryptedLegacyJwt\n                                        \n                                \n                                \n                                        \n                                            legacyBackendAccount\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            publicKey\n                                        \n                                \n                                \n                                        \n                                            sandboxKey\n                                        \n                                \n                                \n                                        \n                                            secretHash\n                                        \n                                \n                                \n                                        \n                                            secretLastFourChars\n                                        \n                                \n                                \n                                        \n                                            secretPrefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encryptedLegacyJwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encryptedLegacyJwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legacyBackendAccount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legacyBackendAccount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sandboxKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sandboxKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretLastFourChars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretLastFourChars:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretPrefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface ApiKey extends Document {\n  readonly projectId: string;\n  readonly publicKey: string;\n  readonly sandboxKey: string;\n  readonly secretHash: string;\n  readonly secretPrefix: string;\n  readonly secretLastFourChars: string;\n  readonly encryptedLegacyJwt: string;\n  readonly legacyBackendAccount: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiKey-1.html":{"url":"interfaces/ApiKey-1.html","title":"interface - ApiKey-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/api-keys/interfaces/api-keys.interface .ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appName\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            publicKey\n                                        \n                                \n                                \n                                        \n                                            secretHash\n                                        \n                                \n                                \n                                        \n                                            secretLastFourChars\n                                        \n                                \n                                \n                                        \n                                            secretPrefix\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretLastFourChars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretLastFourChars:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretPrefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface ApiKey extends Document {\n  readonly ownerId: string;\n  readonly appName: string;\n  readonly publicKey: string;\n  readonly secretHash: string;\n  readonly secretPrefix: string;\n  readonly secretLastFourChars: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiKeyModule.html":{"url":"modules/ApiKeyModule.html","title":"module - ApiKeyModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiKeyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiKeyModule\n\n\n\ncluster_ApiKeyModule_imports\n\n\n\ncluster_ApiKeyModule_exports\n\n\n\ncluster_ApiKeyModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nApiKeyModule\n\nApiKeyModule\n\nApiKeyModule -->\n\nDatabaseModule->ApiKeyModule\n\n\n\n\n\nPaymasterModule\n\nPaymasterModule\n\nApiKeyModule -->\n\nPaymasterModule->ApiKeyModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nApiKeyModule -->\n\nProjectsModule->ApiKeyModule\n\n\n\n\n\nStudioLegacyJwtModule\n\nStudioLegacyJwtModule\n\nApiKeyModule -->\n\nStudioLegacyJwtModule->ApiKeyModule\n\n\n\n\n\nApiKeysService \n\nApiKeysService \n\nApiKeysService  -->\n\nApiKeyModule->ApiKeysService \n\n\n\n\n\nApiKeysService\n\nApiKeysService\n\nApiKeyModule -->\n\nApiKeysService->ApiKeyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/api-keys/api-keys.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiKeysService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiKeysController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            PaymasterModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            StudioLegacyJwtModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiKeysService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { DatabaseModule } from '@app/common'\nimport { ApiKeysController } from '@app/api-service/api-keys/api-keys.controller'\nimport { ApiKeysService } from '@app/api-service/api-keys/api-keys.service'\nimport { apiKeysProviders } from '@app/api-service/api-keys/api-keys.providers'\nimport { StudioLegacyJwtModule } from '@app/api-service/studio-legacy-jwt/studio-legacy-jwt.module'\nimport { PaymasterModule } from 'apps/charge-accounts-service/src/paymaster/paymaster.module'\nimport { ProjectsModule } from 'apps/charge-accounts-service/src/projects/projects.module'\n\n@Module({\n  imports: [DatabaseModule, StudioLegacyJwtModule, PaymasterModule, ProjectsModule],\n  controllers: [ApiKeysController],\n  providers: [ApiKeysService, ...apiKeysProviders],\n  exports: [ApiKeysService]\n})\nexport class ApiKeyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiKeysController.html":{"url":"controllers/ApiKeysController.html","title":"controller - ApiKeysController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiKeysController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/api-keys/api-keys.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                checkIfSecretExists\n                            \n                            \n                                    \n                                createPublic\n                            \n                            \n                                    \n                                createSandbox\n                            \n                            \n                                    \n                                createSecret\n                            \n                            \n                                    \n                                getProjectIdByPublicKey\n                            \n                            \n                                    \n                                getPublic\n                            \n                            \n                                    \n                                getSandbox\n                            \n                            \n                                    \n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        checkIfSecretExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfSecretExists(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_api_keys_info')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        Gets the api_key's for the given projectId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                an object consisting unsensitive fields of the api_keys of the project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPublic(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_public')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Creates the public API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the public API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createSandbox\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSandbox(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_sandbox_key')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        Creates the sandBox API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the sandBox API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(createSecretDto: CreateSecretDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_secret')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:16\n                        \n                    \n\n\n            \n                \n                        Creates an API key secret for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSecretDto\n                                            \n                                                            CreateSecretDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the generated API key secret or error if secret already exists\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProjectIdByPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectIdByPublicKey(apiKey: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_project_id_by_public_key')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:36\n                        \n                    \n\n\n            \n                \n                        Gets the project id for the given public api key\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                an object consisting unsensitive fields of the api_keys of the project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublic(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_public')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the public API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the public API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getSandbox\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSandbox(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_sandbox_key')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('update_secret')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Revokes the old API key secret and generates a new one for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the new API key secret\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ApiKeysService } from 'apps/charge-api-service/src/api-keys/api-keys.service'\nimport { CreateSecretDto } from '@app/api-service/api-keys/dto/secret-key.dto'\n\n@Controller()\nexport class ApiKeysController {\n  constructor (private readonly apiKeysService: ApiKeysService) { }\n\n  /**\n   * Creates an API key secret for the given project\n   * @param projectId\n   * @returns the generated API key secret or error if secret already exists\n   */\n  @MessagePattern('create_secret')\n  createSecret (createSecretDto: CreateSecretDto) {\n    return this.apiKeysService.createSecretKey(createSecretDto.projectId, createSecretDto.createLegacyAccount)\n  }\n\n  /**\n   * Gets the api_key's for the given projectId\n   * @param projectId\n   * @returns an object consisting unsensitive fields of the api_keys of the project\n   */\n  @MessagePattern('get_api_keys_info')\n  checkIfSecretExists (projectId: string) {\n    return this.apiKeysService.getApiKeysInfo(projectId)\n  }\n\n  /**\n   * Gets the project id for the given public api key\n   * @param publicApiKey\n   * @returns an object consisting unsensitive fields of the api_keys of the project\n   */\n  @MessagePattern('get_project_id_by_public_key')\n  getProjectIdByPublicKey (apiKey: string) {\n    return this.apiKeysService.getProjectIdByPublicKey(apiKey)\n  }\n\n  /**\n   * Revokes the old API key secret and generates a new one for the given project\n   * @param projectId\n   * @returns the new API key secret\n   */\n  @MessagePattern('update_secret')\n  updateSecret (projectId: string) {\n    return this.apiKeysService.updateSecretKey(projectId)\n  }\n\n  /**\n   * Creates the public API key associated with the project\n   * @param projectId\n   * @returns the public API key associated with the given project\n   */\n  @MessagePattern('create_public')\n  createPublic (projectId: string) {\n    return this.apiKeysService.createPublicKey(projectId)\n  }\n\n  /**\n   * Gets the public API key associated with the project\n   * @param projectId\n   * @returns the public API key associated with the given project\n   */\n  @MessagePattern('get_public')\n  getPublic (projectId: string) {\n    return this.apiKeysService.getPublicKey(projectId)\n  }\n\n  /**\n  * Creates the sandBox API key associated with the project\n  * @param projectId\n  * @returns the sandBox API key associated with the given project\n  */\n  @MessagePattern('create_sandbox_key')\n  createSandbox (projectId: string) {\n    return this.apiKeysService.createSandboxKey(projectId)\n  }\n\n  @MessagePattern('get_sandbox_key')\n  getSandbox (projectId: string) {\n    return this.apiKeysService.getSandboxKey(projectId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ApiKeysController-1.html":{"url":"controllers/ApiKeysController-1.html","title":"controller - ApiKeysController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ApiKeysController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/api-keys/api-keys.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api-keys\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                checkIfSecretExists\n                            \n                            \n                                    \n                                createPublic\n                            \n                            \n                                    \n                                createSecret\n                            \n                            \n                                    \n                                getPublic\n                            \n                            \n                                    \n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        checkIfSecretExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfSecretExists(apiKeysDto: ApiKeysDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_api_keys_info')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        Gets the api_key's for the given projectId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                an object consisting unsensitive fields of the api_keys of the project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPublic(apiKeysDto: ApiKeysDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_public')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Creates the public API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the public API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(apiKeysDto: ApiKeysDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_secret')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.controller.ts:16\n                        \n                    \n\n\n            \n                \n                        Creates an API key secret for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the generated API key secret or error if secret already exists\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublic(apiKeysDto: ApiKeysDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_public')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the public API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the public API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(apiKeysDto: ApiKeysDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('update_secret')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.controller.ts:36\n                        \n                    \n\n\n            \n                \n                        Revokes the old API key secret and generates a new one for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the new API key secret\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiKeysService } from '@app/apps-service/api-keys/api-keys.service'\nimport { Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ApiKeysDto } from '@app/apps-service/api-keys/dto/api-keys.dto'\n\n@Controller('api-keys')\nexport class ApiKeysController {\n  constructor (private readonly apiKeysService: ApiKeysService) { }\n\n  /**\n   * Creates an API key secret for the given project\n   * @param apiKeysDto\n   * @returns the generated API key secret or error if secret already exists\n   */\n  @MessagePattern('create_secret')\n  createSecret (apiKeysDto: ApiKeysDto) {\n    return this.apiKeysService.createSecretKey(apiKeysDto)\n  }\n\n  /**\n   * Gets the api_key's for the given projectId\n   * @param apiKeysDto\n   * @returns an object consisting unsensitive fields of the api_keys of the project\n   */\n  @MessagePattern('get_api_keys_info')\n  checkIfSecretExists (apiKeysDto: ApiKeysDto) {\n    return this.apiKeysService.getApiKeysInfo(apiKeysDto)\n  }\n\n  /**\n   * Revokes the old API key secret and generates a new one for the given project\n   * @param apiKeysDto\n   * @returns the new API key secret\n   */\n  @MessagePattern('update_secret')\n  updateSecret (apiKeysDto: ApiKeysDto) {\n    return this.apiKeysService.updateSecretKey(apiKeysDto)\n  }\n\n  /**\n   * Creates the public API key associated with the project\n   * @param apiKeysDto\n   * @returns the public API key associated with the given project\n   */\n  @MessagePattern('create_public')\n  createPublic (apiKeysDto: ApiKeysDto) {\n    return this.apiKeysService.createPublicKey(apiKeysDto)\n  }\n\n  /**\n   * Gets the public API key associated with the project\n   * @param apiKeysDto\n   * @returns the public API key associated with the given project\n   */\n  @MessagePattern('get_public')\n  getPublic (apiKeysDto: ApiKeysDto) {\n    return this.apiKeysService.getPublicKey(apiKeysDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiKeysDto.html":{"url":"classes/ApiKeysDto.html","title":"class - ApiKeysDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiKeysDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/api-keys/dto/api-keys.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appName\n                            \n                            \n                                    \n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/api-keys/dto/api-keys.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/api-keys/dto/api-keys.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator'\n\nexport class ApiKeysDto {\n  @IsString()\n    ownerId: string\n\n  @IsString()\n    appName: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiKeysModule.html":{"url":"modules/ApiKeysModule.html","title":"module - ApiKeysModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiKeysModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ApiKeysModule\n\n\n\ncluster_ApiKeysModule_imports\n\n\n\ncluster_ApiKeysModule_exports\n\n\n\ncluster_ApiKeysModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nApiKeysModule\n\nApiKeysModule\n\nApiKeysModule -->\n\nDatabaseModule->ApiKeysModule\n\n\n\n\n\nApiKeysService \n\nApiKeysService \n\nApiKeysService  -->\n\nApiKeysModule->ApiKeysService \n\n\n\n\n\nApiKeysService\n\nApiKeysService\n\nApiKeysModule -->\n\nApiKeysService->ApiKeysModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-apps-service/src/api-keys/api-keys.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiKeysService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ApiKeysController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiKeysService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { apiKeysProviders } from '@app/apps-service/api-keys/api-keys.providers'\nimport { DatabaseModule } from '@app/common'\nimport { Module } from '@nestjs/common'\nimport { ApiKeysController } from '@app/apps-service/api-keys/api-keys.controller'\nimport { ApiKeysService } from '@app/apps-service/api-keys/api-keys.service'\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [ApiKeysController],\n  providers: [...apiKeysProviders, ApiKeysService],\n  exports: [ApiKeysService]\n})\nexport class ApiKeysModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeysService.html":{"url":"injectables/ApiKeysService.html","title":"injectable - ApiKeysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/api-keys/api-keys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPublicKey\n                            \n                            \n                                    Async\n                                createSandboxKey\n                            \n                            \n                                    Async\n                                createSecretKey\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                generateRandomToken\n                            \n                            \n                                    Private\n                                    Async\n                                generateSecretKey\n                            \n                            \n                                    Async\n                                getApiKeysInfo\n                            \n                            \n                                    Async\n                                getProjectIdByPublicKey\n                            \n                            \n                                    Async\n                                getProjectJwt\n                            \n                            \n                                    Async\n                                getPublicKey\n                            \n                            \n                                    Async\n                                getSandboxKey\n                            \n                            \n                                    Async\n                                updateSecretKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeyModel: Model, studioLegacyJwtService: StudioLegacyJwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeyModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        studioLegacyJwtService\n                                                  \n                                                        \n                                                                        StudioLegacyJwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPublicKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSandboxKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecretKey(projectId: string, createLegacyAccount: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createLegacyAccount\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:194\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateSecretKey()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:199\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiKeysInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiKeysInfo(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProjectIdByPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectIdByPublicKey(publicKey: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                publicKey\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProjectJwt\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectJwt(query: object)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSandboxKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecretKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/api-keys.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { ApiKey } from 'apps/charge-api-service/src/api-keys/interfaces/api-keys.interface '\nimport { apiKeyModelString } from 'apps/charge-api-service/src/api-keys/api-keys.constants'\nimport * as bcrypt from 'bcryptjs'\nimport * as crypto from 'crypto'\nimport base64url from 'base64url'\nimport { RpcException } from '@nestjs/microservices'\nimport { StudioLegacyJwtService } from '@app/api-service/studio-legacy-jwt/studio-legacy-jwt.service'\nimport { isEmpty } from 'lodash'\n\n@Injectable()\nexport class ApiKeysService {\n  constructor (\n    @Inject(apiKeyModelString)\n    private apiKeyModel: Model,\n    private studioLegacyJwtService: StudioLegacyJwtService\n  ) { }\n\n  async createPublicKey (projectId: string) {\n    const projectKeys = await this.apiKeyModel.findOne({\n      projectId\n    })\n\n    if (projectKeys) {\n      throw new RpcException('Public Keys already exist')\n    }\n\n    const publicKey = `pk_${await this.generateRandomToken()}`\n\n    const result = await this.apiKeyModel.create({\n      projectId,\n      publicKey\n    })\n\n    if (result) {\n      return {\n        publicKey\n      }\n    }\n\n    throw new RpcException('Internal Server Error')\n  }\n\n  async getPublicKey (projectId: string) {\n    const apiKeys = await this.findOne({ projectId })\n\n    if (apiKeys && apiKeys?.publicKey) {\n      return { publicKey: apiKeys?.publicKey }\n    }\n\n    throw new RpcException('Not Found')\n  }\n\n  async findOne (query: Record) {\n    return this.apiKeyModel.findOne(query)\n  }\n\n  async createSecretKey (projectId: string, createLegacyAccount: boolean) {\n    const apiKeys = await this.apiKeyModel.findOne({ projectId })\n\n    if (apiKeys && apiKeys?.secretHash) {\n      throw new RpcException('Secret Key already exists')\n    }\n\n    const { secretKey, secretPrefix, secretLastFourChars } = await this.generateSecretKey()\n    const saltRounds = await bcrypt.genSalt()\n    const secretHash = await bcrypt.hash(secretKey, saltRounds)\n\n    if (createLegacyAccount) {\n      const { encryptedLegacyJwt, legacyBackendAccount } = await this.studioLegacyJwtService.createLegacyJwt(`chargeApp_${projectId}`)\n      const result = await this.apiKeyModel.findOneAndUpdate(\n        { projectId },\n        {\n          secretHash,\n          secretPrefix,\n          secretLastFourChars,\n          encryptedLegacyJwt,\n          legacyBackendAccount\n        },\n        { upsert: true, new: true }\n      )\n      if (result) {\n        return {\n          secretKey\n        }\n      }\n    } else {\n      const result = await this.apiKeyModel.findOneAndUpdate(\n        { projectId },\n        {\n          secretHash,\n          secretPrefix,\n          secretLastFourChars\n        },\n        { upsert: true, new: true }\n      )\n      if (result) {\n        return {\n          secretKey\n        }\n      }\n    }\n    throw new RpcException('Internal Server Error')\n  }\n\n  async createSandboxKey (projectId: string) {\n    const projectKeys = await this.apiKeyModel.findOne({\n      projectId\n    })\n\n    if (projectKeys && projectKeys?.sandboxKey) {\n      throw new RpcException('sandboxKey Key already exist')\n    }\n    const sandboxKey = `pk_test_${await this.generateRandomToken()}`\n\n    const result = await this.apiKeyModel.findOneAndUpdate(\n      { projectId },\n      {\n        projectId,\n        sandboxKey\n      }\n    )\n\n    if (result) {\n      return {\n        sandboxKey\n      }\n    }\n\n    throw new RpcException('Internal Server Error')\n  }\n\n  async getSandboxKey (projectId: string) {\n    const apiKeys = await this.findOne({ projectId })\n\n    if (apiKeys && apiKeys?.sandboxKey) {\n      return { sandboxKey: apiKeys?.sandboxKey }\n    }\n\n    throw new RpcException('Not Found')\n  }\n\n  async getProjectJwt (query: object) {\n    const projectApiKeys = await this.apiKeyModel.findOne(query)\n    const projectEncryptedJwt = projectApiKeys?.encryptedLegacyJwt\n    return this.studioLegacyJwtService.decryptEncryptedJWT(projectEncryptedJwt)\n  }\n\n  async updateSecretKey (projectId: string) {\n    const { secretKey, secretPrefix, secretLastFourChars } = await this.generateSecretKey()\n    const saltRounds = await bcrypt.genSalt()\n    const secretHash = await bcrypt.hash(secretKey, saltRounds)\n\n    const result = await this.apiKeyModel.findOneAndUpdate(\n      {\n        projectId\n      },\n      {\n        secretHash,\n        secretPrefix,\n        secretLastFourChars\n      },\n      { upsert: true, new: true }\n    )\n\n    if (result) {\n      return {\n        secretKey\n      }\n    }\n  }\n\n  async getProjectIdByPublicKey (publicKey: any) {\n    const projectApiKeys: ApiKey | null = await this.apiKeyModel.findOne({ publicKey })\n    const projectId: string = projectApiKeys?.projectId?.toString()\n\n    if (isEmpty(projectId)) {\n      return new Error('Project not found')\n    }\n\n    return projectId\n  }\n\n  async getApiKeysInfo (projectId: string) {\n    const projectApiKeys = await this.apiKeyModel.findOne({\n      projectId\n    })\n      .select('-secretHash -encryptedLegacyJwt')\n\n    return projectApiKeys || {}\n  }\n\n  private async generateRandomToken (): Promise {\n    const randomString = base64url(crypto.randomBytes(18))\n    return randomString\n  }\n\n  private async generateSecretKey () {\n    const secretPrefix = 'sk_'\n    const secretKey = `${secretPrefix}${await this.generateRandomToken()}`\n    const secretLastFourChars = secretKey.slice(secretKey.length - 4)\n    return { secretKey, secretPrefix, secretLastFourChars }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeysService-1.html":{"url":"injectables/ApiKeysService-1.html","title":"injectable - ApiKeysService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/api-keys/api-keys.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPublicKey\n                            \n                            \n                                    Async\n                                createSecretKey\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Async\n                                generateRandomToken\n                            \n                            \n                                    Private\n                                    Async\n                                generateSecretKey\n                            \n                            \n                                    Async\n                                getApiKeysInfo\n                            \n                            \n                                    Async\n                                getOwnerIdByPublicKey\n                            \n                            \n                                    Async\n                                getPublicKey\n                            \n                            \n                                    Async\n                                updateSecretKey\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeyModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeyModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPublicKey(apiKeysDto: ApiKeysDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecretKey(apiKeysDto: ApiKeysDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(query: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateRandomToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateRandomToken()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateSecretKey()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiKeysInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiKeysInfo(apiKeysDto: ApiKeysDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOwnerIdByPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOwnerIdByPublicKey(publicKey: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                publicKey\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPublicKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicKey(apiKeysDto: ApiKeysDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSecretKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecretKey(apiKeysDto: ApiKeysDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/api-keys.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKeysDto\n                                            \n                                                            ApiKeysDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ApiKey } from '@app/apps-service/api-keys/interfaces/api-keys.interface '\nimport { apiKeyModelString } from '@app/apps-service/api-keys/api-keys.constants'\nimport { Inject, Injectable } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { RpcException } from '@nestjs/microservices'\nimport { isEmpty } from 'lodash'\nimport * as bcrypt from 'bcryptjs'\nimport * as crypto from 'crypto'\nimport base64url from 'base64url'\nimport { ApiKeysDto } from '@app/apps-service/api-keys/dto/api-keys.dto'\n\n@Injectable()\nexport class ApiKeysService {\n  constructor (\n        @Inject(apiKeyModelString)\n        private apiKeyModel: Model\n  ) { }\n\n  async createPublicKey (apiKeysDto: ApiKeysDto) {\n    const [ownerId, appName] = [apiKeysDto.ownerId, apiKeysDto.appName]\n\n    const appKeys = await this.apiKeyModel.findOne({\n      ownerId, appName\n    })\n\n    if (appKeys) {\n      throw new RpcException('Public Keys already exist')\n    }\n\n    const publicKey = `pk_${await this.generateRandomToken()}`\n\n    const result = await this.apiKeyModel.create({\n      ownerId,\n      appName,\n      publicKey\n    })\n\n    if (result) {\n      return {\n        publicKey\n      }\n    }\n\n    throw new RpcException('Internal Server Error')\n  }\n\n  async getPublicKey (apiKeysDto: ApiKeysDto) {\n    const [ownerId, appName] = [apiKeysDto.ownerId, apiKeysDto.appName]\n\n    const apiKeys = await this.findOne({ ownerId, appName })\n\n    if (apiKeys && apiKeys?.publicKey) {\n      return { publicKey: apiKeys?.publicKey }\n    }\n\n    throw new RpcException('Not Found')\n  }\n\n  async findOne (query: Record) {\n    return this.apiKeyModel.findOne(query)\n  }\n\n  async createSecretKey (apiKeysDto: ApiKeysDto) {\n    const [ownerId, appName] = [apiKeysDto.ownerId, apiKeysDto.appName]\n\n    const apiKeys = await this.apiKeyModel.findOne({ ownerId, appName })\n\n    if (apiKeys && apiKeys?.secretHash) {\n      throw new RpcException('Secret Key already exists')\n    }\n\n    const { secretKey, secretPrefix, secretLastFourChars } = await this.generateSecretKey()\n    const saltRounds = await bcrypt.genSalt()\n    const secretHash = await bcrypt.hash(secretKey, saltRounds)\n\n    const result = await this.apiKeyModel.findOneAndUpdate(\n      { ownerId, appName },\n      {\n        secretHash,\n        secretPrefix,\n        secretLastFourChars\n      },\n      { upsert: true, new: true }\n    )\n\n    if (result) {\n      return {\n        secretKey\n      }\n    }\n\n    throw new RpcException('Internal Server Error')\n  }\n\n  async updateSecretKey (apiKeysDto: ApiKeysDto) {\n    const [ownerId, appName] = [apiKeysDto.ownerId, apiKeysDto.appName]\n\n    const { secretKey, secretPrefix, secretLastFourChars } = await this.generateSecretKey()\n    const saltRounds = await bcrypt.genSalt()\n    const secretHash = await bcrypt.hash(secretKey, saltRounds)\n\n    const result = await this.apiKeyModel.findOneAndUpdate(\n      {\n        ownerId, appName\n      },\n      {\n        secretHash,\n        secretPrefix,\n        secretLastFourChars\n      },\n      { upsert: true, new: true }\n    )\n\n    if (result) {\n      return {\n        secretKey\n      }\n    }\n  }\n\n  async getOwnerIdByPublicKey (publicKey: any) {\n    const projectApiKeys: ApiKey | null = await this.apiKeyModel.findOne({ publicKey })\n    const ownerId: string = projectApiKeys?.ownerId?.toString()\n\n    if (isEmpty(ownerId)) {\n      return new Error('Project not found')\n    }\n\n    return ownerId\n  }\n\n  async getApiKeysInfo (apiKeysDto: ApiKeysDto) {\n    const [ownerId, appName] = [apiKeysDto.ownerId, apiKeysDto.appName]\n\n    const projectApiKeys = await this.apiKeyModel.findOne({\n      ownerId, appName\n    })\n      .select('-secretHash -encryptedLegacyJwt')\n\n    return projectApiKeys || {}\n  }\n\n  private async generateRandomToken (): Promise {\n    const randomString = base64url(crypto.randomBytes(18))\n    return randomString\n  }\n\n  private async generateSecretKey () {\n    const secretPrefix = 'sk_'\n    const secretKey = `${secretPrefix}${await this.generateRandomToken()}`\n    const secretLastFourChars = secretKey.slice(secretKey.length - 4)\n    return { secretKey, secretPrefix, secretLastFourChars }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppStoreController.html":{"url":"controllers/AppStoreController.html","title":"controller - AppStoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppStoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/app-store.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                app-store\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                activateApp\n                            \n                            \n                                    \n                                    \n                                createPaymentLink\n                            \n                            \n                                    \n                                    \n                                createSecret\n                            \n                            \n                                    \n                                    \n                                getActivatedApps\n                            \n                            \n                                    \n                                    \n                                getAppInfo\n                            \n                            \n                                    \n                                    \n                                getPaymentLinks\n                            \n                            \n                                    \n                                    \n                                getPaymentsAllowedTokens\n                            \n                            \n                                    \n                                    \n                                getWalletBalance\n                            \n                            \n                                    \n                                    \n                                transferTokensFromPaymentsAccount\n                            \n                            \n                                    \n                                    \n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activateApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateApp(appName: string, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('activate/:appName')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:18\n                        \n                    \n\n\n            \n                \n                        Activate an app by appName, if app has API then it also creates a public key for access\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(createPaymentLinkDto: CreatePaymentLinkDto, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('payment_link')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:69\n                        \n                    \n\n\n            \n                \n                        Creates a payment link for the account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(appName: string, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('secret/:appName')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:45\n                        \n                    \n\n\n            \n                \n                        Creates an API secret key for appName of the account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getActivatedApps\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActivatedApps(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:27\n                        \n                    \n\n\n            \n                \n                        Returns list of apps that are activated in the authenticated account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAppInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAppInfo(appName: string, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('api-keys/:appName')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:36\n                        \n                    \n\n\n            \n                \n                        Returns metadata about the activated app in the account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('payment_links')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:78\n                        \n                    \n\n\n            \n                \n                        Gets all payment links for the account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPaymentsAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentsAllowedTokens()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('payments/allowed_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletBalance(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('payments/account/balance')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        transferTokensFromPaymentsAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferTokensFromPaymentsAccount(auth0Id: string, transferTokensDto: TransferTokensDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('payments/account/transfer_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transferTokensDto\n                                            \n                                                            TransferTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(appName: string, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put('secret/:appName')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.controller.ts:54\n                        \n                    \n\n\n            \n                \n                        Rolls the API secret key for appName of the account\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Put, UseGuards } from '@nestjs/common'\nimport { AppStoreService } from '@app/accounts-service/app-store/app-store.service'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\nimport { User } from '@app/accounts-service/users/user.decorator'\nimport { CreatePaymentLinkDto } from '@app/apps-service/payments/dto/create-payment-link.dto'\nimport { TransferTokensDto } from '@app/apps-service/payments/dto/transfer-tokens.dto'\n\n@Controller('app-store')\nexport class AppStoreController {\n  constructor (private readonly appStoreService: AppStoreService) { }\n\n  /***\n   * Activate an app by appName, if app has API then it also creates a public key for access\n   * @param appName\n   */\n  @UseGuards(JwtAuthGuard)\n  @Post('activate/:appName')\n  activateApp (@Param('appName') appName: string, @User('sub') auth0Id: string) {\n    return this.appStoreService.activateApp(appName, auth0Id)\n  }\n\n  /***\n   * Returns list of apps that are activated in the authenticated account\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  getActivatedApps (@User('sub') auth0Id: string) {\n    return this.appStoreService.getActivatedApps(auth0Id)\n  }\n\n  /***\n   * Returns metadata about the activated app in the account\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('api-keys/:appName')\n  getAppInfo (@Param('appName') appName: string, @User('sub') auth0Id: string) {\n    return this.appStoreService.getApiKeysInfo(appName, auth0Id)\n  }\n\n  /***\n    * Creates an API secret key for `appName` of the account\n    */\n  @UseGuards(JwtAuthGuard)\n  @Post('secret/:appName')\n  createSecret (@Param('appName') appName: string, @User('sub') auth0Id: string) {\n    return this.appStoreService.createSecret(appName, auth0Id)\n  }\n\n  /***\n    * Rolls the API secret key for `appName` of the account\n    */\n  @UseGuards(JwtAuthGuard)\n  @Put('secret/:appName')\n  updateSecret (@Param('appName') appName: string, @User('sub') auth0Id: string) {\n    return this.appStoreService.updateSecret(appName, auth0Id)\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('payments/allowed_tokens')\n  getPaymentsAllowedTokens () {\n    return this.appStoreService.getPaymentsAllowedTokens()\n  }\n\n  /***\n    * Creates a payment link for the account\n    */\n  @UseGuards(JwtAuthGuard)\n  @Post('payment_link')\n  createPaymentLink (@Body() createPaymentLinkDto: CreatePaymentLinkDto, @User('sub') auth0Id: string) {\n    return this.appStoreService.createPaymentLink(auth0Id, createPaymentLinkDto)\n  }\n\n  /***\n    * Gets all payment links for the account\n    */\n  @UseGuards(JwtAuthGuard)\n  @Get('payment_links')\n  getPaymentLinks (@User('sub') auth0Id: string) {\n    return this.appStoreService.getPaymentLinks(auth0Id)\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('payments/account/balance')\n  getWalletBalance (@User('sub') auth0Id: string) {\n    return this.appStoreService.getWalletBalance(auth0Id)\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('payments/account/transfer_tokens')\n  transferTokensFromPaymentsAccount (@User('sub') auth0Id: string, @Body() transferTokensDto: TransferTokensDto) {\n    return this.appStoreService.transferTokensFromPaymentsAccount(auth0Id, transferTokensDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppStoreModule.html":{"url":"modules/AppStoreModule.html","title":"module - AppStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    AppStoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppStoreModule\n\n\n\ncluster_AppStoreModule_providers\n\n\n\ncluster_AppStoreModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppStoreModule\n\nAppStoreModule\n\nAppStoreModule -->\n\nDatabaseModule->AppStoreModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppStoreModule -->\n\nUsersModule->AppStoreModule\n\n\n\n\n\nAppStoreService\n\nAppStoreService\n\nAppStoreModule -->\n\nAppStoreService->AppStoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/app-store.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppStoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppStoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { AppStoreController } from '@app/accounts-service/app-store/app-store.controller'\nimport { AppStoreService } from '@app/accounts-service/app-store/app-store.service'\nimport { ConfigModule } from '@nestjs/config'\nimport configuration from '@app/accounts-service/app-store/config/configuration'\nimport { appStoreProviders } from '@app/accounts-service/app-store/app-store.providers'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { DatabaseModule } from '@app/common/database/database.module'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport {\n  appStoreService\n} from '@app/common/constants/microservices.constants'\n\n@Module({\n  imports: [\n    UsersModule,\n    DatabaseModule,\n    ConfigModule.forFeature(configuration),\n    ClientsModule.register([\n      {\n        name: appStoreService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.APPS_HOST,\n          port: parseInt(process.env.APPS_TCP_PORT)\n        }\n      }\n    ])\n  ],\n  controllers: [AppStoreController],\n  providers: [AppStoreService, ...appStoreProviders]\n})\nexport class AppStoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppStoreService.html":{"url":"injectables/AppStoreService.html","title":"injectable - AppStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/app-store.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateApp\n                            \n                            \n                                    Async\n                                createPaymentLink\n                            \n                            \n                                    Async\n                                createSecret\n                            \n                            \n                                    Async\n                                getActivatedApps\n                            \n                            \n                                    Async\n                                getApiKeysInfo\n                            \n                            \n                                    Async\n                                getPaymentLinks\n                            \n                            \n                                    Async\n                                getPaymentsAllowedTokens\n                            \n                            \n                                    Async\n                                getUserId\n                            \n                            \n                                    Async\n                                getWalletBalance\n                            \n                            \n                                isAppAvailable\n                            \n                            \n                                    Async\n                                transferTokensFromPaymentsAccount\n                            \n                            \n                                    Async\n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    availableApps\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appStoreClient: ClientProxy, applicationModel: Model, usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appStoreClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        applicationModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activateApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    activateApp(appName: string, auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(auth0Id: string, createPaymentLinkDto: CreatePaymentLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(appName, auth0Id)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getActivatedApps\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActivatedApps(auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiKeysInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiKeysInfo(appName, auth0Id)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentsAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentsAllowedTokens()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserId(auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletBalance(auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppAvailable\n                        \n                    \n                \n            \n            \n                \nisAppAvailable(appName)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferTokensFromPaymentsAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferTokensFromPaymentsAccount(auth0Id: string, transferTokensDto: TransferTokensDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                transferTokensDto\n                                            \n                                                            TransferTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(appName, auth0Id)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                appName\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        availableApps\n                    \n                \n\n                \n                    \n                        getavailableApps()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-accounts-service/src/app-store/app-store.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common'\nimport { applicationModelString } from '@app/accounts-service/app-store/constants/app-store.constants'\nimport { Model } from 'mongoose'\nimport { ActivatedApp, Application, AvailableApp } from '@app/accounts-service/app-store/interfaces/application.interface'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { ConfigService } from '@nestjs/config'\nimport { merge, keyBy, values } from 'lodash'\nimport { appStoreService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { ApiKeysDto } from '@app/apps-service/api-keys/dto/api-keys.dto'\nimport { CreatePaymentLinkDto } from '@app/apps-service/payments/dto/create-payment-link.dto'\nimport { TransferTokensDto } from '@app/apps-service/payments/dto/transfer-tokens.dto'\n\n@Injectable()\nexport class AppStoreService {\n  constructor (\n        @Inject(appStoreService) private readonly appStoreClient: ClientProxy,\n        @Inject(applicationModelString)\n        private applicationModel: Model,\n        private usersService: UsersService,\n        private configService: ConfigService\n  ) { }\n\n  get availableApps () {\n    return this.configService.get('availableApps') as AvailableApp[]\n  }\n\n  isAppAvailable (appName): Boolean {\n    return this.availableApps.some(app => app.appName === appName)\n  }\n\n  async activateApp (appName: string, auth0Id: string): Promise {\n    if (!this.isAppAvailable(appName)) {\n      return new HttpException('Application not found', HttpStatus.NOT_FOUND)\n    }\n\n    const ownerId = await this.getUserId(auth0Id)\n\n    try {\n      await callMSFunction(this.appStoreClient, 'create_public', { ownerId, appName } as ApiKeysDto)\n      await callMSFunction(this.appStoreClient, 'create_payment_account', ownerId)\n    } catch (err) {\n      return err\n    }\n\n    return this.applicationModel.updateOne({ ownerId, appName }, { isActivated: true }, { upsert: true })\n  }\n\n  async getActivatedApps (auth0Id: string): Promise {\n    const ownerId = await this.getUserId(auth0Id)\n    const appDocs = await this.applicationModel.find({ ownerId, isActivated: true })\n    const apps = appDocs.map(app => app.toObject() as Application)\n    let extendedApps = values(merge(keyBy(apps, 'appName'), keyBy(this.availableApps, 'appName')))\n    extendedApps = extendedApps.filter(app => app?.isActivated === true)\n\n    return extendedApps\n  }\n\n  async getUserId (auth0Id: string) {\n    const user = await this.usersService.findOneByAuth0Id(auth0Id)\n    return user?.id\n  }\n\n  async getApiKeysInfo (appName, auth0Id) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    return callMSFunction(this.appStoreClient, 'get_api_keys_info', { ownerId, appName } as ApiKeysDto)\n  }\n\n  async createSecret (appName, auth0Id) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    return callMSFunction(this.appStoreClient, 'create_secret', { ownerId, appName } as ApiKeysDto)\n  }\n\n  async updateSecret (appName, auth0Id) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    return callMSFunction(this.appStoreClient, 'update_secret', { ownerId, appName } as ApiKeysDto)\n  }\n\n  async createPaymentLink (auth0Id: string, createPaymentLinkDto: CreatePaymentLinkDto) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    createPaymentLinkDto.ownerId = ownerId\n\n    return callMSFunction(this.appStoreClient, 'create_payment_link', createPaymentLinkDto)\n  }\n\n  async getPaymentLinks (auth0Id: string) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    return callMSFunction(this.appStoreClient, 'get_payment_links', ownerId)\n  }\n\n  async getPaymentsAllowedTokens () {\n    return callMSFunction(this.appStoreClient, 'get_allowed_tokens', '')\n  }\n\n  async getWalletBalance (auth0Id: string) {\n    const ownerId = await this.getUserId(auth0Id)\n\n    return callMSFunction(this.appStoreClient, 'get_wallet_balance', ownerId)\n  }\n\n  async transferTokensFromPaymentsAccount (auth0Id: string, transferTokensDto: TransferTokensDto) {\n    const ownerId = await this.getUserId(auth0Id)\n    transferTokensDto.ownerId = ownerId\n\n    return callMSFunction(this.appStoreClient, 'transfer_tokens', transferTokensDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Application.html":{"url":"interfaces/Application.html","title":"interface - Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Application\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/interfaces/application.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appName\n                                        \n                                \n                                \n                                        \n                                            isActivated\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActivated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Application extends Document {\n  readonly ownerId: string;\n  readonly appName: string;\n  readonly isActivated: boolean;\n}\n\nexport interface AvailableApp {\n    readonly appName: string;\n    readonly hasApi: boolean;\n}\n\nexport interface ActivatedApp extends AvailableApp, Application {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApproveToken.html":{"url":"classes/ApproveToken.html","title":"class - ApproveToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApproveToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/approve-token.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                    Async\n                                constructTokenTransferData\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                descGenerator\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(parsedUserOp, tokenTransferData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/approve-token.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenTransferData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; walletAddress: any; status: string; sent: {}; userOpHash: any; txHash: string; blockNumber: number; description: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        constructTokenTransferData\n                        \n                    \n                \n            \n            \n                \n                        \n                    constructTokenTransferData(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/approve-token.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_20_TYPE, ERC_721_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\n\nexport default class ApproveToken extends WalletAction {\n  async constructTokenTransferData ({ callData, targetAddress }) {\n    const [to, value] = callData\n    const tokenData = await this.tokenService.fetchTokenDetails(targetAddress)\n    const type = tokenData.decimals === 0 ? ERC_721_TYPE : ERC_20_TYPE\n    return {\n      type,\n      ...tokenData,\n      to,\n      value: value.toString()\n    } as ERC20Transfer\n  }\n\n  constructResponse (parsedUserOp, tokenTransferData) {\n    const { sender: walletAddress, userOpHash } = parsedUserOp\n    const { symbol, decimals, value } = tokenTransferData\n    return {\n      name: 'approveToken',\n      walletAddress,\n      status: 'pending',\n      sent: [tokenTransferData],\n      userOpHash,\n      txHash: '',\n      blockNumber: 0,\n      description: this.generateDescription({\n        action: 'Approved',\n        symbol,\n        valueInWei: value,\n        decimals\n      })\n    }\n  }\n\n  async execute (parsedUserOp) {\n    const targetFunction = parsedUserOp.targetFunctions[0]\n    const tokenTransferData = await this.constructTokenTransferData(targetFunction)\n    return this.constructResponse(parsedUserOp, tokenTransferData)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n                        Registers a new user for the authenticated user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Logs in the authenticated user's auth0Id and returns the user id in our db\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards } from '@nestjs/common'\nimport { CreateUserDto } from '@app/accounts-service/users/dto/create-user.dto'\nimport { User } from '@app/accounts-service/users/user.decorator'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\n\n@Controller({ path: 'auth', version: '1' })\nexport class AuthController {\n  constructor (\n    private readonly usersService: UsersService\n  ) {}\n\n  /**\n   * Registers a new user for the authenticated user\n   * @param createUserDto\n   */\n  @UseGuards(JwtAuthGuard)\n  @Post('/register')\n  create (@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto)\n  }\n\n  /**\n   *\n   * @param id Logs in the authenticated user's auth0Id and returns the user id in our db\n   */\n  @UseGuards(JwtAuthGuard)\n  @Post('/login')\n  async findOne (@User('sub') id: string) {\n    const user = await this.usersService.findOneByAuth0Id(id)\n    return { id: user?.id }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PassportModule } from '@nestjs/passport'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { JwtStrategy } from '@app/accounts-service/auth/jwt.strategy'\nimport { AuthController } from '@app/accounts-service/auth/auth.controller'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        const jwtSecret = configService.get('SMART_WALLETS_JWT_SECRET')\n        return {\n          secret: jwtSecret\n        }\n      }\n    })\n  ],\n  providers: [JwtStrategy],\n  exports: [PassportModule, JwtModule],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthOperatorDto.html":{"url":"classes/AuthOperatorDto.html","title":"class - AuthOperatorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthOperatorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/dto/auth-operator.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                externallyOwnedAccountAddress\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        externallyOwnedAccountAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/auth-operator.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/auth-operator.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/auth-operator.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsString } from 'class-validator'\n\nexport class AuthOperatorDto {\n  @IsEthereumAddress()\n    externallyOwnedAccountAddress: string\n\n  @IsString()\n    message: string\n\n  @IsString()\n    signature: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AvailableApp.html":{"url":"interfaces/AvailableApp.html","title":"interface - AvailableApp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AvailableApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/app-store/interfaces/application.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appName\n                                        \n                                \n                                \n                                        \n                                            hasApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasApi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Application extends Document {\n  readonly ownerId: string;\n  readonly appName: string;\n  readonly isActivated: boolean;\n}\n\nexport interface AvailableApp {\n    readonly appName: string;\n    readonly hasApi: boolean;\n}\n\nexport interface ActivatedApp extends AvailableApp, Application {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendWallet.html":{"url":"interfaces/BackendWallet.html","title":"interface - BackendWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-api/interfaces/backend-wallet.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountAddress\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                        \n                                            ownerAddress\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                                \n                                        \n                                            walletType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface BackendWallet extends Document {\n  readonly jobId: string;\n  readonly walletAddress: string;\n  readonly accountAddress: string;\n  readonly ownerAddress: string;\n  readonly walletType: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendWalletsEthereumService.html":{"url":"injectables/BackendWalletsEthereumService.html","title":"injectable - BackendWalletsEthereumService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendWalletsEthereumService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                sleep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addWebhookAddress\n                            \n                            \n                                    Async\n                                createBackendWallet\n                            \n                            \n                                    Async\n                                findWalletByAddress\n                            \n                            \n                                    Async\n                                getBackendWalletByAddress\n                            \n                            \n                                    Async\n                                httpProxyGet\n                            \n                            \n                                    Async\n                                httpProxyPatch\n                            \n                            \n                                    Async\n                                httpProxyPost\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPaymentsAllowedTokens\n                                \n                                \n                                    unmarshalBaseUrl\n                                \n                                \n                                    unmarshalAuthKey\n                                \n                                \n                                    alchemyBaseUrl\n                                \n                                \n                                    alchemyAuthKey\n                                \n                                \n                                    alchemyWebookId\n                                \n                                \n                                    getMnemonic\n                                \n                                \n                                    getSleepMS\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService, backendWalletEthereumModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendWalletEthereumModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addWebhookAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    addWebhookAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createBackendWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBackendWallet(walletType: walletTypes)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletType\n                                            \n                                                            walletTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findWalletByAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    findWalletByAddress(walletAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBackendWalletByAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBackendWalletByAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        httpProxyGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxyGet(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        httpProxyPatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxyPatch(url: string, requestBody: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        httpProxyPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxyPost(url: string, requestBody: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BackendWalletsEthereumService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sleep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:54\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getPaymentsAllowedTokens\n                    \n                \n\n                \n                    \n                        getgetPaymentsAllowedTokens()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unmarshalBaseUrl\n                    \n                \n\n                \n                    \n                        getunmarshalBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:26\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unmarshalAuthKey\n                    \n                \n\n                \n                    \n                        getunmarshalAuthKey()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alchemyBaseUrl\n                    \n                \n\n                \n                    \n                        getalchemyBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alchemyAuthKey\n                    \n                \n\n                \n                    \n                        getalchemyAuthKey()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alchemyWebookId\n                    \n                \n\n                \n                    \n                        getalchemyWebookId()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:42\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getMnemonic\n                    \n                \n\n                \n                    \n                        getgetMnemonic()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getSleepMS\n                    \n                \n\n                \n                    \n                        getgetSleepMS()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/backend-wallets-ethereum.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { walletTypes } from '@app/apps-service/charge-api/schemas/backend-wallet.schema'\nimport { ethereumBackendWalletModelString } from '@app/apps-service/ethereum-payments/ethereum-backend-wallet.constants'\nimport { EthereumBackendWallet } from '@app/apps-service/ethereum-payments/interfaces/ethereum-backend-wallet.interface'\nimport { HDNode } from '@ethersproject/hdnode'\nimport { HttpService } from '@nestjs/axios'\nimport { HttpException, Inject, Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { Model } from 'mongoose'\nimport { catchError, lastValueFrom, map } from 'rxjs'\n\n@Injectable()\nexport class BackendWalletsEthereumService {\n  private readonly logger = new Logger(BackendWalletsEthereumService.name)\n\n  constructor (\n    private httpService: HttpService,\n    private configService: ConfigService,\n    @Inject(ethereumBackendWalletModelString)\n    private backendWalletEthereumModel: Model\n  ) { }\n\n  get getPaymentsAllowedTokens () {\n    return this.configService.get('paymentsAllowedTokens')\n  }\n\n  get unmarshalBaseUrl () {\n    return this.configService.get('UNMARSHAL_BASE_URL')\n  }\n\n  get unmarshalAuthKey () {\n    return this.configService.get('UNMARSHAL_AUTH_KEY')\n  }\n\n  get alchemyBaseUrl () {\n    return this.configService.get('ALCHEMY_BASE_URL')\n  }\n\n  get alchemyAuthKey () {\n    return this.configService.get('ALCHEMY_AUTH_KEY')\n  }\n\n  get alchemyWebookId () {\n    return this.configService.get('ALCHEMY_WEBHOOK_ID')\n  }\n\n  get getMnemonic () {\n    return this.configService.get('CHARGE_PAYMENTS_ETHEREUM_MNEMONIC')\n  }\n\n  get getSleepMS () {\n    return this.configService.get('JOB_SLEEP_MS')\n  }\n\n  sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n  async createBackendWallet (walletType: walletTypes): Promise> {\n    const hdNode = HDNode.fromMnemonic(this.getMnemonic)\n\n    const lastWallet = await this.backendWalletEthereumModel.findOne().sort({ childIndex: -1 })\n    const newIndex = (lastWallet?.childIndex || 0) + 1\n    const childNode = hdNode.derivePath(\"m/44'/60'/0'/0/\" + newIndex)\n    const childWalletAddress = childNode.address.toString()\n\n    const backendWallet = await this.backendWalletEthereumModel.create({\n      childIndex: newIndex,\n      walletAddress: childWalletAddress,\n      walletType\n    })\n\n    backendWallet.save()\n\n    return backendWallet\n  }\n\n  async findWalletByAddress (walletAddress: string) {\n    return this.backendWalletEthereumModel.findOne({ walletAddress })\n  }\n\n  async getBackendWalletByAddress (address: string) {\n    return this.backendWalletEthereumModel.findOne({ walletAddress: address })\n  }\n\n  async addWebhookAddress (address: string) {\n    const url = `${this.alchemyBaseUrl}`\n\n    const requestBody = {\n      webhook_id: this.alchemyWebookId,\n      addresses_to_add: [address],\n      addresses_to_remove: []\n    }\n\n    await this.httpProxyPatch(url, requestBody)\n  }\n\n  async httpProxyPost (url: string, requestBody: any) {\n    const responseData = await lastValueFrom(\n      this.httpService.post(url, requestBody)\n        .pipe(map((response) => {\n          return response.data\n        })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    return responseData\n  }\n\n  async httpProxyPatch (url: string, requestBody: any) {\n    const responseData = await lastValueFrom(\n      this.httpService.patch(url, requestBody)\n        .pipe(map((response) => {\n          return response.data\n        })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    return responseData\n  }\n\n  async httpProxyGet (url: string) {\n    const responseData = await lastValueFrom(\n      this.httpService.get(url)\n        .pipe(map((response) => {\n          return response.data\n        })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    return responseData\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseUserOp.html":{"url":"interfaces/BaseUserOp.html","title":"interface - BaseUserOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseUserOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/interfaces/user-op.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                        \n                                            callData\n                                        \n                                \n                                \n                                        \n                                            callGasLimit\n                                        \n                                \n                                \n                                        \n                                            initCode\n                                        \n                                \n                                \n                                        \n                                            maxFeePerGas\n                                        \n                                \n                                \n                                        \n                                            maxPriorityFeePerGas\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            paymaster\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            paymasterAndData\n                                        \n                                \n                                \n                                        \n                                            preVerificationGas\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                        \n                                            signature\n                                        \n                                \n                                \n                                        \n                                            sponsorId\n                                        \n                                \n                                \n                                        \n                                            verificationGasLimit\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callGasLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callGasLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxFeePerGas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxFeePerGas:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxPriorityFeePerGas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxPriorityFeePerGas:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymaster\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymaster:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymasterAndData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymasterAndData:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preVerificationGas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        preVerificationGas:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sponsorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sponsorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verificationGasLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verificationGasLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface BaseUserOp {\n  apiKey: string; // Api key of project\n  sender: string; // Address is a string of hexadecimal characters\n  nonce: string; // Nonce is a string representation of a number that increases with each operation\n  initCode: string; // InitCode is a buffer of bytes that contains the code to create new wallets\n  callData: string; // CallData is a buffer of bytes that contains the data to execute the action\n  callGasLimit: string; // CallGasLimit is a number that specifies the maximum gas to use for the action\n  verificationGasLimit: string; // VerificationGasLimit is a number that specifies the maximum gas to use for verifying the operation\n  preVerificationGas: string; // PreVerificationGas is a number that specifies the gas to use before verifying the operation\n  maxFeePerGas: string; // MaxFeePerGas is a number that specifies the maximum fee per gas unit for the operation\n  maxPriorityFeePerGas: string; // MaxPriorityFeePerGas is a number that specifies the maximum priority fee per gas unit for the operation\n  paymasterAndData?: string; // PaymasterAndData is a buffer of bytes that contains the address and data of the paymaster who pays for the operation\n  paymaster: string; // Paymaster is an address of hexadecimal characters\n  sponsorId: string; // SponsorId of user used in paymaster contract\n  signature: string; // Signature is a buffer of bytes that contains the signature of the sender\n}\n\nexport interface UserOp extends BaseUserOp, Document {\n  userOpHash: string; // UserOpHash is a string of hexadecimal characters\n  txHash: string; // TxHash is  a unique identifier that is generated whenever a transaction is performed\n  walletFunction: object;\n  targetFunctions: Array;\n  success: boolean; // Success is a boolean value that indicates whether the operation was successful or not\n  actualGasCost: string; // ActualGasCost is a number that indicates how much gas was spent for the operation\n  actualGasUsed: string; // ActualGasUsed is a number that indicates how much gas was used for the operation\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BroadcasterModule.html":{"url":"modules/BroadcasterModule.html","title":"module - BroadcasterModule","body":"\n                   \n\n\n\n\n    Modules\n    BroadcasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BroadcasterModule\n\n\n\ncluster_BroadcasterModule_providers\n\n\n\ncluster_BroadcasterModule_imports\n\n\n\ncluster_BroadcasterModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nBroadcasterModule\n\nBroadcasterModule\n\nBroadcasterModule -->\n\nDatabaseModule->BroadcasterModule\n\n\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nBroadcasterModule -->\n\nWebhooksModule->BroadcasterModule\n\n\n\n\n\nBroadcasterService \n\nBroadcasterService \n\nBroadcasterService  -->\n\nBroadcasterModule->BroadcasterService \n\n\n\n\n\nBroadcasterService\n\nBroadcasterService\n\nBroadcasterModule -->\n\nBroadcasterService->BroadcasterModule\n\n\n\n\n\nWebhookSendService\n\nWebhookSendService\n\nBroadcasterModule -->\n\nWebhookSendService->BroadcasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-notifications-service/src/broadcaster/broadcaster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BroadcasterService\n                        \n                        \n                            WebhookSendService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            WebhooksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BroadcasterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BroadcasterService } from '@app/notifications-service/broadcaster/broadcaster.service'\nimport { WebhooksModule } from '@app/notifications-service/webhooks/webhooks.module'\nimport { HttpModule } from '@nestjs/axios'\nimport { Logger, Module } from '@nestjs/common'\nimport { webhookEventProviders } from '@app/notifications-service/common/providers/webhook-event.provider'\nimport { DatabaseModule } from '@app/common'\nimport { ConfigModule } from '@nestjs/config'\nimport configuration from '@app/notifications-service/broadcaster/config/configuration'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Module({\n  providers: [BroadcasterService, Logger, ...webhookEventProviders, WebhookSendService],\n  imports: [DatabaseModule, WebhooksModule, HttpModule, ConfigModule.forFeature(configuration)],\n  exports: [BroadcasterService]\n})\nexport class BroadcasterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BroadcasterService.html":{"url":"injectables/BroadcasterService.html","title":"injectable - BroadcasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BroadcasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getNewRetryAfterDate\n                            \n                            \n                                    Private\n                                getResponseDetailsWithDate\n                            \n                            \n                                getRetryTimeIntervalMS\n                            \n                            \n                                isRelevantEvent\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    retryTimeIntervalsMS\n                                \n                                \n                                    maxTimeIntervalsMS\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webhookEventModel: Model, configService: ConfigService, webhookSendService: WebhookSendService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webhookEventModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhookSendService\n                                                  \n                                                        \n                                                                        WebhookSendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNewRetryAfterDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewRetryAfterDate(webhookEvent: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getResponseDetailsWithDate\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponseDetailsWithDate(status: number, statusText: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                statusText\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRetryTimeIntervalMS\n                        \n                    \n                \n            \n            \n                \ngetRetryTimeIntervalMS(numberOfTries: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                numberOfTries\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRelevantEvent\n                        \n                    \n                \n            \n            \n                \nisRelevantEvent(tokenType: string, eventType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                eventType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BroadcasterService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        retryTimeIntervalsMS\n                    \n                \n\n                \n                    \n                        getretryTimeIntervalsMS()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:21\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        maxTimeIntervalsMS\n                    \n                \n\n                \n                    \n                        getmaxTimeIntervalsMS()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-notifications-service/src/broadcaster/broadcaster.service.ts:25\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { eventTypes } from '@app/notifications-service/webhooks/schemas/webhook.schema'\nimport { HttpException, HttpStatus, Inject, Injectable, Logger } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { webhookEventModelString } from '@app/notifications-service/common/constants/webhook-event.constants'\nimport { WebhookEvent } from '@app/notifications-service/common/interfaces/webhook-event.interface'\nimport { ConfigService } from '@nestjs/config'\nimport { Webhook } from '@app/notifications-service/webhooks/interfaces/webhook.interface'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Injectable()\nexport class BroadcasterService {\n  private readonly logger = new Logger(BroadcasterService.name)\n\n  constructor (\n    @Inject(webhookEventModelString)\n    private webhookEventModel: Model,\n    private readonly configService: ConfigService,\n    private readonly webhookSendService: WebhookSendService\n  ) { }\n\n  get retryTimeIntervalsMS () {\n    return this.configService.get('retryTimeIntervalsMS') as Record\n  }\n\n  get maxTimeIntervalsMS (): number {\n    return this.retryTimeIntervalsMS[Object.keys(this.retryTimeIntervalsMS).length]\n  }\n\n  getRetryTimeIntervalMS (numberOfTries: number) {\n    return this.retryTimeIntervalsMS[numberOfTries] || this.maxTimeIntervalsMS\n  }\n\n  async onModuleInit (): Promise {\n    this.start()\n  }\n\n  async start () {\n    while (true) {\n      const webhookEventsToSendNow = await this.webhookEventModel.find(\n        {\n          retryAfter: { $lte: new Date() },\n          success: false,\n          numberOfTries: { $lt: 6 }\n        }\n      ).populate('webhook').sort({ retryAfter: -1 })\n\n      for (const webhookEvent of webhookEventsToSendNow) {\n        try {\n          this.logger.log(`Starting sending to ${webhookEvent.webhook.webhookUrl}. TxHash: ${webhookEvent.eventData.txHash}`)\n          webhookEvent.numberOfTries++\n          const response = await this.webhookSendService.sendData(webhookEvent)\n          webhookEvent.responses.push(this.getResponseDetailsWithDate(response.status, response.statusText))\n          webhookEvent.success = true\n        } catch (err) {\n          let errorStatus: number, errorResponse: string\n          if (err instanceof HttpException) {\n            errorStatus = err.getStatus()\n            errorResponse = err.getResponse().toString()\n            if (isNaN(errorStatus)) {\n              this.logger.warn(`Webhook ${webhookEvent._id} unable to send an webhook event to its URL:${webhookEvent.webhook.webhookUrl}`\n              )\n            } else {\n              this.logger.error(\n                `Webhook ${webhookEvent._id} returned error. `,\n                `Error message: ${errorResponse}`,\n                `Error status: ${errorStatus}`\n              )\n            }\n          } else {\n            errorStatus = HttpStatus.INTERNAL_SERVER_ERROR\n            errorResponse = JSON.stringify(err)\n            this.logger.error(\n              `Webhook ${webhookEvent._id} returned error. `,\n              `Error message: ${errorResponse}`,\n              `Error status: ${errorStatus}`\n            )\n          }\n\n          webhookEvent.responses.push(\n            this.getResponseDetailsWithDate(errorStatus, errorResponse)\n          )\n\n          webhookEvent.retryAfter = new Date(\n            this.getNewRetryAfterDate(webhookEvent)\n          )\n        } finally {\n          try {\n            await webhookEvent.save()\n          } catch (err) {\n            this.logger.error(`Failed to save webhookEvent ${webhookEvent._id}: ${err}`)\n          }\n        }\n      }\n    }\n  }\n\n  private getResponseDetailsWithDate (status: number, statusText: string): object {\n    return {\n      status,\n      statusText,\n      date: new Date()\n    }\n  }\n\n  private getNewRetryAfterDate (webhookEvent: any) {\n    const old = webhookEvent?.retryAfter || new Date()\n    const addInterval = this.getRetryTimeIntervalMS(webhookEvent.numberOfTries)\n    return new Date(old.getTime() + addInterval)\n  }\n\n  isRelevantEvent (tokenType: string, eventType: string): boolean {\n    // TODO: Choose better naming to make it clearer what each variable is\n    if (eventType === eventTypes.ALL || tokenType === eventType) {\n      return true\n    }\n\n    return false\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BundlerApiController.html":{"url":"controllers/BundlerApiController.html","title":"controller - BundlerApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BundlerApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/bundler-api/bundler-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/bundler-api/bundler-api.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/bundler-api/bundler-api.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { BundlerApiInterceptor } from '@app/api-service/bundler-api/bundler-api.interceptor'\nimport { IsPrdOrSbxKeyGuard } from '@app/api-service/api-keys/guards/is-production-or-sandbox-key.guard'\n\n@UseGuards(IsPrdOrSbxKeyGuard)\n@Controller({ path: 'v0/bundler' })\n@UseInterceptors(BundlerApiInterceptor)\n\nexport class BundlerApiController {\n  @Get()\n  get () {\n  }\n\n  @Post()\n  post () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BundlerApiInterceptor.html":{"url":"injectables/BundlerApiInterceptor.html","title":"injectable - BundlerApiInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BundlerApiInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                            \n                                    Private\n                                    Async\n                                prepareRequestConfig\n                            \n                            \n                                    Private\n                                prepareUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataLayerClient: ClientProxy, httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataLayerClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        prepareRequestConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareRequestConfig(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareUrl(environment)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environment\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BundlerApiInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-api-service/src/bundler-api/bundler-api.interceptor.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  HttpException,\n  CallHandler,\n  InternalServerErrorException,\n  Inject,\n  HttpStatus,\n  Logger\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { lastValueFrom, Observable } from 'rxjs'\nimport { catchError, map } from 'rxjs/operators'\nimport { isEmpty, capitalize, isNil } from 'lodash'\nimport { AxiosRequestConfig, AxiosResponse } from 'axios'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { smartWalletsService } from '@app/common/constants/microservices.constants'\n\n@Injectable()\nexport class BundlerApiInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(BundlerApiInterceptor.name)\n  constructor (\n    @Inject(smartWalletsService) private readonly dataLayerClient: ClientProxy,\n    private httpService: HttpService,\n    private configService: ConfigService\n  ) { }\n\n  async intercept (context: ExecutionContext, next: CallHandler): Promise> {\n    const requestConfig: AxiosRequestConfig = await this.prepareRequestConfig(\n      context\n    )\n\n    const response = await lastValueFrom(\n      this.httpService\n        .request(requestConfig)\n        .pipe(\n          map((axiosResponse: AxiosResponse) => {\n            this.logger.log(`BundlerApiInterceptor succeeded: ${JSON.stringify(axiosResponse.data)}`)\n            return axiosResponse.data\n          })\n        )\n        .pipe(\n          catchError((e) => {\n            const errorReason =\n              e?.response?.data?.error ||\n              e?.response?.data?.errors?.message ||\n              ''\n            this.logger.log(`BundlerApiInterceptor error: ${JSON.stringify(e)}`)\n            throw new HttpException(\n              `${e?.response?.statusText}: ${errorReason}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    if (requestConfig.data?.method === 'eth_sendUserOperation') {\n      const userOp = { ...requestConfig.data.params[0], userOpHash: response?.result, apiKey: context.switchToHttp().getRequest().query.apiKey }\n      this.logger.log(`eth_sendUserOperation: ${JSON.stringify(userOp)}`)\n      try {\n        if (isNil(userOp.userOpHash)) {\n          this.logger.log(`No userOpHash found in: ${JSON.stringify(userOp)}`)\n          throw new HttpException('UserOp should contain userOpHash', HttpStatus.BAD_REQUEST)\n        }\n        callMSFunction(this.dataLayerClient, 'record-user-op', userOp).catch(e => {\n          this.logger.log(`record-user-op failed: ${JSON.stringify(userOp)}`)\n          this.logger.log(e)\n        })\n      } catch (error) {\n        this.logger.log(error)\n      }\n    }\n\n    return next.handle().pipe(map(() => response))\n  }\n\n  private async prepareRequestConfig (context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest()\n    const requestEnvironment = request.environment\n    const ctxHandlerName = context.getHandler().name\n    const body = request.body\n    const requestConfig: AxiosRequestConfig = {\n      url: this.prepareUrl(requestEnvironment),\n      method: ctxHandlerName\n    }\n\n    if (!isEmpty(body)) {\n      requestConfig.data = body\n    }\n\n    return requestConfig\n  }\n\n  private prepareUrl (environment) {\n    if (isEmpty(environment)) throw new InternalServerErrorException('Bundler environment is missing')\n    const config = this.configService.get(`bundler.${environment}`)\n\n    if (config.url) {\n      return config.url\n    } else {\n      throw new InternalServerErrorException(`${capitalize(environment)} bundler environment is missing`)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BundlerApiModule.html":{"url":"modules/BundlerApiModule.html","title":"module - BundlerApiModule","body":"\n                   \n\n\n\n\n    Modules\n    BundlerApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BundlerApiModule\n\n\n\ncluster_BundlerApiModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nBundlerApiModule\n\nBundlerApiModule\n\nBundlerApiModule -->\n\nApiKeyModule->BundlerApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/bundler-api/bundler-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            BundlerApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HttpModule } from '@nestjs/axios'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { ConfigModule } from '@nestjs/config'\nimport configuration from '@app/api-service/bundler-api/config/configuration'\nimport { BundlerApiController } from '@app/api-service/bundler-api/bundler-api.controller'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { smartWalletsService } from '@app/common/constants/microservices.constants'\n\n@Module({\n  imports: [\n    ApiKeyModule,\n    ClientsModule.register([\n      {\n        name: smartWalletsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.SMART_WALLETS_HOST,\n          port: parseInt(process.env.SMART_WALLETS_TCP_PORT)\n        }\n      }\n    ]),\n    HttpModule,\n    ConfigModule.forFeature(configuration)\n  ],\n  controllers: [\n    BundlerApiController\n  ]\n})\n\nexport class BundlerApiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeApiModule.html":{"url":"modules/ChargeApiModule.html","title":"module - ChargeApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeApiModule\n\n\n\ncluster_ChargeApiModule_imports\n\n\n\ncluster_ChargeApiModule_providers\n\n\n\ncluster_ChargeApiModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nChargeApiModule\n\nChargeApiModule\n\nChargeApiModule -->\n\nDatabaseModule->ChargeApiModule\n\n\n\n\n\nChargeApiService \n\nChargeApiService \n\nChargeApiService  -->\n\nChargeApiModule->ChargeApiService \n\n\n\n\n\nChargeApiService\n\nChargeApiService\n\nChargeApiModule -->\n\nChargeApiService->ChargeApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-api/charge-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChargeApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChargeApiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { ChargeApiService } from '@app/apps-service/charge-api/charge-api.service'\nimport { backendWalletProviders } from '@app/apps-service/charge-api/backend-wallet.providers'\nimport { DatabaseModule } from '@app/common'\nimport configuration from '@app/apps-service/common/config/configuration'\n\n@Module({\n  imports: [\n    DatabaseModule,\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        headers: {\n          'Content-Type': 'application/json',\n          'API-SECRET': `${configService.get('CHARGE_SECRET_KEY')}`\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    ConfigModule.forFeature(configuration)\n  ],\n  providers: [ChargeApiService, ConfigService, ...backendWalletProviders],\n  exports: [ChargeApiService]\n})\nexport class ChargeApiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChargeApiService.html":{"url":"injectables/ChargeApiService.html","title":"injectable - ChargeApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChargeApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-api/charge-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                sleep\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addWebhookAddress\n                            \n                            \n                                    Async\n                                createBackendWallet\n                            \n                            \n                                    Async\n                                getBackendWalletByAddress\n                            \n                            \n                                    Async\n                                getPriceFromTradeApi\n                            \n                            \n                                    Async\n                                getUpdatedJobData\n                            \n                            \n                                    Async\n                                getWalletBalance\n                            \n                            \n                                    Async\n                                httpProxyGet\n                            \n                            \n                                    Async\n                                httpProxyPost\n                            \n                            \n                                    Async\n                                transferTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPaymentsAllowedTokens\n                                \n                                \n                                    chargeBaseUrl\n                                \n                                \n                                    unmarshalBaseUrl\n                                \n                                \n                                    unmarshalAuthKey\n                                \n                                \n                                    chargePublicKey\n                                \n                                \n                                    chargeWebhookId\n                                \n                                \n                                    walletPhoneNumber\n                                \n                                \n                                    getSleepMS\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService, backendWalletModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendWalletModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addWebhookAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    addWebhookAddress(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createBackendWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBackendWallet(walletType: walletTypes)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletType\n                                            \n                                                            walletTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBackendWalletByAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBackendWalletByAddress(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceFromTradeApi\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceFromTradeApi(tokenAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUpdatedJobData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUpdatedJobData(jobData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jobData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletBalance(address: string, networkName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                networkName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'fuse'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        httpProxyGet\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxyGet(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:201\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        httpProxyPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxyPost(url: string, requestBody: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferTokens(transferTokensDto: TransferTokensDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferTokensDto\n                                            \n                                                            TransferTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ChargeApiService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sleep\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:56\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getPaymentsAllowedTokens\n                    \n                \n\n                \n                    \n                        getgetPaymentsAllowedTokens()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        chargeBaseUrl\n                    \n                \n\n                \n                    \n                        getchargeBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unmarshalBaseUrl\n                    \n                \n\n                \n                    \n                        getunmarshalBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        unmarshalAuthKey\n                    \n                \n\n                \n                    \n                        getunmarshalAuthKey()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        chargePublicKey\n                    \n                \n\n                \n                    \n                        getchargePublicKey()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        chargeWebhookId\n                    \n                \n\n                \n                    \n                        getchargeWebhookId()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        walletPhoneNumber\n                    \n                \n\n                \n                    \n                        getwalletPhoneNumber()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getSleepMS\n                    \n                \n\n                \n                    \n                        getgetSleepMS()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/charge-api/charge-api.service.ts:52\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { HttpException, HttpStatus, Inject, Injectable, Logger } from '@nestjs/common'\nimport { catchError, lastValueFrom, map } from 'rxjs'\nimport { isEmpty, keyBy, merge, values } from 'lodash'\nimport { ConfigService } from '@nestjs/config'\nimport { backendWalletModelString } from '@app/apps-service/charge-api/backend-wallet.constants'\nimport { Model } from 'mongoose'\nimport { BackendWallet } from '@app/apps-service/charge-api/interfaces/backend-wallet.interface'\nimport { walletTypes } from '@app/apps-service/charge-api/schemas/backend-wallet.schema'\nimport { TransferTokensDto } from '@app/apps-service/payments/dto/transfer-tokens.dto'\nimport { formatUnits } from 'nestjs-ethers'\n\n@Injectable()\nexport class ChargeApiService {\n  private readonly logger = new Logger(ChargeApiService.name)\n\n  constructor (\n    private httpService: HttpService,\n    private configService: ConfigService,\n    @Inject(backendWalletModelString)\n    private backendWalletModel: Model\n  ) { }\n\n  get getPaymentsAllowedTokens () {\n    return this.configService.get('paymentsAllowedTokens')\n  }\n\n  get chargeBaseUrl () {\n    return this.configService.get('CHARGE_BASE_URL')\n  }\n\n  get unmarshalBaseUrl () {\n    return this.configService.get('UNMARSHAL_BASE_URL')\n  }\n\n  get unmarshalAuthKey () {\n    return this.configService.get('UNMARSHAL_AUTH_KEY')\n  }\n\n  get chargePublicKey () {\n    return this.configService.get('CHARGE_PUBLIC_KEY')\n  }\n\n  get chargeWebhookId () {\n    return this.configService.get('CHARGE_WEBHOOK_ID')\n  }\n\n  get walletPhoneNumber () {\n    return this.configService.get('CHARGE_WALLET_PHONE_NUMBER')\n  }\n\n  get getSleepMS () {\n    return this.configService.get('JOB_SLEEP_MS')\n  }\n\n  sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n\n  async createBackendWallet (walletType: walletTypes): Promise> {\n    const phoneNumber = this.walletPhoneNumber\n    const url = `${this.chargeBaseUrl}/api/v0/admin/wallets/create?apiKey=${this.chargePublicKey}`\n\n    const requestBody = {\n      phoneNumber\n    }\n\n    const responseData = await this.httpProxyPost(url, requestBody)\n\n    const jobData = responseData?.job\n    const walletAddress = jobData?.data?.walletAddress\n\n    const backendWallet = await this.backendWalletModel.create({\n      jobId: jobData._id,\n      walletAddress,\n      walletType\n    })\n\n    setTimeout(async () => {\n      const updatedJobData = await this.getUpdatedJobData(jobData)\n      await this.backendWalletModel.findByIdAndUpdate(\n        backendWallet._id,\n        {\n          walletAddress: updatedJobData.data.walletAddress,\n          accountAddress: updatedJobData.data.accountAddress,\n          ownerAddress: updatedJobData.data.data.owner\n        }\n      )\n    }, this.getSleepMS)\n\n    backendWallet.save()\n\n    return backendWallet\n  }\n\n  async transferTokens (transferTokensDto: TransferTokensDto) {\n    const url = `${this.chargeBaseUrl}/api/v0/admin/tokens/transfer?apiKey=${this.chargePublicKey}`\n\n    const requestBody = {\n      from: transferTokensDto.from,\n      to: transferTokensDto.to,\n      amount: transferTokensDto.amount,\n      tokenAddress: transferTokensDto.tokenAddress\n    }\n\n    const responseData = await this.httpProxyPost(url, requestBody)\n\n    let jobData = responseData?.job\n\n    await this.sleep(this.getSleepMS)\n\n    jobData = await this.getUpdatedJobData(jobData)\n\n    this.logger.log(JSON.stringify(jobData))\n\n    if (jobData?.data?.status === 'failed') {\n      throw new HttpException(\n        `Transfering tokens failed. Fail reason ${jobData?.data?.failReason}`,\n        HttpStatus.INTERNAL_SERVER_ERROR\n      )\n    }\n\n    return jobData\n  }\n\n  async getWalletBalance (address: string, networkName: string = 'fuse') {\n    const tokensBalanceUrl = `${this.unmarshalBaseUrl}/v1/${networkName}/address/${address}/assets?chainId=122&token=false&auth_key=${this.unmarshalAuthKey}`\n\n    const tokensBalance = await this.httpProxyGet(tokensBalanceUrl)\n\n    const paymentsAllowedTokens = this.getPaymentsAllowedTokens\n\n    const extendedTokensBalance = values(merge(keyBy(tokensBalance, 'contract_address'), keyBy(paymentsAllowedTokens, 'contract_address')))\n\n    for (const [index, token] of extendedTokensBalance.entries()) {\n      if (isEmpty(token.balance)) {\n        token.balance = '0'\n      }\n\n      if (isEmpty(token.verified)) {\n        const priceData = await this.getPriceFromTradeApi(token.tokenAddress || token.contract_address)\n        token.quote_rate = priceData.data.price\n        const formattedBalance = formatUnits(token.balance, token.contract_decimals)\n        token.quote = (parseFloat(formattedBalance) * parseFloat(token.quote_rate)).toString()\n\n        extendedTokensBalance[index] = token\n      }\n    }\n\n    return extendedTokensBalance\n  }\n\n  async getBackendWalletByAddress (address: string) {\n    return this.backendWalletModel.findOne({ walletAddress: address })\n  }\n\n  async getUpdatedJobData (jobData: any) {\n    const jobId = jobData?._id\n\n    const url = `${this.chargeBaseUrl}/api/v0/jobs/${jobId}?apiKey=${this.chargePublicKey}`\n\n    const responseData = await this.httpProxyGet(url)\n\n    return responseData\n  }\n\n  async addWebhookAddress (params: { walletAddress: string, webhookId: string }) {\n    const url = `${this.chargeBaseUrl}/api/v0/notifications/webhook/add-addresses?apiKey=${this.chargePublicKey}`\n    const requestBody = {\n      webhookId: params.webhookId,\n      addresses: [params.walletAddress]\n    }\n\n    await this.httpProxyPost(url, requestBody)\n  }\n\n  async getPriceFromTradeApi (tokenAddress: string) {\n    const url = `${this.chargeBaseUrl}/api/v0/trade/price/${tokenAddress}?apiKey=${this.chargePublicKey}`\n    const response = await this.httpProxyGet(url)\n    return response\n  }\n\n  async httpProxyPost (url: string, requestBody: any) {\n    const responseData = await lastValueFrom(\n      this.httpService.post(url, requestBody)\n        .pipe(map((response) => {\n          return response.data\n        })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    return responseData\n  }\n\n  async httpProxyGet (url: string) {\n    const responseData = await lastValueFrom(\n      this.httpService.get(url)\n        .pipe(map((response) => {\n          return response.data\n        })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    return responseData\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeApiServiceController.html":{"url":"controllers/ChargeApiServiceController.html","title":"controller - ChargeApiServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeApiServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/charge-api-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/charge-api-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeApiServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeApiServiceModule.html":{"url":"modules/ChargeApiServiceModule.html","title":"module - ChargeApiServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeApiServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeApiServiceModule\n\n\n\ncluster_ChargeApiServiceModule_providers\n\n\n\ncluster_ChargeApiServiceModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nChargeApiServiceModule\n\nChargeApiServiceModule\n\nChargeApiServiceModule -->\n\nApiKeyModule->ChargeApiServiceModule\n\n\n\n\n\nBundlerApiModule\n\nBundlerApiModule\n\nChargeApiServiceModule -->\n\nBundlerApiModule->ChargeApiServiceModule\n\n\n\n\n\nConsensusApiModule\n\nConsensusApiModule\n\nChargeApiServiceModule -->\n\nConsensusApiModule->ChargeApiServiceModule\n\n\n\n\n\nExplorerApiModule\n\nExplorerApiModule\n\nChargeApiServiceModule -->\n\nExplorerApiModule->ChargeApiServiceModule\n\n\n\n\n\nGraphqlAPIModule\n\nGraphqlAPIModule\n\nChargeApiServiceModule -->\n\nGraphqlAPIModule->ChargeApiServiceModule\n\n\n\n\n\nLegacyApiModule\n\nLegacyApiModule\n\nChargeApiServiceModule -->\n\nLegacyApiModule->ChargeApiServiceModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nChargeApiServiceModule -->\n\nNotificationsModule->ChargeApiServiceModule\n\n\n\n\n\nPaymasterApiModule\n\nPaymasterApiModule\n\nChargeApiServiceModule -->\n\nPaymasterApiModule->ChargeApiServiceModule\n\n\n\n\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule\n\nChargeApiServiceModule -->\n\nSmartWalletsAPIModule->ChargeApiServiceModule\n\n\n\n\n\nStakingAPIModule\n\nStakingAPIModule\n\nChargeApiServiceModule -->\n\nStakingAPIModule->ChargeApiServiceModule\n\n\n\n\n\nChargeApiServiceService\n\nChargeApiServiceService\n\nChargeApiServiceModule -->\n\nChargeApiServiceService->ChargeApiServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/charge-api-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChargeApiServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChargeApiServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                        \n                            BundlerApiModule\n                        \n                        \n                            ConsensusApiModule\n                        \n                        \n                            ExplorerApiModule\n                        \n                        \n                            GraphqlAPIModule\n                        \n                        \n                            LegacyApiModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PaymasterApiModule\n                        \n                        \n                            SmartWalletsAPIModule\n                        \n                        \n                            StakingAPIModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ChargeApiServiceController } from '@app/api-service/charge-api-service.controller'\nimport { ChargeApiServiceService } from '@app/api-service/charge-api-service.service'\nimport { LegacyApiModule } from '@app/api-service/legacy-api/legacy-api.module'\nimport { Module } from '@nestjs/common'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { NotificationsModule } from '@app/api-service/notifications/notifications.module'\nimport { StakingAPIModule } from '@app/api-service/staking-api/staking-api.module'\nimport { ExplorerApiModule } from '@app/api-service/explorer-api/explorer-api.module'\nimport { PaymasterApiModule } from '@app/api-service/paymaster-api/paymaster-api.module'\nimport { BundlerApiModule } from '@app/api-service/bundler-api/bundler-api.module'\nimport { SmartWalletsAPIModule } from '@app/api-service/smart-wallets-api/smart-wallets-api.module'\nimport { GraphqlAPIModule } from '@app/api-service/graphql-api/graphql-api.module'\nimport { ConsensusApiModule } from '@app/api-service/consensus-api/consensus-api.module'\n\n@Module({\n  imports: [\n    ApiKeyModule,\n    LegacyApiModule,\n    NotificationsModule,\n    StakingAPIModule,\n    ExplorerApiModule,\n    BundlerApiModule,\n    SmartWalletsAPIModule,\n    GraphqlAPIModule,\n    PaymasterApiModule,\n    ConsensusApiModule\n  ],\n  controllers: [ChargeApiServiceController],\n  providers: [ChargeApiServiceService]\n})\nexport class ChargeApiServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChargeApiServiceService.html":{"url":"injectables/ChargeApiServiceService.html","title":"injectable - ChargeApiServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChargeApiServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/charge-api-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/charge-api-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class ChargeApiServiceService {\n  getHello (): string {\n    return 'Hello World!'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeAppsServiceController.html":{"url":"controllers/ChargeAppsServiceController.html","title":"controller - ChargeAppsServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeAppsServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-apps-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-apps-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeAppsServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeAppsServiceModule.html":{"url":"modules/ChargeAppsServiceModule.html","title":"module - ChargeAppsServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeAppsServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeAppsServiceModule\n\n\n\ncluster_ChargeAppsServiceModule_imports\n\n\n\ncluster_ChargeAppsServiceModule_providers\n\n\n\n\nApiKeysModule\n\nApiKeysModule\n\n\n\nChargeAppsServiceModule\n\nChargeAppsServiceModule\n\nChargeAppsServiceModule -->\n\nApiKeysModule->ChargeAppsServiceModule\n\n\n\n\n\nEthereumPaymentsModule\n\nEthereumPaymentsModule\n\nChargeAppsServiceModule -->\n\nEthereumPaymentsModule->ChargeAppsServiceModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nChargeAppsServiceModule -->\n\nPaymentsModule->ChargeAppsServiceModule\n\n\n\n\n\nChargeAppsServiceService\n\nChargeAppsServiceService\n\nChargeAppsServiceModule -->\n\nChargeAppsServiceService->ChargeAppsServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-apps-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChargeAppsServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChargeAppsServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeysModule\n                        \n                        \n                            EthereumPaymentsModule\n                        \n                        \n                            PaymentsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ChargeAppsServiceController } from '@app/apps-service/charge-apps-service.controller'\nimport { ChargeAppsServiceService } from '@app/apps-service/charge-apps-service.service'\nimport { ApiKeysModule } from '@app/apps-service/api-keys/api-keys.module'\nimport { PaymentsModule } from '@app/apps-service/payments/payments.module'\nimport { EthereumPaymentsModule } from '@app/apps-service/ethereum-payments/ethereum-payments.module'\n\n@Module({\n  imports: [ApiKeysModule, PaymentsModule, EthereumPaymentsModule],\n  controllers: [ChargeAppsServiceController],\n  providers: [ChargeAppsServiceService]\n})\nexport class ChargeAppsServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChargeAppsServiceService.html":{"url":"injectables/ChargeAppsServiceService.html","title":"injectable - ChargeAppsServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChargeAppsServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/charge-apps-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/charge-apps-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class ChargeAppsServiceService {\n  getHello (): string {\n    return 'Hello World!'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeNetworkServiceController.html":{"url":"controllers/ChargeNetworkServiceController.html","title":"controller - ChargeNetworkServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeNetworkServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/charge-network-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/charge-network-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeNetworkServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeNetworkServiceModule.html":{"url":"modules/ChargeNetworkServiceModule.html","title":"module - ChargeNetworkServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeNetworkServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeNetworkServiceModule\n\n\n\ncluster_ChargeNetworkServiceModule_imports\n\n\n\n\nConsensusModule\n\nConsensusModule\n\n\n\nChargeNetworkServiceModule\n\nChargeNetworkServiceModule\n\nChargeNetworkServiceModule -->\n\nConsensusModule->ChargeNetworkServiceModule\n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nChargeNetworkServiceModule -->\n\nGraphqlModule->ChargeNetworkServiceModule\n\n\n\n\n\nStakingModule\n\nStakingModule\n\nChargeNetworkServiceModule -->\n\nStakingModule->ChargeNetworkServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-network-service/src/charge-network-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ChargeNetworkServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsensusModule\n                        \n                        \n                            GraphqlModule\n                        \n                        \n                            StakingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ChargeNetworkServiceController } from '@app/network-service/charge-network-service.controller'\nimport { StakingModule } from '@app/network-service/staking/staking.module'\nimport { HttpModule } from '@nestjs/axios'\nimport { GraphqlModule } from '@app/network-service/graphql/graphql.module'\nimport { ConsensusModule } from '@app/network-service/consensus/consensus.module'\n\n@Module({\n  imports: [\n    StakingModule,\n    HttpModule,\n    GraphqlModule,\n    ConsensusModule\n  ],\n  controllers: [ChargeNetworkServiceController]\n})\nexport class ChargeNetworkServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeNotificationsServiceController.html":{"url":"controllers/ChargeNotificationsServiceController.html","title":"controller - ChargeNotificationsServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeNotificationsServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/charge-notifications-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/charge-notifications-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeNotificationsServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeNotificationsServiceModule.html":{"url":"modules/ChargeNotificationsServiceModule.html","title":"module - ChargeNotificationsServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeNotificationsServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeNotificationsServiceModule\n\n\n\ncluster_ChargeNotificationsServiceModule_imports\n\n\n\n\nBroadcasterModule\n\nBroadcasterModule\n\n\n\nChargeNotificationsServiceModule\n\nChargeNotificationsServiceModule\n\nChargeNotificationsServiceModule -->\n\nBroadcasterModule->ChargeNotificationsServiceModule\n\n\n\n\n\nEventsScannerModule\n\nEventsScannerModule\n\nChargeNotificationsServiceModule -->\n\nEventsScannerModule->ChargeNotificationsServiceModule\n\n\n\n\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule\n\nChargeNotificationsServiceModule -->\n\nSmartWalletsAPIModule->ChargeNotificationsServiceModule\n\n\n\n\n\nTransactionsScannerModule\n\nTransactionsScannerModule\n\nChargeNotificationsServiceModule -->\n\nTransactionsScannerModule->ChargeNotificationsServiceModule\n\n\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nChargeNotificationsServiceModule -->\n\nWebhooksModule->ChargeNotificationsServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-notifications-service/src/charge-notifications-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ChargeNotificationsServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BroadcasterModule\n                        \n                        \n                            EventsScannerModule\n                        \n                        \n                            SmartWalletsAPIModule\n                        \n                        \n                            TransactionsScannerModule\n                        \n                        \n                            WebhooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SmartWalletsAPIModule } from '@app/api-service/smart-wallets-api/smart-wallets-api.module'\nimport { BroadcasterModule } from '@app/notifications-service/broadcaster/broadcaster.module'\nimport { ChargeNotificationsServiceController } from '@app/notifications-service/charge-notifications-service.controller'\nimport { EventsScannerModule } from '@app/notifications-service/events-scanner/events-scanner.module'\nimport { TransactionsScannerModule } from '@app/notifications-service/transactions-scanner/transactions-scanner.module'\nimport { WebhooksModule } from '@app/notifications-service/webhooks/webhooks.module'\nimport { Module } from '@nestjs/common'\n\n@Module({\n  imports: [WebhooksModule, EventsScannerModule, TransactionsScannerModule, BroadcasterModule, SmartWalletsAPIModule],\n  controllers: [ChargeNotificationsServiceController]\n})\nexport class ChargeNotificationsServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeRelayServiceController.html":{"url":"controllers/ChargeRelayServiceController.html","title":"controller - ChargeRelayServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeRelayServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-relay-service/src/charge-relay-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-relay-service/src/charge-relay-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeRelayServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeRelayServiceModule.html":{"url":"modules/ChargeRelayServiceModule.html","title":"module - ChargeRelayServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeRelayServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeRelayServiceModule\n\n\n\ncluster_ChargeRelayServiceModule_imports\n\n\n\n\nRelayAccountsModule\n\nRelayAccountsModule\n\n\n\nChargeRelayServiceModule\n\nChargeRelayServiceModule\n\nChargeRelayServiceModule -->\n\nRelayAccountsModule->ChargeRelayServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-relay-service/src/charge-relay-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ChargeRelayServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RelayAccountsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { RelayAccountsModule } from '@app/relay-service/relay-accounts/relay-accounts.module'\nimport { ChargeRelayServiceController } from '@app/relay-service/charge-relay-service.controller'\n\n@Module({\n  imports: [RelayAccountsModule],\n  controllers: [ChargeRelayServiceController]\n})\nexport class ChargeRelayServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChargeRelayServiceService.html":{"url":"injectables/ChargeRelayServiceService.html","title":"injectable - ChargeRelayServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChargeRelayServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-relay-service/src/charge-relay-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-relay-service/src/charge-relay-service.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class ChargeRelayServiceService {\n  getHello (): string {\n    return 'Hello World!'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChargeSmartWalletsServiceController.html":{"url":"controllers/ChargeSmartWalletsServiceController.html","title":"controller - ChargeSmartWalletsServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChargeSmartWalletsServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/charge-smart-wallets-service.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                healthCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        healthCheck\n                        \n                    \n                \n            \n            \n                \n                        \n                    healthCheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/charge-smart-wallets-service.controller.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\n@Controller()\nexport class ChargeSmartWalletsServiceController {\n  @Get('health')\n  healthCheck () {\n    return 'ok'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChargeSmartWalletsServiceModule.html":{"url":"modules/ChargeSmartWalletsServiceModule.html","title":"module - ChargeSmartWalletsServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ChargeSmartWalletsServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChargeSmartWalletsServiceModule\n\n\n\ncluster_ChargeSmartWalletsServiceModule_imports\n\n\n\n\nDataLayerModule\n\nDataLayerModule\n\n\n\nChargeSmartWalletsServiceModule\n\nChargeSmartWalletsServiceModule\n\nChargeSmartWalletsServiceModule -->\n\nDataLayerModule->ChargeSmartWalletsServiceModule\n\n\n\n\n\nSmartWalletsModule\n\nSmartWalletsModule\n\nChargeSmartWalletsServiceModule -->\n\nSmartWalletsModule->ChargeSmartWalletsServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/charge-smart-wallets-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ChargeSmartWalletsServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataLayerModule\n                        \n                        \n                            SmartWalletsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ChargeSmartWalletsServiceController } from '@app/smart-wallets-service/charge-smart-wallets-service.controller'\nimport { SmartWalletsModule } from '@app/smart-wallets-service/smart-wallets/smart-wallets.module'\nimport { Module } from '@nestjs/common'\nimport { DataLayerModule } from '@app/smart-wallets-service/data-layer/data-layer.module'\n\n@Module({\n  controllers: [ChargeSmartWalletsServiceController],\n  imports: [SmartWalletsModule, DataLayerModule]\n})\nexport class ChargeSmartWalletsServiceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConsensusApiController.html":{"url":"controllers/ConsensusApiController.html","title":"controller - ConsensusApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConsensusApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/consensus-api/consensus-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v0/consensus\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delegate\n                            \n                            \n                                    \n                                getDelegatedAmounts\n                            \n                            \n                                    \n                                getValidators\n                            \n                            \n                                    \n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delegate\n                        \n                    \n                \n            \n            \n                \n                        \n                    delegate(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delegate')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getDelegatedAmounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDelegatedAmounts(delegatedAmountsDto: DelegatedAmountsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delegated_amounts')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delegatedAmountsDto\n                                            \n                                                            DelegatedAmountsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getValidators\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidators()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('validators')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdraw(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('withdraw')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  UseInterceptors\n} from '@nestjs/common'\nimport { ConsensusApiService } from '@app/api-service/consensus-api/consensus-api.service'\nimport { DelegatedAmountsDto } from '@app/network-service/consensus/dto/consensus.dto'\nimport { CacheInterceptor } from '@nestjs/cache-manager'\n\n@Controller('v0/consensus')\n@UseInterceptors(CacheInterceptor)\nexport class ConsensusApiController {\n  constructor (\n    private readonly consensusApiService: ConsensusApiService\n  ) { }\n\n  @Get('validators')\n  getValidators () {\n    return this.consensusApiService.getValidators()\n  }\n\n  @Post('delegated_amounts')\n  getDelegatedAmounts (@Body() delegatedAmountsDto: DelegatedAmountsDto) {\n    return this.consensusApiService.getDelegatedAmounts(delegatedAmountsDto)\n  }\n\n  @Post('delegate')\n  delegate (@Body() data: { validator: string }) {\n    return this.consensusApiService.delegate(data.validator)\n  }\n\n  @Post('withdraw')\n  withdraw (@Body() data: { validator: string, amount: string }) {\n    return this.consensusApiService.withdraw(data.validator, data.amount)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsensusApiModule.html":{"url":"modules/ConsensusApiModule.html","title":"module - ConsensusApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsensusApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConsensusApiModule\n\n\n\ncluster_ConsensusApiModule_providers\n\n\n\n\nConsensusApiService\n\nConsensusApiService\n\n\n\nConsensusApiModule\n\nConsensusApiModule\n\nConsensusApiModule -->\n\nConsensusApiService->ConsensusApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/consensus-api/consensus-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsensusApiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConsensusApiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { ConsensusApiController } from '@app/api-service/consensus-api/consensus-api.controller'\nimport { ConsensusApiService } from '@app/api-service/consensus-api/consensus-api.service'\nimport { CacheModule } from '@nestjs/cache-manager'\n\n@Module({\n  imports: [\n    CacheModule.register({\n      ttl: 60000, // in milliseconds\n      max: 1000\n    }),\n    ClientsModule.register([\n      {\n        name: networkService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.NETWORK_HOST,\n          port: parseInt(process.env.NETWORK_TCP_PORT)\n        }\n      }\n    ])\n  ],\n  providers: [ConsensusApiService],\n  controllers: [ConsensusApiController]\n})\n\nexport class ConsensusApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsensusApiService.html":{"url":"injectables/ConsensusApiService.html","title":"injectable - ConsensusApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsensusApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/consensus-api/consensus-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delegate\n                            \n                            \n                                    Async\n                                getDelegatedAmounts\n                            \n                            \n                                    Async\n                                getValidators\n                            \n                            \n                                    Async\n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(networkClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/consensus-api/consensus-api.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        networkClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delegate\n                        \n                    \n                \n            \n            \n                \n                        \n                    delegate(validator: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDelegatedAmounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDelegatedAmounts(delegatedAmountsDto: DelegatedAmountsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delegatedAmountsDto\n                                            \n                                                            DelegatedAmountsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getValidators\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidators()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdraw(validator: string, amount: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/consensus-api/consensus-api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validator\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                amount\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { DelegatedAmountsDto } from '@app/network-service/consensus/dto/consensus.dto'\n\n@Injectable()\nexport class ConsensusApiService {\n  constructor (\n    @Inject(networkService) private readonly networkClient: ClientProxy\n  ) { }\n\n  async getValidators (): Promise> {\n    return callMSFunction(this.networkClient, 'get_validators', {})\n  }\n\n  async getDelegatedAmounts (delegatedAmountsDto: DelegatedAmountsDto): Promise> {\n    return callMSFunction(this.networkClient, 'delegated_amounts', delegatedAmountsDto)\n  }\n\n  async delegate (validator: string): Promise {\n    return callMSFunction(this.networkClient, 'delegate', { validator })\n  }\n\n  async withdraw (validator: string, amount: string): Promise {\n    return callMSFunction(this.networkClient, 'withdraw', { validator, amount })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConsensusController.html":{"url":"controllers/ConsensusController.html","title":"controller - ConsensusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConsensusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/consensus/consensus.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                consensus\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delegate\n                            \n                            \n                                    \n                                getDelegatedAmounts\n                            \n                            \n                                    \n                                getValidators\n                            \n                            \n                                    \n                                withdraw\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delegate\n                        \n                    \n                \n            \n            \n                \n                        \n                    delegate(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('delegate')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/consensus/consensus.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getDelegatedAmounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDelegatedAmounts(delegatedAmountsDto: DelegatedAmountsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('delegated_amounts')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/consensus/consensus.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                delegatedAmountsDto\n                                            \n                                                            DelegatedAmountsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getValidators\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidators()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_validators')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/consensus/consensus.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        withdraw\n                        \n                    \n                \n            \n            \n                \n                        \n                    withdraw(data: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('withdraw')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/consensus/consensus.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ConsensusService } from '@app/network-service/consensus/consensus.service'\nimport { DelegatedAmountsDto } from '@app/network-service/consensus/dto/consensus.dto'\n\n@Controller('consensus')\nexport class ConsensusController {\n  constructor (private readonly consensusService: ConsensusService) { }\n\n  @MessagePattern('get_validators')\n  getValidators () {\n    return this.consensusService.getCachedValidatorsInfo()\n  }\n\n  @MessagePattern('delegated_amounts')\n  getDelegatedAmounts (@Body() delegatedAmountsDto: DelegatedAmountsDto) {\n    return this.consensusService.getDelegatedAmounts(delegatedAmountsDto)\n  }\n\n  @MessagePattern('delegate')\n  delegate (@Body() data: { validator: string }) {\n    return this.consensusService.delegate(data.validator)\n  }\n\n  @MessagePattern('withdraw')\n  withdraw (@Body() data: { validator: string, amount: string }) {\n    return this.consensusService.withdraw(data.validator, data.amount)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsensusModule.html":{"url":"modules/ConsensusModule.html","title":"module - ConsensusModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsensusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConsensusModule\n\n\n\ncluster_ConsensusModule_exports\n\n\n\ncluster_ConsensusModule_providers\n\n\n\n\nConsensusService \n\nConsensusService \n\n\n\nConsensusModule\n\nConsensusModule\n\nConsensusService  -->\n\nConsensusModule->ConsensusService \n\n\n\n\n\nConsensusService\n\nConsensusService\n\nConsensusModule -->\n\nConsensusService->ConsensusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-network-service/src/consensus/consensus.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsensusService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ConsensusController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsensusService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule } from '@nestjs/cache-manager'\nimport { ScheduleModule } from '@nestjs/schedule'\nimport { Module } from '@nestjs/common'\nimport { ConsensusController } from '@app/network-service/consensus/consensus.controller'\nimport { ConsensusService } from '@app/network-service/consensus/consensus.service'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport configuration from 'apps/charge-network-service/src/common/config/configuration'\nimport { HttpModule } from '@nestjs/axios'\nimport { EthersModule } from 'nestjs-ethers'\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    CacheModule.register({\n      ttl: 600000 // in milliseconds\n    }),\n    ConfigModule.forFeature(configuration),\n    HttpModule,\n    EthersModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      token: 'regular-node',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('rpcConfig')\n        const { rpc } = config\n        const { url, networkName, chainId } = rpc\n        return {\n          network: { name: networkName, chainId },\n          custom: url,\n          useDefaultProvider: false\n        }\n      }\n    })\n  ],\n  controllers: [ConsensusController],\n  providers: [ConsensusService],\n  exports: [ConsensusService]\n})\n\nexport class ConsensusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEthereumPaymentLinkDto.html":{"url":"classes/CreateEthereumPaymentLinkDto.html","title":"class - CreateEthereumPaymentLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEthereumPaymentLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                backendWalletId\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                            \n                                    \n                                tokenSymbol\n                            \n                            \n                                    \n                                    \n                                webhookUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        backendWalletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        webhookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/create-ethereum-payment-link.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsNumber, IsOptional, IsString, IsUrl } from 'class-validator'\n\nexport class CreateEthereumPaymentLinkDto {\n  @IsString()\n  @IsOptional()\n    ownerId: string\n\n  @IsString()\n    title: string\n\n  @IsString()\n    description: string\n\n  @IsNumber()\n    amount: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n\n  @IsString()\n    tokenSymbol: string\n\n  @IsString()\n  @IsOptional()\n    backendWalletId: string\n\n  @IsUrl()\n  @IsOptional()\n    webhookUrl: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOperatorUserDto.html":{"url":"classes/CreateOperatorUserDto.html","title":"class - CreateOperatorUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOperatorUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsOptional } from 'class-validator'\n\nexport class CreateOperatorUserDto {\n  @IsString()\n    firstName: string\n\n  @IsString()\n    lastName: string\n\n  @IsEmail()\n    email: string\n\n  @IsOptional()\n  @IsString()\n    name: string\n\n  @IsOptional()\n  @IsString()\n    description: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOperatorWalletDto.html":{"url":"classes/CreateOperatorWalletDto.html","title":"class - CreateOperatorWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOperatorWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/dto/create-operator-wallet.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                isActivated\n                            \n                            \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                smartWalletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActivated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-wallet.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-wallet.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        smartWalletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/operators/dto/create-operator-wallet.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEthereumAddress, IsBoolean, IsOptional } from 'class-validator'\n\nexport class CreateOperatorWalletDto {\n  @IsString()\n    ownerId: string\n\n  @IsEthereumAddress()\n    smartWalletAddress: string\n\n  @IsOptional()\n  @IsBoolean()\n    isActivated: boolean\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentLinkDto.html":{"url":"classes/CreatePaymentLinkDto.html","title":"class - CreatePaymentLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                backendWalletId\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                            \n                                    \n                                tokenSymbol\n                            \n                            \n                                    \n                                    \n                                webhookUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        backendWalletId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        webhookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/create-payment-link.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsNumber, IsOptional, IsString, IsUrl } from 'class-validator'\n\nexport class CreatePaymentLinkDto {\n  @IsString()\n  @IsOptional()\n    ownerId: string\n\n  @IsString()\n    title: string\n\n  @IsString()\n    description: string\n\n  @IsNumber()\n    amount: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n\n  @IsString()\n    tokenSymbol: string\n\n  @IsString()\n  @IsOptional()\n    backendWalletId: string\n\n  @IsUrl()\n  @IsOptional()\n    redirectUrl: string\n\n  @IsUrl()\n  @IsOptional()\n    webhookUrl: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                ownerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/projects/dto/create-project.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/projects/dto/create-project.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/projects/dto/create-project.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator'\nexport class CreateProjectDto {\n  @IsString()\n    ownerId: string\n\n  @IsString()\n    name: string\n\n  @IsString()\n    description: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateSecretDto.html":{"url":"interfaces/CreateSecretDto.html","title":"interface - CreateSecretDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateSecretDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/api-keys/dto/secret-key.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createLegacyAccount\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createLegacyAccount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createLegacyAccount:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateSecretDto {\n    projectId: string;\n    createLegacyAccount: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                auth0Id\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auth0Id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator'\n\nexport class CreateUserDto {\n  @IsString()\n    name: string\n\n  @IsEmail()\n    email: string\n\n  @IsString()\n    auth0Id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWebhookAddressesDto.html":{"url":"classes/CreateWebhookAddressesDto.html","title":"class - CreateWebhookAddressesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWebhookAddressesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/dto/create-webhook-addresses.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addresses\n                            \n                            \n                                    \n                                webhookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addresses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/create-webhook-addresses.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webhookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/create-webhook-addresses.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsString } from 'class-validator'\n\nexport class CreateWebhookAddressesDto {\n  @IsString()\n    webhookId: string\n\n  @IsEthereumAddress({ each: true })\n    addresses: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWebhookDto.html":{"url":"classes/CreateWebhookDto.html","title":"class - CreateWebhookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWebhookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/dto/create-webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                eventType\n                            \n                            \n                                    \n                                projectId\n                            \n                            \n                                    \n                                webhookUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        eventType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsIn(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/create-webhook.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/create-webhook.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webhookUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({require_tld: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/create-webhook.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsIn, IsString, IsUrl } from 'class-validator'\nimport { eventTypes } from '@app/notifications-service/webhooks/schemas/webhook.schema'\n\nexport class CreateWebhookDto {\n  @IsString()\n    projectId: string\n\n  @IsUrl({ require_tld: false })\n    webhookUrl: string\n\n  @IsString()\n  @IsIn(Object.values(eventTypes))\n    eventType: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DataLayerController.html":{"url":"controllers/DataLayerController.html","title":"controller - DataLayerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DataLayerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                handleTokenTransferWebhook\n                            \n                            \n                                    \n                                sponsoredTransactionsCount\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(userOp: BaseUserOp)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('record-user-op')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userOp\n                                            \n                                                            BaseUserOp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(data: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get-all-wallet-actions')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleTokenTransferWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTokenTransferWebhook(tokenTransferWebhookDto: TokenTransferWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('handle-token-transfer-webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenTransferWebhookDto\n                                            \n                                                            TokenTransferWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sponsoredTransactionsCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    sponsoredTransactionsCount(sponsorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('sponsored-transactions-count')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userOp: UserOp)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('update-user-op')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userOp\n                                            \n                                                            UserOp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { DataLayerService } from '@app/smart-wallets-service/data-layer/data-layer.service'\nimport { Body, Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { BaseUserOp, UserOp } from '@app/smart-wallets-service/data-layer/interfaces/user-op.interface'\nimport { TokenTransferWebhookDto } from '@app/smart-wallets-service/smart-wallets/dto/token-transfer-webhook.dto'\n\n@Controller()\nexport class DataLayerController {\n  constructor (private readonly dataLayerService: DataLayerService) { }\n\n  @MessagePattern('record-user-op')\n  create (@Body() userOp: BaseUserOp) {\n    return this.dataLayerService.recordUserOp(userOp)\n  }\n\n  @MessagePattern('update-user-op')\n  update (@Body() userOp: UserOp) {\n    return this.dataLayerService.updateUserOp(userOp)\n  }\n\n  @MessagePattern('get-all-wallet-actions')\n  get (@Body() data: any) {\n    return this.dataLayerService.getPaginatedWalletActions(data.page, data.walletAddress, data.limit, data.tokenAddress)\n  }\n\n  @MessagePattern('handle-token-transfer-webhook')\n  handleTokenTransferWebhook (tokenTransferWebhookDto: TokenTransferWebhookDto) {\n    return this.dataLayerService.handleTokenTransferWebhook(\n      tokenTransferWebhookDto\n    )\n  }\n\n  @MessagePattern('sponsored-transactions-count')\n  sponsoredTransactionsCount (sponsorId: string) {\n    return this.dataLayerService.findSponsoredTransactionsCount(\n      sponsorId\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataLayerModule.html":{"url":"modules/DataLayerModule.html","title":"module - DataLayerModule","body":"\n                   \n\n\n\n\n    Modules\n    DataLayerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataLayerModule\n\n\n\ncluster_DataLayerModule_imports\n\n\n\ncluster_DataLayerModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nDataLayerModule\n\nDataLayerModule\n\nDataLayerModule -->\n\nDatabaseModule->DataLayerModule\n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nDataLayerModule -->\n\nAnalyticsService->DataLayerModule\n\n\n\n\n\nDataLayerService\n\nDataLayerService\n\nDataLayerModule -->\n\nDataLayerService->DataLayerModule\n\n\n\n\n\nSmartWalletsAAEventsService\n\nSmartWalletsAAEventsService\n\nDataLayerModule -->\n\nSmartWalletsAAEventsService->DataLayerModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nDataLayerModule -->\n\nTokenService->DataLayerModule\n\n\n\n\n\nTradeService\n\nTradeService\n\nDataLayerModule -->\n\nTradeService->DataLayerModule\n\n\n\n\n\nUserOpFactory\n\nUserOpFactory\n\nDataLayerModule -->\n\nUserOpFactory->DataLayerModule\n\n\n\n\n\nUserOpParser\n\nUserOpParser\n\nDataLayerModule -->\n\nUserOpParser->DataLayerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/data-layer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalyticsService\n                        \n                        \n                            DataLayerService\n                        \n                        \n                            SmartWalletsAAEventsService\n                        \n                        \n                            TokenService\n                        \n                        \n                            TradeService\n                        \n                        \n                            UserOpFactory\n                        \n                        \n                            UserOpParser\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DataLayerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DataLayerController } from '@app/smart-wallets-service/data-layer/data-layer.controller'\nimport { DataLayerService } from '@app/smart-wallets-service/data-layer/data-layer.service'\nimport { dataLayerProviders } from '@app/smart-wallets-service/data-layer/data-layer.providers'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport config from 'apps/charge-smart-wallets-service/src/data-layer/config/config'\nimport { DatabaseModule } from '@app/common'\nimport { UserOpFactory } from '@app/smart-wallets-service/common/services/user-op-factory.service'\nimport { UserOpParser } from '@app/smart-wallets-service/common/services/user-op-parser.service'\nimport { TokenService } from '@app/smart-wallets-service/common/services/token.service'\nimport { EthersModule } from 'nestjs-ethers'\nimport { CentrifugeClientProvider } from '@app/common/centrifuge/centrifugeClient.provider'\nimport { HttpModule } from '@nestjs/axios'\nimport { SmartWalletsAAEventsService } from '@app/smart-wallets-service/smart-wallets/smart-wallets-aa-events.service'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { accountsService, apiService } from '@app/common/constants/microservices.constants'\nimport { AnalyticsService } from '@app/common/services/analytics.service'\nimport TradeService from '@app/common/services/trade.service'\n\n@Module({\n  imports: [\n    DatabaseModule,\n    ConfigModule.forFeature(config),\n    HttpModule,\n    EthersModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      token: 'regular-node',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('rpcConfig')\n        const { rpc } = config\n        const { url, networkName, chainId } = rpc\n        return {\n          network: { name: networkName, chainId },\n          custom: url,\n          useDefaultProvider: false\n        }\n      }\n    }),\n    ClientsModule.register([\n      {\n        name: accountsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.ACCOUNTS_HOST,\n          port: parseInt(process.env.ACCOUNTS_TCP_PORT)\n        }\n      }\n    ]),\n    ClientsModule.register([\n      {\n        name: apiService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.API_HOST,\n          port: parseInt(process.env.API_TCP_PORT)\n        }\n      }\n    ])\n  ],\n  controllers: [DataLayerController],\n  providers: [\n    DataLayerService,\n    ...dataLayerProviders,\n    UserOpFactory,\n    UserOpParser,\n    TokenService,\n    SmartWalletsAAEventsService,\n    CentrifugeClientProvider,\n    AnalyticsService,\n    TradeService\n  ]\n})\n\nexport class DataLayerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataLayerService.html":{"url":"injectables/DataLayerService.html","title":"injectable - DataLayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataLayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWalletActionFromUserOp\n                            \n                            \n                                    Async\n                                findSponsoredTransactionsCount\n                            \n                            \n                                    Async\n                                getOperatorByApiKey\n                            \n                            \n                                    Async\n                                getPaginatedWalletActions\n                            \n                            \n                                    Async\n                                handleTokenTransferWebhook\n                            \n                            \n                                    Async\n                                handleUserOpAndWalletActionOfOperatorToSendAnalyticsEvent\n                            \n                            \n                                    Async\n                                recordUserOp\n                            \n                            \n                                    Async\n                                updateUserOp\n                            \n                            \n                                    Async\n                                updateWalletAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userOpModel: Model, paginatedWalletActionModel: PaginateModel, apiClient: ClientProxy, accountsClient: ClientProxy, userOpFactory: UserOpFactory, tokenService: TokenService, smartWalletsAAEventsService: SmartWalletsAAEventsService, analyticsService: AnalyticsService, tradeService: TradeService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userOpModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paginatedWalletActionModel\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userOpFactory\n                                                  \n                                                        \n                                                                        UserOpFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartWalletsAAEventsService\n                                                  \n                                                        \n                                                                        SmartWalletsAAEventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        AnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tradeService\n                                                  \n                                                        \n                                                                        TradeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWalletActionFromUserOp\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWalletActionFromUserOp(parsedUserOp: UserOp)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                            UserOp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findSponsoredTransactionsCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findSponsoredTransactionsCount(sponsorId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOperatorByApiKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOperatorByApiKey(apiKey)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:265\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                apiKey\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaginatedWalletActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaginatedWalletActions(pageNumber: number, walletAddress, limit, tokenAddress)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                walletAddress\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenAddress\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleTokenTransferWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTokenTransferWebhook(tokenTransferWebhookDto: TokenTransferWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenTransferWebhookDto\n                                            \n                                                            TokenTransferWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleUserOpAndWalletActionOfOperatorToSendAnalyticsEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUserOpAndWalletActionOfOperatorToSendAnalyticsEvent(body)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        recordUserOp\n                        \n                    \n                \n            \n            \n                \n                        \n                    recordUserOp(baseUserOp: BaseUserOp)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                baseUserOp\n                                            \n                                                            BaseUserOp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUserOp\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUserOp(body: UserOp)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            UserOp\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWalletAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWalletAction(userOp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userOp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DataLayerService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/data-layer/data-layer.service.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Model, PaginateModel } from 'mongoose'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { userOpString, walletActionString } from '@app/smart-wallets-service/data-layer/data-layer.constants'\nimport { BaseUserOp, UserOp } from '@app/smart-wallets-service/data-layer/interfaces/user-op.interface'\nimport { WalletActionDocument } from '@app/smart-wallets-service/data-layer/schemas/wallet-action.schema'\nimport { UserOpFactory } from '@app/smart-wallets-service/common/services/user-op-factory.service'\nimport {\n  confirmedUserOpToWalletAction,\n  tokenReceiveToWalletAction,\n  parsedUserOpToWalletAction\n} from '@app/smart-wallets-service/common/utils/wallet-action-factory'\nimport { get, has, isNil } from 'lodash'\nimport { TokenService } from '@app/smart-wallets-service/common/services/token.service'\nimport { TokenTransferWebhookDto } from '@app/smart-wallets-service/smart-wallets/dto/token-transfer-webhook.dto'\nimport { SmartWalletsAAEventsService } from '@app/smart-wallets-service/smart-wallets/smart-wallets-aa-events.service'\nimport { WalletActionInterface } from '@app/smart-wallets-service/data-layer/interfaces/wallet-action.interface'\nimport { decodePaymasterAndData } from '@app/smart-wallets-service/common/utils/helper-functions'\nimport { AnalyticsService } from '@app/common/services/analytics.service'\nimport { formatUnits } from 'nestjs-ethers'\nimport { accountsService, apiService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport TradeService from '@app/common/services/trade.service'\nimport { websocketEvents } from '@app/smart-wallets-service/smart-wallets/constants/smart-wallets.constants'\n@Injectable()\nexport class DataLayerService {\n  private readonly logger = new Logger(DataLayerService.name)\n\n  constructor (\n    @Inject(userOpString)\n    private userOpModel: Model,\n    @Inject(walletActionString)\n    private paginatedWalletActionModel: PaginateModel,\n    @Inject(apiService) private readonly apiClient: ClientProxy,\n    @Inject(accountsService) private readonly accountsClient: ClientProxy,\n    private userOpFactory: UserOpFactory,\n    private tokenService: TokenService,\n    private smartWalletsAAEventsService: SmartWalletsAAEventsService,\n    private analyticsService: AnalyticsService,\n    private tradeService: TradeService\n  ) { }\n\n  async recordUserOp (baseUserOp: BaseUserOp) {\n    try {\n      if (baseUserOp.paymasterAndData !== '0x') {\n        const paymasterAddressAndSponsorId = decodePaymasterAndData(baseUserOp.paymasterAndData)\n        baseUserOp.paymaster = paymasterAddressAndSponsorId.paymasterAddress\n        baseUserOp.sponsorId = paymasterAddressAndSponsorId.sponsorId\n      }\n      const userOp = await this.userOpFactory.createUserOp(baseUserOp)\n      const response = await this.userOpModel.create(userOp) as UserOp\n      await this.smartWalletsAAEventsService.subscribeUserOpHash(response.userOpHash, response.sender)\n      await this.smartWalletsAAEventsService.publishUserOp({\n        eventName: websocketEvents.TRANSACTION_STARTED,\n        eventData: {\n          userOpHash: response.userOpHash,\n          sender: response.sender\n        }\n      })\n      const walletAction = await this.createWalletActionFromUserOp(userOp)\n      this.handleUserOpAndWalletActionOfOperatorToSendAnalyticsEvent({ userOp, walletAction })\n      if (walletAction) {\n        this.smartWalletsAAEventsService.publishWalletAction(walletAction.walletAddress, walletAction)\n      }\n\n      return response\n    } catch (error) {\n      this.logger.error('Error recording user op:', error)\n    }\n  }\n\n  async updateUserOp (body: UserOp) {\n    try {\n      const existingUserOp = await this.userOpModel.findOne({ userOpHash: body.userOpHash })\n      if (isNil(existingUserOp)) {\n        return 'No record found with the provided userOpHash'\n      }\n      const updatedUserOp = await this.userOpModel.findOneAndUpdate({ userOpHash: body.userOpHash }, body, { new: true })\n      const eventData = {\n        userOpHash: updatedUserOp.userOpHash,\n        sender: updatedUserOp.sender,\n        txHash: updatedUserOp.txHash\n      }\n      if (updatedUserOp.success) {\n        await this.smartWalletsAAEventsService.publishUserOp({\n          eventName: websocketEvents.TRANSACTION_SUCCEEDED,\n          eventData\n        })\n      } else {\n        await this.smartWalletsAAEventsService.publishUserOp({\n          eventName: websocketEvents.TRANSACTION_FAILED,\n          eventData\n        })\n      }\n      await this.smartWalletsAAEventsService.unsubscribeUserOpHash(updatedUserOp.userOpHash, updatedUserOp.sender)\n      this.updateWalletAction(updatedUserOp)\n\n      return updatedUserOp\n    } catch (error) {\n      this.logger.error('Error updating user op:', error)\n    }\n  }\n\n  async createWalletActionFromUserOp (parsedUserOp: UserOp) {\n    try {\n      const walletAction = await parsedUserOpToWalletAction(parsedUserOp, this.tokenService)\n      await this.paginatedWalletActionModel.create(walletAction)\n      return walletAction\n    } catch (error) {\n      throw new Error(`Failed to create wallet action from user operation: ${error.message}`)\n    }\n  }\n\n  async updateWalletAction (userOp: any) {\n    try {\n      const walletAction = confirmedUserOpToWalletAction(userOp)\n      const updatedWalletAction = await this.paginatedWalletActionModel.findOneAndUpdate({ userOpHash: walletAction.userOpHash }, walletAction, { new: true }).lean() as WalletActionInterface\n      if (updatedWalletAction) {\n        this.smartWalletsAAEventsService.publishWalletAction(updatedWalletAction.walletAddress, updatedWalletAction)\n      }\n      return updatedWalletAction\n    } catch (error) {\n      this.logger.error('Error updating wallet action:', error)\n    }\n  }\n\n  async handleTokenTransferWebhook (\n    tokenTransferWebhookDto: TokenTransferWebhookDto\n  ) {\n    try {\n      const {\n        direction\n      } = tokenTransferWebhookDto\n\n      if (direction === 'incoming') {\n        this.logger.debug('Handling token transfer webhook...')\n        const {\n          from,\n          to,\n          txHash,\n          value,\n          tokenType,\n          tokenAddress,\n          tokenName,\n          tokenSymbol,\n          tokenDecimals,\n          blockNumber,\n          tokenId\n        } = tokenTransferWebhookDto\n        this.logger.debug(`TX hash: ${txHash}, direction: ${direction}`)\n\n        const tokenDetails = {\n          name: tokenName,\n          symbol: tokenSymbol,\n          address: tokenAddress,\n          decimals: tokenDecimals\n        }\n\n        const walletAction = tokenReceiveToWalletAction(\n          from,\n          to.toLowerCase(),\n          txHash,\n          value,\n          tokenType,\n          tokenDetails,\n          blockNumber,\n          tokenId\n        )\n\n        this.logger.debug('Creating a new receive wallet action...')\n        this.smartWalletsAAEventsService.publishWalletAction(walletAction.walletAddress, walletAction)\n        return this.paginatedWalletActionModel.create(walletAction)\n      }\n\n      this.logger.debug(\n        'Not creating a new receive wallet action ' +\n        'since the direction is not incoming...'\n      )\n\n      return true\n    } catch (error) {\n      this.logger.error('Error handling token transfer webhook:', error)\n      throw error\n    }\n  }\n\n  async getPaginatedWalletActions (pageNumber: number, walletAddress, limit, tokenAddress) {\n    let query\n    if (tokenAddress) {\n      const searchObject = {\n        $elemMatch: {\n          address: tokenAddress.toLowerCase()\n        }\n      }\n\n      query = {\n        walletAddress,\n        $or: [\n          {\n            sent: searchObject\n          },\n          {\n            received: searchObject\n          }\n        ]\n      }\n    } else {\n      query =\n      {\n        walletAddress\n      }\n    }\n    try {\n      const options = {\n        page: pageNumber || 1,\n        limit: limit || 20,\n        sort: { updatedAt: -1 }\n      }\n\n      const result = await this.paginatedWalletActionModel.paginate(query, options)\n\n      return result\n    } catch (error) {\n      this.logger.error('Error fetching paginated wallet actions:', error)\n      throw error\n    }\n  }\n\n  async findSponsoredTransactionsCount (sponsorId: string): Promise {\n    return this.userOpModel.countDocuments({ sponsorId: { $eq: sponsorId } })\n  }\n\n  async handleUserOpAndWalletActionOfOperatorToSendAnalyticsEvent (body) {\n    try {\n      const user = await this.getOperatorByApiKey(body.userOp.apiKey)\n      if (!get(user, 'auth0Id')) {\n        return\n      }\n      if (get(body, 'walletAction.name') === 'tokenTransfer') {\n        const [sent] = get(body, 'walletAction.sent', [])\n        if (has(sent, 'address') && has(sent, 'value') && has(sent, 'decimals')) {\n          const { address, value, decimals } = sent\n          const tokenPriceInUsd = await this.tradeService.getTokenPrice(address)\n          const amount = formatUnits(value, decimals)\n          const amountUsd = Number(tokenPriceInUsd) * Number(amount)\n          const event = {\n            amount,\n            amountUsd,\n            token: body?.walletAction.sent[0].symbol,\n            apiKey: body?.userOp?.apiKey,\n            email: user?.email ? user.email : 'empty email'\n          }\n          try {\n            this.analyticsService.trackEvent('Transaction (UserOp)', { ...event }, { user_id: user.auth0Id })\n          } catch (error) {\n            this.logger.error('Error tracking event:', error)\n          }\n        }\n      }\n    } catch (error) {\n      this.logger.error('Error handling user op and wallet action for operators analytics event:', error)\n    }\n  }\n\n  async getOperatorByApiKey (apiKey) {\n    try {\n      const projectId = await callMSFunction(this.apiClient, 'get_project_id_by_public_key', apiKey)\n      const project = await callMSFunction(this.accountsClient, 'find-one-project', projectId)\n      const user = await callMSFunction(this.accountsClient, 'find-one-user', project.ownerId.toString())\n      const operator = await callMSFunction(this.accountsClient, 'find-operator-by-owner-id', user._id)\n      if (!operator) {\n        this.logger.log('Operator didnt exists')\n        return false\n      }\n      return user\n    } catch (error) {\n      this.logger.error(error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/common/src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { databaseProviders } from '@app/common/database/database.providers'\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders]\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodeResult.html":{"url":"interfaces/DecodeResult.html","title":"interface - DecodeResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodeResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeCalldata.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decoded\n                                        \n                                \n                                \n                                        \n                                            fragment\n                                        \n                                \n                                \n                                        \n                                            sigHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decoded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decoded:         Decoded\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Decoded\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fragment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fragment:     Fragment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Fragment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sigHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sigHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Fragment, Interface } from '@ethersproject/abi'\nimport assert from 'assert'\n\nexport interface Decoded extends ReadonlyArray { }\n\nexport interface DecodeResult {\n  decoded: Decoded;\n  fragment: Fragment;\n  sigHash: string;\n}\n\nexport function decodeCalldata (\n  iface: Interface,\n  calldata: string\n): DecodeResult | undefined {\n  const abi = iface.fragments\n\n  let decoded: ReadonlyArray | undefined\n  let fragment: Fragment | undefined\n\n  for (const frag of abi) {\n    try {\n      decoded = iface.decodeFunctionData(frag.name, calldata)\n      const encoded = iface.encodeFunctionData(frag.name, decoded)\n      assert(\n        encoded === calldata,\n        'Ignore functions that do not fully encode data'\n      )\n      fragment = frag\n    } catch (e) {\n      // catch error here to avoid error throw,\n      // as we want to check which fragment decodes successfully and save it\n    }\n  }\n\n  if (decoded && fragment) {\n    return { decoded, fragment, sigHash: iface.getSighash(fragment) }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Decoded.html":{"url":"interfaces/Decoded.html","title":"interface - Decoded","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Decoded\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeCalldata.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ReadonlyArray\n            \n\n\n\n\n    \n\n\n    \n        import { Fragment, Interface } from '@ethersproject/abi'\nimport assert from 'assert'\n\nexport interface Decoded extends ReadonlyArray { }\n\nexport interface DecodeResult {\n  decoded: Decoded;\n  fragment: Fragment;\n  sigHash: string;\n}\n\nexport function decodeCalldata (\n  iface: Interface,\n  calldata: string\n): DecodeResult | undefined {\n  const abi = iface.fragments\n\n  let decoded: ReadonlyArray | undefined\n  let fragment: Fragment | undefined\n\n  for (const frag of abi) {\n    try {\n      decoded = iface.decodeFunctionData(frag.name, calldata)\n      const encoded = iface.encodeFunctionData(frag.name, decoded)\n      assert(\n        encoded === calldata,\n        'Ignore functions that do not fully encode data'\n      )\n      fragment = frag\n    } catch (e) {\n      // catch error here to avoid error throw,\n      // as we want to check which fragment decodes successfully and save it\n    }\n  }\n\n  if (decoded && fragment) {\n    return { decoded, fragment, sigHash: iface.getSighash(fragment) }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedEventResultWithArgNames.html":{"url":"interfaces/DecodedEventResultWithArgNames.html","title":"interface - DecodedEventResultWithArgNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedEventResultWithArgNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeEvent.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractDecodedEventResult\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            args\n                                        \n                                \n                                \n                                        \n                                            hasArgumentNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasArgumentNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasArgumentNames:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  EventFragment,\n  FormatTypes,\n  Interface,\n  ParamType\n} from '@ethersproject/abi'\nimport { version } from '@ethersproject/abi/lib/_version'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Logger } from '@ethersproject/logger'\n\nimport { combinations as generateCombinations } from './combinations'\n\nconst logger = new Logger(version)\n\nexport interface EventProps {\n  topics: string[];\n  data: string;\n}\n\ninterface AbstractDecodedEventResult {\n  eventFragment: EventFragment;\n  hasArgumentNames: boolean;\n  signature: string;\n  fullSignature: string;\n}\n\nexport interface DecodedEventResultWithArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: true;\n  args: Record;\n}\n\nexport interface DecodedEventResultWithoutArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: false;\n  args: ReadonlyArray;\n}\n\nexport type DecodedEventResult =\n  | DecodedEventResultWithArgNames\n  | DecodedEventResultWithoutArgNames;\n\nexport function decodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  try {\n    const decoded = iface.parseLog(eventProps)\n    /**\n     * Ethers under the hood converts EventFragment to object-like form without format function, so we rehydrate it here.\n     */\n    const eventFragment = EventFragment.fromObject({\n      ...decoded.eventFragment,\n      _isFragment: false // Otherwise this function noops\n    })\n    const hasArgumentNames = doesContainNamedKeys(decoded.args)\n    const decodedEventResult = {\n      args: hasArgumentNames ? omitNonNamedKeys(decoded.args) : decoded.args,\n      eventFragment,\n      hasArgumentNames,\n      signature: decoded.signature,\n      fullSignature: eventFragment.format(FormatTypes.full)\n    }\n    return decodedEventResult as DecodedEventResult\n  } catch (e: any) {\n    switch (e.reason) {\n      case 'no matching event':\n        throw e\n      case 'data out-of-bounds':\n        // At this point we know that we have a matching topic, but the number of indexed args is incorrect\n        return tryToDecodeEvent(iface, eventProps)\n      default:\n        throw e\n    }\n  }\n}\n\ntype ChangedParamType = Omit;\n\n/**\n * We assume that we don't have partial indexing information.\n * This may not be true, but it's an edge case and it's PITA to handle.\n */\nexport function tryToDecodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  const indexedArgsCount = eventProps.topics.length - 1\n  const topichash = eventProps.topics[0]\n\n  for (const name in iface.events) {\n    if (topichash === iface.getEventTopic(name)) {\n      const event = iface.getEvent(name)\n      const inputsCombinations = combinationsMap(\n        event.inputs,\n        indexedArgsCount,\n        (input: ParamType): ChangedParamType => ({\n          arrayChildren: input.arrayChildren,\n          components: input.components,\n          name: input.name,\n          type: input.type,\n          arrayLength: input.arrayLength,\n          baseType: input.baseType,\n          indexed: true\n        })\n      )\n\n      let error: unknown\n      for (const inputs of inputsCombinations) {\n        const newEvent = EventFragment.fromObject({\n          inputs,\n          anonymous: event.anonymous,\n          type: event.type,\n          name: event.name\n        })\n\n        iface.events[name] = newEvent\n\n        try {\n          const args = iface.decodeEventLog(\n            newEvent,\n            eventProps.data,\n            eventProps.topics\n          )\n\n          return {\n            args,\n            hasArgumentNames: false,\n            eventFragment: newEvent,\n            signature: newEvent.format(FormatTypes.sighash),\n            fullSignature: newEvent.format(FormatTypes.full)\n          }\n        } catch (err) {\n          error = err\n          // We expect this to fail for some combinations. It's only a problem if it fails for all combinations.\n        }\n      }\n\n      if (error) {\n        throw error\n      }\n    }\n  }\n\n  return logger.throwArgumentError('no matching event', 'topichash', topichash)\n}\n\n// @internal\nexport function omitNonNamedKeys (\n  object: T\n): Record | T {\n  const obj: Record = {}\n  for (const [key, val] of Object.entries(object)) {\n    if (isNaN(parseInt(key))) {\n      obj[key] = val\n    }\n  }\n  return obj\n}\n\n// @internal\nexport function doesContainNamedKeys (object: T): boolean {\n  return Object.keys(object).some((key) => isNaN(parseInt(key)))\n}\n\nfunction combinationsMap (\n  inputs: ParamType[],\n  indexedArgsCount: number,\n  change: (param: ParamType) => ChangedParamType\n): ChangedParamType[][] {\n  const combinations = generateCombinations(inputs.length, indexedArgsCount)\n  return combinations.map((combination) =>\n    inputs.map((input, idx) =>\n      combination.includes(idx) ? change(input) : input\n    )\n  )\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecodedEventResultWithoutArgNames.html":{"url":"interfaces/DecodedEventResultWithoutArgNames.html","title":"interface - DecodedEventResultWithoutArgNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecodedEventResultWithoutArgNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeEvent.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractDecodedEventResult\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            args\n                                        \n                                \n                                \n                                        \n                                            hasArgumentNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        args\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        args:     ReadonlyArray\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReadonlyArray\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasArgumentNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasArgumentNames:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  EventFragment,\n  FormatTypes,\n  Interface,\n  ParamType\n} from '@ethersproject/abi'\nimport { version } from '@ethersproject/abi/lib/_version'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Logger } from '@ethersproject/logger'\n\nimport { combinations as generateCombinations } from './combinations'\n\nconst logger = new Logger(version)\n\nexport interface EventProps {\n  topics: string[];\n  data: string;\n}\n\ninterface AbstractDecodedEventResult {\n  eventFragment: EventFragment;\n  hasArgumentNames: boolean;\n  signature: string;\n  fullSignature: string;\n}\n\nexport interface DecodedEventResultWithArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: true;\n  args: Record;\n}\n\nexport interface DecodedEventResultWithoutArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: false;\n  args: ReadonlyArray;\n}\n\nexport type DecodedEventResult =\n  | DecodedEventResultWithArgNames\n  | DecodedEventResultWithoutArgNames;\n\nexport function decodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  try {\n    const decoded = iface.parseLog(eventProps)\n    /**\n     * Ethers under the hood converts EventFragment to object-like form without format function, so we rehydrate it here.\n     */\n    const eventFragment = EventFragment.fromObject({\n      ...decoded.eventFragment,\n      _isFragment: false // Otherwise this function noops\n    })\n    const hasArgumentNames = doesContainNamedKeys(decoded.args)\n    const decodedEventResult = {\n      args: hasArgumentNames ? omitNonNamedKeys(decoded.args) : decoded.args,\n      eventFragment,\n      hasArgumentNames,\n      signature: decoded.signature,\n      fullSignature: eventFragment.format(FormatTypes.full)\n    }\n    return decodedEventResult as DecodedEventResult\n  } catch (e: any) {\n    switch (e.reason) {\n      case 'no matching event':\n        throw e\n      case 'data out-of-bounds':\n        // At this point we know that we have a matching topic, but the number of indexed args is incorrect\n        return tryToDecodeEvent(iface, eventProps)\n      default:\n        throw e\n    }\n  }\n}\n\ntype ChangedParamType = Omit;\n\n/**\n * We assume that we don't have partial indexing information.\n * This may not be true, but it's an edge case and it's PITA to handle.\n */\nexport function tryToDecodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  const indexedArgsCount = eventProps.topics.length - 1\n  const topichash = eventProps.topics[0]\n\n  for (const name in iface.events) {\n    if (topichash === iface.getEventTopic(name)) {\n      const event = iface.getEvent(name)\n      const inputsCombinations = combinationsMap(\n        event.inputs,\n        indexedArgsCount,\n        (input: ParamType): ChangedParamType => ({\n          arrayChildren: input.arrayChildren,\n          components: input.components,\n          name: input.name,\n          type: input.type,\n          arrayLength: input.arrayLength,\n          baseType: input.baseType,\n          indexed: true\n        })\n      )\n\n      let error: unknown\n      for (const inputs of inputsCombinations) {\n        const newEvent = EventFragment.fromObject({\n          inputs,\n          anonymous: event.anonymous,\n          type: event.type,\n          name: event.name\n        })\n\n        iface.events[name] = newEvent\n\n        try {\n          const args = iface.decodeEventLog(\n            newEvent,\n            eventProps.data,\n            eventProps.topics\n          )\n\n          return {\n            args,\n            hasArgumentNames: false,\n            eventFragment: newEvent,\n            signature: newEvent.format(FormatTypes.sighash),\n            fullSignature: newEvent.format(FormatTypes.full)\n          }\n        } catch (err) {\n          error = err\n          // We expect this to fail for some combinations. It's only a problem if it fails for all combinations.\n        }\n      }\n\n      if (error) {\n        throw error\n      }\n    }\n  }\n\n  return logger.throwArgumentError('no matching event', 'topichash', topichash)\n}\n\n// @internal\nexport function omitNonNamedKeys (\n  object: T\n): Record | T {\n  const obj: Record = {}\n  for (const [key, val] of Object.entries(object)) {\n    if (isNaN(parseInt(key))) {\n      obj[key] = val\n    }\n  }\n  return obj\n}\n\n// @internal\nexport function doesContainNamedKeys (object: T): boolean {\n  return Object.keys(object).some((key) => isNaN(parseInt(key)))\n}\n\nfunction combinationsMap (\n  inputs: ParamType[],\n  indexedArgsCount: number,\n  change: (param: ParamType) => ChangedParamType\n): ChangedParamType[][] {\n  const combinations = generateCombinations(inputs.length, indexedArgsCount)\n  return combinations.map((combination) =>\n    inputs.map((input, idx) =>\n      combination.includes(idx) ? change(input) : input\n    )\n  )\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegatedAmountsDto.html":{"url":"classes/DelegatedAmountsDto.html","title":"class - DelegatedAmountsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegatedAmountsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/consensus/dto/consensus.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delegators\n                            \n                            \n                                    \n                                validator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delegators\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/consensus/dto/consensus.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/consensus/dto/consensus.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress } from 'class-validator'\n\nexport class DelegatedAmountsDto {\n  @IsEthereumAddress()\n    validator: string\n\n  @IsEthereumAddress({ each: true })\n    delegators: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ERC20EventsScannerService.html":{"url":"injectables/ERC20EventsScannerService.html","title":"injectable - ERC20EventsScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ERC20EventsScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/erc20-events-scanner.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EventsScannerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Async\n                                getTokenInfo\n                            \n                            \n                                    \n                                    Async\n                                processBlocks\n                            \n                            \n                                    \n                                    Async\n                                processEvent\n                            \n                            \n                                    Async\n                                fetchLogs\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, scannerStatusService: ScannerStatusService, logsFilter: LogFilter, rpcProvider: BaseProvider, ethersContract: EthersContract, webhooksService: WebhooksService, gasService: GasService, cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/events-scanner/erc20-events-scanner.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scannerStatusService\n                                                  \n                                                        \n                                                                        ScannerStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsFilter\n                                                  \n                                                        \n                                                                        LogFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpcProvider\n                                                  \n                                                        \n                                                                    BaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ethersContract\n                                                  \n                                                        \n                                                                    EthersContract\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhooksService\n                                                  \n                                                        \n                                                                        WebhooksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gasService\n                                                  \n                                                        \n                                                                        GasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Async\n                        getTokenInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokenInfo(tokenAddress: string, abi: any, tokenType: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('ERC20EventsScannerService::GetTokenInfo')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/events-scanner/erc20-events-scanner.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                abi\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlocks(fromBlock: number, toBlock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('ERC20EventsScannerService::ProcessBlocks')\n                \n            \n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(log: Log)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('ERC20EventsScannerService::ProcessEvent')\n                \n            \n\n                    \n                        \n                            Inherited from         EventsScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         EventsScannerService:55\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                log\n                                            \n                                                        Log\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchLogs(fromBlock: number, toBlock: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EventsScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         EventsScannerService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TokenType } from '@app/notifications-service/common/constants/token-types'\nimport { logPerformance } from '@app/notifications-service/common/decorators/log-performance.decorator'\nimport { getTokenTypeAbi, getTransferEventTokenType, parseLog } from '@app/notifications-service/common/utils/helper-functions'\nimport { ERC20LogsFilterString, ERC20ScannerStatusServiceString } from '@app/notifications-service/events-scanner/events-scanner.constants'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { BigNumber, BaseProvider, InjectEthersProvider, Log, Contract, EthersContract, InjectContractProvider, formatUnits } from 'nestjs-ethers'\nimport { TokenEventData } from '@app/notifications-service/common/interfaces/event-data.interface'\nimport { WebhooksService } from '@app/notifications-service/webhooks/webhooks.service'\nimport { TokenInfo } from '@app/notifications-service/events-scanner/interfaces/token-info-cache'\nimport { LogFilter } from '@app/notifications-service/events-scanner/interfaces/logs-filter'\nimport { EventsScannerService } from './events-scanner.service'\nimport { ScannerStatusService } from '@app/notifications-service/common/scanner-status.service'\nimport { GasService } from '@app/common/services/gas.service'\nimport { CACHE_MANAGER } from '@nestjs/cache-manager'\nimport { Cache } from 'cache-manager'\n\n@Injectable()\nexport class ERC20EventsScannerService extends EventsScannerService {\n  constructor (\n    configService: ConfigService,\n    @Inject(ERC20ScannerStatusServiceString)\n    scannerStatusService: ScannerStatusService,\n    @Inject(ERC20LogsFilterString)\n    logsFilter: LogFilter,\n    @InjectEthersProvider('regular-node')\n    rpcProvider: BaseProvider,\n    @InjectContractProvider('regular-node')\n    private readonly ethersContract: EthersContract,\n    private webhooksService: WebhooksService,\n    private gasService: GasService,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache\n  ) {\n    super(configService, scannerStatusService, logsFilter, rpcProvider, new Logger(ERC20EventsScannerService.name))\n  }\n\n  @logPerformance('ERC20EventsScannerService::ProcessBlocks')\n  async processBlocks (fromBlock: number, toBlock: number) {\n    if (fromBlock > toBlock) return\n\n    const logs = await this.fetchLogs(fromBlock, toBlock)\n\n    for (const log of logs) {\n      try {\n        await this.processEvent(log)\n      } catch (error) {\n        this.logger.error('Failed to process log:')\n        this.logger.error({ log })\n        this.logger.error(error)\n      }\n    }\n  }\n\n  @logPerformance('ERC20EventsScannerService::ProcessEvent')\n  async processEvent (log: Log) {\n    const tokenType = getTransferEventTokenType(log)\n    const abi = getTokenTypeAbi(tokenType)\n\n    const parsedLog = parseLog(log, abi)\n    const fromAddress = parsedLog.args[0]\n    const toAddress = parsedLog.args[1]\n\n    const tokenAddress = parsedLog.address\n\n    let name: string\n    let symbol: string\n    let decimals: number\n\n    try {\n      [name, symbol, decimals] = await this.getTokenInfo(tokenAddress, abi, tokenType)\n    } catch (err) {\n      this.logger.error(`Unable to get token info at address ${tokenAddress}: \\n${err}`)\n    }\n\n    const gasValues = await this.gasService.fetchTransactionGasCosts(\n      parsedLog.transactionHash,\n      this.rpcProvider\n    )\n\n    const eventData: TokenEventData = {\n      to: toAddress,\n      from: fromAddress,\n      txHash: parsedLog.transactionHash,\n      tokenAddress: parsedLog.address,\n      blockNumber: log.blockNumber,\n      blockHash: log.blockHash,\n      tokenType: tokenType?.valueOf(),\n      tokenName: name,\n      tokenSymbol: symbol,\n      value: null,\n      tokenDecimals: null,\n      tokenId: null,\n      valueEth: null,\n      isInternalTransaction: false,\n      ...gasValues\n    }\n\n    if (tokenType === TokenType.ERC20) {\n      eventData.value = BigNumber.from(parsedLog.args[2]).toString()\n      eventData.tokenDecimals = decimals\n      eventData.valueEth = formatUnits(eventData.value, eventData.tokenDecimals)\n    } else {\n      eventData.tokenId = parseInt(parsedLog.args.tokenId?._hex)\n    }\n\n    this.webhooksService.processWebhookTokenEvents(eventData).catch((error) => {\n      this.logger.error(`Failed to process webhook events for event data :${eventData} - Error: ${error}`)\n    })\n  }\n\n  @logPerformance('ERC20EventsScannerService::GetTokenInfo')\n  private async getTokenInfo (tokenAddress: string, abi: any, tokenType: string) {\n    const token = await this.cacheManager.get(tokenAddress) as TokenInfo\n    if (token) {\n      return [token.name, token.symbol, token.decimals]\n    }\n\n    const contract: Contract = this.ethersContract.create(\n      tokenAddress,\n      abi\n    )\n\n    let decimals: string\n\n    if (tokenType === TokenType.ERC20) {\n      decimals = await contract.decimals()\n    }\n    const name = await contract.name()\n    const symbol = await contract.symbol()\n    await this.cacheManager.set(tokenAddress, { name, symbol, decimals } as TokenInfo)\n\n    return [name, symbol, decimals]\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ERC20Transfer.html":{"url":"classes/ERC20Transfer.html","title":"class - ERC20Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ERC20Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/erc20-transfer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                    Async\n                                constructTokenTransferData\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                descGenerator\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(parsedUserOp, tokenTransferData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/erc20-transfer.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenTransferData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { walletAddress: any; name: string; status: string; sent: {}; userOpHash: any; txHash: string; blockNumber: number; description: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        constructTokenTransferData\n                        \n                    \n                \n            \n            \n                \n                        \n                    constructTokenTransferData(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/erc20-transfer.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:38\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_20_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer as IERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\n\nexport default class ERC20Transfer extends WalletAction {\n  async constructTokenTransferData ({ callData, targetAddress }) {\n    const [to, value] = callData\n    const tokenDetails = await this.tokenService.fetchTokenDetails(targetAddress)\n\n    return {\n      ...tokenDetails,\n      type: ERC_20_TYPE,\n      to,\n      value: value.toString()\n    } as IERC20Transfer\n  }\n\n  constructResponse (parsedUserOp, tokenTransferData) {\n    const { sender: walletAddress, userOpHash } = parsedUserOp\n    const { symbol, decimals, value } = tokenTransferData\n    return {\n      walletAddress,\n      name: 'tokenTransfer',\n      status: 'pending',\n      sent: [tokenTransferData],\n      userOpHash,\n      txHash: '',\n      blockNumber: 0,\n      description: this.generateDescription({\n        action: 'Transferred',\n        symbol,\n        valueInWei: value,\n        decimals\n      })\n    }\n  }\n\n  async execute (parsedUserOp) {\n    const targetFunction = parsedUserOp.targetFunctions[0]\n    const tokenTransferData = await this.constructTokenTransferData(targetFunction)\n    return this.constructResponse(parsedUserOp, tokenTransferData)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ERC721Transfer.html":{"url":"interfaces/ERC721Transfer.html","title":"interface - ERC721Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ERC721Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/interfaces/token-interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            decimals\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ERC20Transfer {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n    type: string;\n    to?: string;\n    from?: string\n    value?: string;\n}\n\ninterface ERC721Transfer {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n    from?: string;\n    to: string;\n    type: string;\n    tokenId: number;\n}\n\ninterface Token {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n}\n\nexport { ERC20Transfer, ERC721Transfer, Token }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EthereumBackendWallet.html":{"url":"interfaces/EthereumBackendWallet.html","title":"interface - EthereumBackendWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EthereumBackendWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/interfaces/ethereum-backend-wallet.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            childIndex\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                                \n                                        \n                                            walletType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        childIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        childIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface EthereumBackendWallet extends Document {\n  readonly walletAddress: string;\n  readonly childIndex: number;\n  readonly walletType: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EthereumPaymentAccount.html":{"url":"interfaces/EthereumPaymentAccount.html","title":"interface - EthereumPaymentAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EthereumPaymentAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/interfaces/ethereum-payment-account.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backendWalletId\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendWalletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendWalletId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface EthereumPaymentAccount extends Document {\n  readonly ownerId: string;\n  readonly backendWalletId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EthereumPaymentLink.html":{"url":"interfaces/EthereumPaymentLink.html","title":"interface - EthereumPaymentLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EthereumPaymentLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/interfaces/ethereum-payment-link.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            backendWalletId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            fromAddress\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            receivedAmount\n                                        \n                                \n                                \n                                        \n                                            receivedTokenAddress\n                                        \n                                \n                                \n                                        \n                                            receivedTokenSymbol\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tokenAddress\n                                        \n                                \n                                \n                                        \n                                            tokenSymbol\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            webhookEvent\n                                        \n                                \n                                \n                                        \n                                            webhookUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backendWalletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendWalletId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedAmount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedTokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedTokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedTokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedTokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhookEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhookEvent:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhookUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhookUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface EthereumPaymentLink extends Document {\n  readonly ownerId: string;\n  readonly title: string;\n  readonly description: string;\n  readonly tokenSymbol: string;\n  readonly tokenAddress: string;\n  readonly amount: number;\n  readonly backendWalletId: string;\n  status: string;\n  receivedTokenSymbol: string;\n  receivedTokenAddress: string;\n  receivedAmount: string;\n  fromAddress: string;\n  webhookEvent: any\n  txHash: string;\n  webhookUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EthereumPaymentsController.html":{"url":"controllers/EthereumPaymentsController.html","title":"controller - EthereumPaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EthereumPaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments_ethereum\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createPaymentAccount\n                            \n                            \n                                    \n                                    \n                                createPaymentLink\n                            \n                            \n                                    \n                                    \n                                getAllowedTokens\n                            \n                            \n                                    \n                                getPaymentLink\n                            \n                            \n                                    \n                                    \n                                getPaymentLinks\n                            \n                            \n                                    \n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createPaymentAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentAccount(ownerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Post('payment_account')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(userId: string, createPaymentLinkDto: CreatePaymentLinkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Post('payment_link')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllowedTokens()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Get('payment_link/allowed_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLink(paymentLinkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('payment_link/:paymentLinkId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(userId: string, ownerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Get('payment_links')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    webhook(webhookEvent: WebhookEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            WebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common'\nimport { CreatePaymentLinkDto } from '@app/apps-service/payments/dto/create-payment-link.dto'\nimport { EthereumPaymentsService } from '@app/apps-service/ethereum-payments/ethereum-payments.service'\nimport { WebhookEvent } from '@app/apps-service/payments/interfaces/webhook-event.interface'\nimport { IsValidApiKeysGuard } from '@app/apps-service/api-keys/guards/is-valid-api-keys.guard'\nimport { UserId } from '@app/apps-service/common/config/decorators/user.decorator'\n@Controller('payments_ethereum')\nexport class EthereumPaymentsController {\n  constructor (private readonly paymentsEthereumService: EthereumPaymentsService) { }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Get('payment_link/allowed_tokens')\n  getAllowedTokens () {\n    return this.paymentsEthereumService.getPaymentsAllowedTokens()\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Post('payment_account')\n  createPaymentAccount (ownerId: string) {\n    return this.paymentsEthereumService.createPaymentAccount(ownerId)\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Post('payment_link')\n  createPaymentLink (@UserId() userId: string, @Body() createPaymentLinkDto: CreatePaymentLinkDto) {\n    return this.paymentsEthereumService.createPaymentLink(userId, createPaymentLinkDto)\n  }\n\n  @Get('payment_link/:paymentLinkId')\n  getPaymentLink (@Param('paymentLinkId') paymentLinkId: string) {\n    return this.paymentsEthereumService.getPaymentLink(paymentLinkId)\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Get('payment_links')\n  getPaymentLinks (@UserId() userId: string, @Body() ownerId: string) {\n    return this.paymentsEthereumService.getPaymentLinks(userId || ownerId)\n  }\n\n  @Post('webhook')\n  webhook (@Body() webhookEvent: WebhookEvent) {\n    return this.paymentsEthereumService.handleWebhook(webhookEvent)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EthereumPaymentsModule.html":{"url":"modules/EthereumPaymentsModule.html","title":"module - EthereumPaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    EthereumPaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EthereumPaymentsModule\n\n\n\ncluster_EthereumPaymentsModule_imports\n\n\n\ncluster_EthereumPaymentsModule_providers\n\n\n\n\nApiKeysModule\n\nApiKeysModule\n\n\n\nEthereumPaymentsModule\n\nEthereumPaymentsModule\n\nEthereumPaymentsModule -->\n\nApiKeysModule->EthereumPaymentsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nEthereumPaymentsModule -->\n\nDatabaseModule->EthereumPaymentsModule\n\n\n\n\n\nBackendWalletsEthereumService\n\nBackendWalletsEthereumService\n\nEthereumPaymentsModule -->\n\nBackendWalletsEthereumService->EthereumPaymentsModule\n\n\n\n\n\nEthereumPaymentsService\n\nEthereumPaymentsService\n\nEthereumPaymentsModule -->\n\nEthereumPaymentsService->EthereumPaymentsModule\n\n\n\n\n\nWebhookSendService\n\nWebhookSendService\n\nEthereumPaymentsModule -->\n\nWebhookSendService->EthereumPaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/ethereum-payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendWalletsEthereumService\n                        \n                        \n                            EthereumPaymentsService\n                        \n                        \n                            WebhookSendService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EthereumPaymentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeysModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/common'\nimport { Module } from '@nestjs/common'\nimport { EthereumPaymentsController } from '@app/apps-service/ethereum-payments/ethereum-payments.controller'\nimport { EthereumPaymentsService } from '@app/apps-service/ethereum-payments/ethereum-payments.service'\nimport { ethereumPaymentsProviders } from '@app/apps-service/ethereum-payments/ethereum-payments.providers'\nimport configuration from '@app/apps-service/common/config/configuration'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { ApiKeysModule } from '@app/apps-service/api-keys/api-keys.module'\nimport { HttpModule } from '@nestjs/axios'\nimport { BackendWalletsEthereumService } from '@app/apps-service/ethereum-payments/backend-wallets-ethereum.service'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Module({\n  imports: [\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Alchemy-Token': `${configService.get('ALCHEMY_AUTH_KEY')}`\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    DatabaseModule,\n    ConfigModule.forFeature(configuration),\n    ApiKeysModule\n  ],\n  controllers: [EthereumPaymentsController],\n  providers: [\n    EthereumPaymentsService,\n    BackendWalletsEthereumService,\n    ...ethereumPaymentsProviders,\n    WebhookSendService\n  ]\n})\nexport class EthereumPaymentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EthereumPaymentsService.html":{"url":"injectables/EthereumPaymentsService.html","title":"injectable - EthereumPaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EthereumPaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPaymentAccount\n                            \n                            \n                                    Async\n                                createPaymentLink\n                            \n                            \n                                    Async\n                                getPaymentLink\n                            \n                            \n                                    Async\n                                getPaymentLinks\n                            \n                            \n                                    Async\n                                getPaymentsAllowedTokens\n                            \n                            \n                                    Async\n                                handleWebhook\n                            \n                            \n                                isRequestedAllowedToken\n                            \n                            \n                                isTokenMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    networkName\n                                \n                                \n                                    allowedPaymentTokens\n                                \n                                \n                                    allowedTokenAddresses\n                                \n                                \n                                    allowedTokenSymbols\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(backendWalletEthereumService: BackendWalletsEthereumService, paymentAccountModel: Model, paymentLinkModel: Model, configService: ConfigService, webhookSendService: WebhookSendService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendWalletEthereumService\n                                                  \n                                                        \n                                                                        BackendWalletsEthereumService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentAccountModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentLinkModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhookSendService\n                                                  \n                                                        \n                                                                        WebhookSendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPaymentAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentAccount(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(userId: string, createPaymentLinkEthereumDto: CreateEthereumPaymentLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPaymentLinkEthereumDto\n                                            \n                                                            CreateEthereumPaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLink(paymentLinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentsAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentsAllowedTokens()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleWebhook(webhookEvent: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRequestedAllowedToken\n                        \n                    \n                \n            \n            \n                \nisRequestedAllowedToken(createPaymentLinkEthereumDto: CreateEthereumPaymentLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentLinkEthereumDto\n                                            \n                                                            CreateEthereumPaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTokenMatch\n                        \n                    \n                \n            \n            \n                \nisTokenMatch(paymentLink: EthereumPaymentLink, tokenAddress: string, asset: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLink\n                                            \n                                                            EthereumPaymentLink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asset\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EthereumPaymentsService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        networkName\n                    \n                \n\n                \n                    \n                        getnetworkName()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allowedPaymentTokens\n                    \n                \n\n                \n                    \n                        getallowedPaymentTokens()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allowedTokenAddresses\n                    \n                \n\n                \n                    \n                        getallowedTokenAddresses()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allowedTokenSymbols\n                    \n                \n\n                \n                    \n                        getallowedTokenSymbols()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/ethereum-payments/ethereum-payments.service.ts:42\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { walletTypes } from '@app/apps-service/charge-api/schemas/backend-wallet.schema'\nimport { CreateEthereumPaymentLinkDto } from '@app/apps-service/ethereum-payments/dto/create-ethereum-payment-link.dto'\nimport { HttpException, HttpStatus, Inject, Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { isEmpty } from 'lodash'\nimport { Model } from 'mongoose'\nimport { BackendWalletsEthereumService } from '@app/apps-service/ethereum-payments/backend-wallets-ethereum.service'\nimport { EthereumPaymentAccount } from '@app/apps-service/ethereum-payments/interfaces/ethereum-payment-account.interface'\nimport { EthereumPaymentLink } from '@app/apps-service/ethereum-payments/interfaces/ethereum-payment-link.interface'\nimport { ethereumPaymentAccountModelString, ethereumPaymentLinkModelString } from '@app/apps-service/ethereum-payments/ethereum-payments.constants'\nimport { status } from '@app/apps-service/ethereum-payments/schemas/ethereum-payment-link.schema'\nimport { EthereumBackendWallet } from '@app/apps-service/ethereum-payments/interfaces/ethereum-backend-wallet.interface'\nimport { getAddress } from 'nestjs-ethers'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Injectable()\nexport class EthereumPaymentsService {\n  private readonly logger = new Logger(EthereumPaymentsService.name)\n\n  constructor (\n    private backendWalletEthereumService: BackendWalletsEthereumService,\n    @Inject(ethereumPaymentAccountModelString)\n    private paymentAccountModel: Model,\n    @Inject(ethereumPaymentLinkModelString)\n    private paymentLinkModel: Model,\n    private readonly configService: ConfigService,\n    private readonly webhookSendService: WebhookSendService\n  ) { }\n\n  get networkName () {\n    return this.configService.get('ETHEREUM_PAYMENTS_NETWORK_NAME')\n  }\n\n  get allowedPaymentTokens () {\n    return this.configService.get(`${this.networkName}PaymentsAllowedTokens`)\n  }\n\n  get allowedTokenAddresses () {\n    return this.allowedPaymentTokens.map(token => token.tokenAddress)\n  }\n\n  get allowedTokenSymbols () {\n    return this.allowedPaymentTokens.map(token => token.tokenSymbol)\n  }\n\n  async getPaymentsAllowedTokens () {\n    return this.allowedPaymentTokens\n  }\n\n  isRequestedAllowedToken (createPaymentLinkEthereumDto: CreateEthereumPaymentLinkDto) {\n    const isTokenAddressAllowed = this.allowedTokenAddresses.some(address => {\n      return address.toLowerCase() === createPaymentLinkEthereumDto.tokenAddress.toLowerCase()\n    })\n\n    const isTokenSymbolAllowed = this.allowedTokenSymbols.some(symbol => {\n      return symbol.toLowerCase() === createPaymentLinkEthereumDto.tokenSymbol.toLowerCase()\n    })\n\n    return isTokenAddressAllowed && isTokenSymbolAllowed\n  }\n\n  async createPaymentAccount (ownerId: string) {\n    const backendWallet = await this.backendWalletEthereumService.createBackendWallet(walletTypes.PAYMENT_ACCOUNT)\n\n    const paymentAccount = await this.paymentAccountModel.create({\n      ownerId, backendWalletId: backendWallet._id\n    })\n\n    paymentAccount.save()\n\n    return paymentAccount\n  }\n\n  async createPaymentLink (userId: string, createPaymentLinkEthereumDto: CreateEthereumPaymentLinkDto) {\n    if (isEmpty(createPaymentLinkEthereumDto.ownerId)) {\n      createPaymentLinkEthereumDto.ownerId = userId\n    }\n\n    if (!this.isRequestedAllowedToken(createPaymentLinkEthereumDto)) {\n      throw new HttpException(\n                `${createPaymentLinkEthereumDto.tokenSymbol} - ${createPaymentLinkEthereumDto.tokenAddress} is not allowed`,\n                HttpStatus.BAD_REQUEST\n      )\n    }\n\n    const backendWallet = await this.backendWalletEthereumService.createBackendWallet(walletTypes.PAYMENT_LINK)\n\n    createPaymentLinkEthereumDto.backendWalletId = backendWallet._id\n\n    const paymentLink = await this.paymentLinkModel.create(createPaymentLinkEthereumDto)\n\n    paymentLink.save()\n\n    await this.backendWalletEthereumService.addWebhookAddress(backendWallet.walletAddress)\n\n    return paymentLink.populate('backendWalletId')\n  }\n\n  async getPaymentLink (paymentLinkId: string) {\n    const paymentLink = await this.paymentLinkModel.findById(paymentLinkId).populate('backendWalletId', 'walletAddress')\n\n    if (isEmpty(paymentLink)) {\n      throw new HttpException(`Payment link with id: ${paymentLinkId} was not found`,\n        HttpStatus.NOT_FOUND)\n    }\n    return paymentLink\n  }\n\n  async getPaymentLinks (ownerId: string) {\n    return this.paymentLinkModel.find({ ownerId })\n  }\n\n  async handleWebhook (webhookEvent: any) {\n    const toAddress = getAddress(webhookEvent.event.activity[0].toAddress)\n    const fromAddress = getAddress(webhookEvent.event.activity[0].fromAddress)\n    const value = webhookEvent.event.activity[0].value\n    const asset = webhookEvent.event.activity[0].asset\n    const txHash = webhookEvent.event.activity[0].hash\n    const tokenAddress = getAddress(webhookEvent.event.activity[0]?.log?.address || '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE')\n\n    const backendWallet = await this.backendWalletEthereumService.findWalletByAddress(toAddress)\n\n    if (!isEmpty(backendWallet)) {\n      const paymentLink = await this.paymentLinkModel.findOne({ backendWalletId: backendWallet._id, status: status.NOT_PAID })\n\n      if (!isEmpty(paymentLink)) {\n        paymentLink.receivedAmount = value\n        paymentLink.receivedTokenAddress = tokenAddress\n        paymentLink.receivedTokenSymbol = asset\n        paymentLink.fromAddress = fromAddress\n        paymentLink.webhookEvent = webhookEvent\n        paymentLink.txHash = txHash\n\n        const amountFloat = paymentLink.amount\n        const receivedAmountFloat = parseFloat(paymentLink.receivedAmount)\n\n        if (!this.isTokenMatch(paymentLink, tokenAddress, asset)) {\n          paymentLink.status = status.WRONG_TOKEN\n        } else if (receivedAmountFloat === amountFloat) {\n          paymentLink.status = status.SUCCESSFUL\n        } else if (receivedAmountFloat > amountFloat) {\n          paymentLink.status = status.OVERPAID\n        } else {\n          paymentLink.status = status.UNDERPAID\n        }\n\n        await paymentLink.save()\n        if (paymentLink.webhookUrl) {\n          const paymentLinkWebhookEvent = [\n            {\n              status: paymentLink.status.toLowerCase(),\n              from: fromAddress,\n              to: toAddress,\n              txHash,\n              amount: value\n            }\n          ]\n          this.webhookSendService.sendData(paymentLinkWebhookEvent, paymentLink.webhookUrl)\n        }\n      }\n    }\n  }\n\n  isTokenMatch (paymentLink: EthereumPaymentLink, tokenAddress: string, asset: string) {\n    return paymentLink.tokenAddress.toLowerCase() === tokenAddress.toLowerCase() &&\n        paymentLink.tokenSymbol.toLowerCase() === asset.toLowerCase()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventData.html":{"url":"interfaces/EventData.html","title":"interface - EventData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/interfaces/event-data.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Object\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockHash\n                                        \n                                \n                                \n                                        \n                                            blockNumber\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            gasFee\n                                        \n                                \n                                \n                                        \n                                            gasLimit\n                                        \n                                \n                                \n                                        \n                                            gasPrice\n                                        \n                                \n                                \n                                        \n                                            gasUsed\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            txnValue\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasFee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gasFee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gasLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gasPrice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gasUsed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txnValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txnValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventData extends Object {\n  from: string,\n  txHash: string,\n  blockNumber: number,\n  blockHash: string,\n  gasPrice: string,\n  gasUsed: string,\n  gasFee: string,\n  gasLimit: string,\n  txnValue: string,\n}\nexport interface TokenEventData extends EventData {\n  to: string,\n  txHash: string,\n  tokenAddress: string,\n  blockNumber: number,\n  blockHash: string,\n  tokenType: string,\n  tokenName: string,\n  tokenSymbol: string,\n  value: string | null,\n  tokenDecimals: number | null,\n  tokenId: number | null,\n  valueEth: string | null,\n  isInternalTransaction: boolean\n}\nexport interface UserOpEventData extends EventData {\n  userOpHash: string;\n  nonce: string;\n  success: boolean;\n  actualGasCost: string;\n  actualGasUsed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EventProps.html":{"url":"interfaces/EventProps.html","title":"interface - EventProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EventProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeEvent.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            topics\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topics:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  EventFragment,\n  FormatTypes,\n  Interface,\n  ParamType\n} from '@ethersproject/abi'\nimport { version } from '@ethersproject/abi/lib/_version'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Logger } from '@ethersproject/logger'\n\nimport { combinations as generateCombinations } from './combinations'\n\nconst logger = new Logger(version)\n\nexport interface EventProps {\n  topics: string[];\n  data: string;\n}\n\ninterface AbstractDecodedEventResult {\n  eventFragment: EventFragment;\n  hasArgumentNames: boolean;\n  signature: string;\n  fullSignature: string;\n}\n\nexport interface DecodedEventResultWithArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: true;\n  args: Record;\n}\n\nexport interface DecodedEventResultWithoutArgNames\n  extends AbstractDecodedEventResult {\n  hasArgumentNames: false;\n  args: ReadonlyArray;\n}\n\nexport type DecodedEventResult =\n  | DecodedEventResultWithArgNames\n  | DecodedEventResultWithoutArgNames;\n\nexport function decodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  try {\n    const decoded = iface.parseLog(eventProps)\n    /**\n     * Ethers under the hood converts EventFragment to object-like form without format function, so we rehydrate it here.\n     */\n    const eventFragment = EventFragment.fromObject({\n      ...decoded.eventFragment,\n      _isFragment: false // Otherwise this function noops\n    })\n    const hasArgumentNames = doesContainNamedKeys(decoded.args)\n    const decodedEventResult = {\n      args: hasArgumentNames ? omitNonNamedKeys(decoded.args) : decoded.args,\n      eventFragment,\n      hasArgumentNames,\n      signature: decoded.signature,\n      fullSignature: eventFragment.format(FormatTypes.full)\n    }\n    return decodedEventResult as DecodedEventResult\n  } catch (e: any) {\n    switch (e.reason) {\n      case 'no matching event':\n        throw e\n      case 'data out-of-bounds':\n        // At this point we know that we have a matching topic, but the number of indexed args is incorrect\n        return tryToDecodeEvent(iface, eventProps)\n      default:\n        throw e\n    }\n  }\n}\n\ntype ChangedParamType = Omit;\n\n/**\n * We assume that we don't have partial indexing information.\n * This may not be true, but it's an edge case and it's PITA to handle.\n */\nexport function tryToDecodeEvent (\n  iface: Interface,\n  eventProps: EventProps\n): DecodedEventResult {\n  const indexedArgsCount = eventProps.topics.length - 1\n  const topichash = eventProps.topics[0]\n\n  for (const name in iface.events) {\n    if (topichash === iface.getEventTopic(name)) {\n      const event = iface.getEvent(name)\n      const inputsCombinations = combinationsMap(\n        event.inputs,\n        indexedArgsCount,\n        (input: ParamType): ChangedParamType => ({\n          arrayChildren: input.arrayChildren,\n          components: input.components,\n          name: input.name,\n          type: input.type,\n          arrayLength: input.arrayLength,\n          baseType: input.baseType,\n          indexed: true\n        })\n      )\n\n      let error: unknown\n      for (const inputs of inputsCombinations) {\n        const newEvent = EventFragment.fromObject({\n          inputs,\n          anonymous: event.anonymous,\n          type: event.type,\n          name: event.name\n        })\n\n        iface.events[name] = newEvent\n\n        try {\n          const args = iface.decodeEventLog(\n            newEvent,\n            eventProps.data,\n            eventProps.topics\n          )\n\n          return {\n            args,\n            hasArgumentNames: false,\n            eventFragment: newEvent,\n            signature: newEvent.format(FormatTypes.sighash),\n            fullSignature: newEvent.format(FormatTypes.full)\n          }\n        } catch (err) {\n          error = err\n          // We expect this to fail for some combinations. It's only a problem if it fails for all combinations.\n        }\n      }\n\n      if (error) {\n        throw error\n      }\n    }\n  }\n\n  return logger.throwArgumentError('no matching event', 'topichash', topichash)\n}\n\n// @internal\nexport function omitNonNamedKeys (\n  object: T\n): Record | T {\n  const obj: Record = {}\n  for (const [key, val] of Object.entries(object)) {\n    if (isNaN(parseInt(key))) {\n      obj[key] = val\n    }\n  }\n  return obj\n}\n\n// @internal\nexport function doesContainNamedKeys (object: T): boolean {\n  return Object.keys(object).some((key) => isNaN(parseInt(key)))\n}\n\nfunction combinationsMap (\n  inputs: ParamType[],\n  indexedArgsCount: number,\n  change: (param: ParamType) => ChangedParamType\n): ChangedParamType[][] {\n  const combinations = generateCombinations(inputs.length, indexedArgsCount)\n  return combinations.map((combination) =>\n    inputs.map((input, idx) =>\n      combination.includes(idx) ? change(input) : input\n    )\n  )\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsScannerModule.html":{"url":"modules/EventsScannerModule.html","title":"module - EventsScannerModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsScannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsScannerModule\n\n\n\ncluster_EventsScannerModule_providers\n\n\n\ncluster_EventsScannerModule_imports\n\n\n\n\nBroadcasterModule\n\nBroadcasterModule\n\n\n\nEventsScannerModule\n\nEventsScannerModule\n\nEventsScannerModule -->\n\nBroadcasterModule->EventsScannerModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nEventsScannerModule -->\n\nDatabaseModule->EventsScannerModule\n\n\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nEventsScannerModule -->\n\nWebhooksModule->EventsScannerModule\n\n\n\n\n\nERC20EventsScannerService\n\nERC20EventsScannerService\n\nEventsScannerModule -->\n\nERC20EventsScannerService->EventsScannerModule\n\n\n\n\n\nGasService\n\nGasService\n\nEventsScannerModule -->\n\nGasService->EventsScannerModule\n\n\n\n\n\nUserOpEventsScannerService\n\nUserOpEventsScannerService\n\nEventsScannerModule -->\n\nUserOpEventsScannerService->EventsScannerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/events-scanner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ERC20EventsScannerService\n                        \n                        \n                            GasService\n                        \n                        \n                            UserOpEventsScannerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BroadcasterModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            WebhooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/common'\nimport { BroadcasterModule } from '@app/notifications-service/broadcaster/broadcaster.module'\nimport rpcConfig from '@app/notifications-service/common/config/rpc-config'\nimport { eventsScannerProviders } from '@app/notifications-service/events-scanner/events-scanner.providers'\nimport { UserOpEventsScannerService } from '@app/notifications-service/events-scanner/userop-events-scanner.service'\nimport { ERC20EventsScannerService } from '@app/notifications-service/events-scanner/erc20-events-scanner.service'\nimport { Logger, Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { EthersModule } from 'nestjs-ethers'\nimport { webhookEventProviders } from '@app/notifications-service/common/providers/webhook-event.provider'\nimport { WebhooksModule } from '@app/notifications-service/webhooks/webhooks.module'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { smartWalletsService } from '@app/common/constants/microservices.constants'\nimport { GasService } from '@app/common/services/gas.service'\nimport { CacheModule } from '@nestjs/cache-manager'\n\n@Module({\n  imports: [\n    CacheModule.register({\n      ttl: 60000, // in milliseconds\n      max: 1000\n    }),\n    EthersModule.forRootAsync({\n      imports: [ConfigModule.forFeature(rpcConfig)],\n      inject: [ConfigService],\n      token: 'regular-node',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('rpcConfig')\n        return {\n          network: { name: config.rpc.networkName, chainId: config.rpc.chainId },\n          custom: config.rpc.url,\n          useDefaultProvider: false\n        }\n      }\n    }),\n    ClientsModule.register([\n      {\n        name: smartWalletsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.SMART_WALLETS_HOST,\n          port: parseInt(process.env.SMART_WALLETS_TCP_PORT)\n        }\n      }\n    ]),\n    WebhooksModule,\n    DatabaseModule,\n    ConfigModule.forFeature(rpcConfig),\n    BroadcasterModule\n  ],\n  providers: [\n    GasService,\n    ERC20EventsScannerService,\n    UserOpEventsScannerService,\n    ...eventsScannerProviders,\n    ...webhookEventProviders,\n    Logger\n  ]\n})\nexport class EventsScannerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsScannerService.html":{"url":"injectables/EventsScannerService.html","title":"injectable - EventsScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventsScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/events-scanner.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ScannerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchLogs\n                            \n                            \n                                    \n                                    Async\n                                processBlocks\n                            \n                            \n                                    Abstract\n                                processEvent\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, scannerStatusService: ScannerStatusService, logsFilter: LogFilter, rpcProvider: BaseProvider, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/events-scanner/events-scanner.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scannerStatusService\n                                                  \n                                                        \n                                                                        ScannerStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsFilter\n                                                  \n                                                        \n                                                                        LogFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpcProvider\n                                                  \n                                                        \n                                                                    BaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchLogs(fromBlock: number, toBlock: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/events-scanner/events-scanner.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlocks(fromBlock: number, toBlock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('EventScanner::ProcessBlocks')\n                \n            \n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(log: Log)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/events-scanner/events-scanner.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                log\n                                            \n                                                        Log\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { logPerformance } from '@app/notifications-service/common/decorators/log-performance.decorator'\nimport { Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { BaseProvider, Log } from 'nestjs-ethers'\nimport { ScannerService } from '@app/notifications-service/common/scanner-service'\nimport { ScannerStatusService } from '@app/notifications-service/common/scanner-status.service'\nimport { LogFilter } from './interfaces/logs-filter'\n@Injectable()\nexport abstract class EventsScannerService extends ScannerService {\n  constructor (\n    configService: ConfigService,\n    scannerStatusService: ScannerStatusService,\n    private readonly logsFilter: LogFilter,\n    rpcProvider: BaseProvider,\n    logger: Logger\n  ) {\n    super(configService, scannerStatusService, rpcProvider, logger)\n  }\n\n  @logPerformance('EventScanner::ProcessBlocks')\n  async processBlocks (fromBlock: number, toBlock: number) {\n    if (fromBlock > toBlock) return\n\n    const logs = await this.fetchLogs(fromBlock, toBlock)\n\n    for (const log of logs) {\n      try {\n        await this.processEvent(log)\n      } catch (error) {\n        this.logger.error('Failed to process log:')\n        this.logger.error({ log })\n        this.logger.error(error)\n      }\n    }\n  }\n\n  async fetchLogs (fromBlock: number, toBlock: number) {\n    const logs = await this.rpcProvider.getLogs({\n      fromBlock,\n      toBlock,\n      topics: this.logsFilter.topics,\n      address: this.logsFilter.address\n    })\n\n    return logs\n  }\n\n  abstract processEvent (log: Log);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExplorerApiController.html":{"url":"controllers/ExplorerApiController.html","title":"controller - ExplorerApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExplorerApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/explorer-api/explorer-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/explorer-api/explorer-api.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/explorer-api/explorer-api.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { ExplorerApiInterceptor } from '@app/api-service/explorer-api/explorer-api.interceptor'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@UseInterceptors(ExplorerApiInterceptor)\n@Controller({ path: 'v0/explorer' })\nexport class ExplorerApiController {\n  @Get()\n  get () {\n  }\n\n  @Post()\n  post () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExplorerApiInterceptor.html":{"url":"injectables/ExplorerApiInterceptor.html","title":"injectable - ExplorerApiInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExplorerApiInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/explorer-api/explorer-api.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                            \n                                    Private\n                                    Async\n                                prepareRequestConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/explorer-api/explorer-api.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/explorer-api/explorer-api.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        prepareRequestConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareRequestConfig(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/explorer-api/explorer-api.interceptor.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  HttpException\n} from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { catchError, map } from 'rxjs/operators'\nimport { isEmpty } from 'lodash'\nimport { AxiosRequestConfig, AxiosResponse } from 'axios'\n\n@Injectable()\nexport class ExplorerApiInterceptor implements NestInterceptor {\n  constructor (\n    private httpService: HttpService,\n    private configService: ConfigService\n  ) { }\n\n  async intercept (context: ExecutionContext): Promise {\n    const requestConfig: AxiosRequestConfig = await this.prepareRequestConfig(\n      context\n    )\n\n    const response = await\n    this.httpService\n      .request(requestConfig)\n      .pipe(\n        map((axiosResponse: AxiosResponse) => {\n          return axiosResponse.data\n        })\n      )\n      .pipe(\n        catchError((e) => {\n          const errorReason =\n              e?.response?.data?.error ||\n              e?.response?.data?.errors?.message ||\n              ''\n\n          throw new HttpException(\n              `${e?.response?.statusText}: ${errorReason}`,\n              e?.response?.status\n          )\n        })\n      )\n\n    return response\n  }\n\n  private async prepareRequestConfig (context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest()\n\n    const ctxClassName = context.getClass().name\n    const ctxHandlerName = context.getHandler().name\n    const query = request.query\n    const config = this.configService.get>(ctxClassName)\n\n    const requestConfig: AxiosRequestConfig = {\n      url: `${config?.baseUrl}`,\n      method: ctxHandlerName\n\n    }\n\n    if (!isEmpty(query)) {\n      requestConfig.params = { ...query, apiKey: config?.apiKey }\n    }\n\n    return requestConfig\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExplorerApiModule.html":{"url":"modules/ExplorerApiModule.html","title":"module - ExplorerApiModule","body":"\n                   \n\n\n\n\n    Modules\n    ExplorerApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExplorerApiModule\n\n\n\ncluster_ExplorerApiModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nExplorerApiModule\n\nExplorerApiModule\n\nExplorerApiModule -->\n\nApiKeyModule->ExplorerApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/explorer-api/explorer-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ExplorerApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HttpModule } from '@nestjs/axios'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { ConfigModule } from '@nestjs/config'\nimport configuration from '@app/api-service/explorer-api/config/configuration'\nimport { ExplorerApiController } from '@app/api-service/explorer-api/explorer-api.controller'\n\n@Module({\n  imports: [\n    ApiKeyModule,\n    HttpModule,\n    ConfigModule.forFeature(configuration)\n  ],\n  controllers: [\n    ExplorerApiController\n  ]\n})\nexport class ExplorerApiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FourBytesReponseEntry.html":{"url":"interfaces/FourBytesReponseEntry.html","title":"interface - FourBytesReponseEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FourBytesReponseEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeBySigHash.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bytes_signature\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            hex_signature\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            text_signature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bytes_signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bytes_signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hex_signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hex_signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text_signature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text_signature:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interface } from '@ethersproject/abi'\nimport fetch from 'node-fetch'\n\nimport { hexSchema } from '@app/common/utils/dtools/validation/schemas/hexSchema'\nimport { decodeCalldata, DecodeResult } from '@app/common/utils/dtools/decodeCalldata'\nimport { DecodedEventResult, decodeEvent, EventProps } from '@app/common/utils/dtools/decodeEvent'\nimport { parseAbi } from '@app/common/utils/dtools/parseAbi'\n\n// @internal\ninterface FourBytesReponseEntry {\n  id: number;\n  text_signature: string;\n  bytes_signature: string;\n  created_at: string;\n  hex_signature: string;\n}\n\n// @internal\ninterface FourBytesResponse {\n  count: number;\n  next: unknown;\n  previous: unknown;\n  results: FourBytesReponseEntry[];\n}\n\n// @internal\n// there are more types, but we don't need them for now\nexport type HexSigType = 'signatures' | 'event-signatures';\n\ntype Bytes4Cache = {\n  [sigType in HexSigType]: {\n    // undefined - not populated\n    // [] - no results\n    // [...] - results\n    [sig: string]: FourBytesReponseEntry[] | undefined;\n  };\n};\n\nexport async function decodeWithCalldata (\n  sigHash: string,\n  calldata: string\n): Promise {\n  const response = await fetch4BytesBy.Signatures(sigHash)\n  if (response) {\n    const ifaces = parse4BytesResToIfaces(response)\n    const decodedByCalldata = decodeByCalldata(ifaces, calldata)\n    if (decodedByCalldata.length === 0 && ifaces.length > 0) {\n      return [{ decoded: [], fragment: ifaces[0].fragments[0], sigHash }]\n    } else {\n      return decodedByCalldata\n    }\n  }\n}\n\nexport async function decodeWithEventProps (\n  sigHash: string,\n  eventProps: EventProps\n): Promise {\n  const response = await fetch4BytesBy.EventSignatures(sigHash)\n  if (response) {\n    const ifaces = parse4BytesResToIfaces(response, 'event')\n    return decode4BytesData(ifaces, eventProps, decodeEvent)\n  }\n}\n\nexport function sigHashFromCalldata (calldata: string): string | undefined {\n  const chunk = calldata.slice(0, 10)\n  if (hexSchema.safeParse(chunk).success) {\n    return chunk\n  }\n}\n\nexport const fetch4BytesBy = {\n  EventSignatures: async (sigHash: string) => {\n    return fetch4Bytes(sigHash, 'event-signatures')\n  },\n  Signatures: async (sigHash: string) => {\n    return fetch4Bytes(sigHash, 'signatures')\n  }\n}\n\nconst MAX_RETRY = 30\n\nasync function fetch4Bytes (\n  hexSig: string,\n  hexSigType: HexSigType,\n  retries: number = 0\n): Promise {\n  let result: FourBytesReponseEntry[] | undefined\n  const cached = bytes4Cache[hexSigType][hexSig]\n  if (cached) {\n    return cached\n  }\n  try {\n    const results = (\n      await safeFetch(`${urlTo(hexSigType)}${hexSig}`)\n    ).results.reverse()\n    bytes4Cache[hexSigType][hexSig] = results\n    result = results\n  } catch (error) {\n    retries += 1\n    if (retries  (...args: Parameters): Promise {\n  return fetch(...args).then(async (response) => {\n    if (response.status === 200) {\n      return response.json() as unknown as T\n    } else {\n      throw new Error(`${response.status} ${response.statusText}`)\n    }\n  })\n}\n\n// @internal\nconst bytes4Cache: Bytes4Cache = {\n  signatures: {},\n  'event-signatures': {}\n}\n\n// @internal\nfunction urlTo (hexSigType: HexSigType): string {\n  return `https://www.4byte.directory/api/v1/${hexSigType}/?hex_signature=`\n}\n\n// @internal\nexport function parse4BytesResToIfaces (\n  data: FourBytesReponseEntry[],\n  defaultKeyword: string = 'function'\n): Interface[] {\n  const ifaces: Interface[] = []\n  for (const result of data) {\n    const frag = result.text_signature\n    let parsed: Interface | Error\n    try {\n      parsed = parseAbi(frag, defaultKeyword)\n      if (parsed instanceof Interface) ifaces.push(parsed)\n    } catch (e) { }\n  }\n  return ifaces\n}\n\n// @internal\nexport function decodeByCalldata (\n  ifaces: Interface[],\n  calldata: string\n): DecodeResult[] {\n  return decode4BytesData(ifaces, calldata, decodeCalldata)\n}\n\n// @internal\nexport function decode4BytesData (\n  ifaces: Interface[],\n  data: T,\n  decodeFn: (iface: Interface, data: T) => R | undefined\n): R[] {\n  const decoded: R[] = []\n  for (const iface of ifaces) {\n    const decodeResult = decodeFn(iface, data)\n    if (decodeResult) decoded.push(decodeResult)\n  }\n  return decoded\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FourBytesResponse.html":{"url":"interfaces/FourBytesResponse.html","title":"interface - FourBytesResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FourBytesResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/utils/dtools/decodeBySigHash.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            previous\n                                        \n                                \n                                \n                                        \n                                            results\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previous\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previous:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        results:         FourBytesReponseEntry[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FourBytesReponseEntry[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Interface } from '@ethersproject/abi'\nimport fetch from 'node-fetch'\n\nimport { hexSchema } from '@app/common/utils/dtools/validation/schemas/hexSchema'\nimport { decodeCalldata, DecodeResult } from '@app/common/utils/dtools/decodeCalldata'\nimport { DecodedEventResult, decodeEvent, EventProps } from '@app/common/utils/dtools/decodeEvent'\nimport { parseAbi } from '@app/common/utils/dtools/parseAbi'\n\n// @internal\ninterface FourBytesReponseEntry {\n  id: number;\n  text_signature: string;\n  bytes_signature: string;\n  created_at: string;\n  hex_signature: string;\n}\n\n// @internal\ninterface FourBytesResponse {\n  count: number;\n  next: unknown;\n  previous: unknown;\n  results: FourBytesReponseEntry[];\n}\n\n// @internal\n// there are more types, but we don't need them for now\nexport type HexSigType = 'signatures' | 'event-signatures';\n\ntype Bytes4Cache = {\n  [sigType in HexSigType]: {\n    // undefined - not populated\n    // [] - no results\n    // [...] - results\n    [sig: string]: FourBytesReponseEntry[] | undefined;\n  };\n};\n\nexport async function decodeWithCalldata (\n  sigHash: string,\n  calldata: string\n): Promise {\n  const response = await fetch4BytesBy.Signatures(sigHash)\n  if (response) {\n    const ifaces = parse4BytesResToIfaces(response)\n    const decodedByCalldata = decodeByCalldata(ifaces, calldata)\n    if (decodedByCalldata.length === 0 && ifaces.length > 0) {\n      return [{ decoded: [], fragment: ifaces[0].fragments[0], sigHash }]\n    } else {\n      return decodedByCalldata\n    }\n  }\n}\n\nexport async function decodeWithEventProps (\n  sigHash: string,\n  eventProps: EventProps\n): Promise {\n  const response = await fetch4BytesBy.EventSignatures(sigHash)\n  if (response) {\n    const ifaces = parse4BytesResToIfaces(response, 'event')\n    return decode4BytesData(ifaces, eventProps, decodeEvent)\n  }\n}\n\nexport function sigHashFromCalldata (calldata: string): string | undefined {\n  const chunk = calldata.slice(0, 10)\n  if (hexSchema.safeParse(chunk).success) {\n    return chunk\n  }\n}\n\nexport const fetch4BytesBy = {\n  EventSignatures: async (sigHash: string) => {\n    return fetch4Bytes(sigHash, 'event-signatures')\n  },\n  Signatures: async (sigHash: string) => {\n    return fetch4Bytes(sigHash, 'signatures')\n  }\n}\n\nconst MAX_RETRY = 30\n\nasync function fetch4Bytes (\n  hexSig: string,\n  hexSigType: HexSigType,\n  retries: number = 0\n): Promise {\n  let result: FourBytesReponseEntry[] | undefined\n  const cached = bytes4Cache[hexSigType][hexSig]\n  if (cached) {\n    return cached\n  }\n  try {\n    const results = (\n      await safeFetch(`${urlTo(hexSigType)}${hexSig}`)\n    ).results.reverse()\n    bytes4Cache[hexSigType][hexSig] = results\n    result = results\n  } catch (error) {\n    retries += 1\n    if (retries  (...args: Parameters): Promise {\n  return fetch(...args).then(async (response) => {\n    if (response.status === 200) {\n      return response.json() as unknown as T\n    } else {\n      throw new Error(`${response.status} ${response.statusText}`)\n    }\n  })\n}\n\n// @internal\nconst bytes4Cache: Bytes4Cache = {\n  signatures: {},\n  'event-signatures': {}\n}\n\n// @internal\nfunction urlTo (hexSigType: HexSigType): string {\n  return `https://www.4byte.directory/api/v1/${hexSigType}/?hex_signature=`\n}\n\n// @internal\nexport function parse4BytesResToIfaces (\n  data: FourBytesReponseEntry[],\n  defaultKeyword: string = 'function'\n): Interface[] {\n  const ifaces: Interface[] = []\n  for (const result of data) {\n    const frag = result.text_signature\n    let parsed: Interface | Error\n    try {\n      parsed = parseAbi(frag, defaultKeyword)\n      if (parsed instanceof Interface) ifaces.push(parsed)\n    } catch (e) { }\n  }\n  return ifaces\n}\n\n// @internal\nexport function decodeByCalldata (\n  ifaces: Interface[],\n  calldata: string\n): DecodeResult[] {\n  return decode4BytesData(ifaces, calldata, decodeCalldata)\n}\n\n// @internal\nexport function decode4BytesData (\n  ifaces: Interface[],\n  data: T,\n  decodeFn: (iface: Interface, data: T) => R | undefined\n): R[] {\n  const decoded: R[] = []\n  for (const iface of ifaces) {\n    const decodeResult = decodeFn(iface, data)\n    if (decodeResult) decoded.push(decodeResult)\n  }\n  return decoded\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FuseLegacySDK.html":{"url":"classes/FuseLegacySDK.html","title":"class - FuseLegacySDK","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FuseLegacySDK\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/fuseLegacySDK.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                _axios\n                            \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                    Private\n                                _encodedDataForContractCall\n                            \n                            \n                                    Private\n                                _from\n                            \n                            \n                                    Private\n                                _getNonce\n                            \n                            \n                                    Private\n                                _initWebsocket\n                            \n                            \n                                    Private\n                                _signer\n                            \n                            \n                                    Private\n                                _signOffChain\n                            \n                            \n                                    Private\n                                _smartWalletsJwt\n                            \n                            \n                                    Private\n                                _socketClient\n                            \n                            \n                                    Private\n                                _throwError\n                            \n                            \n                                    Private\n                                _wallet\n                            \n                            \n                                authenticate\n                            \n                            \n                                createWallet\n                            \n                            \n                                    Public\n                                events\n                            \n                            \n                                getWallet\n                            \n                            \n                                init\n                            \n                            \n                                    Public\n                                    Readonly\n                                publicApiKey\n                            \n                            \n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(publicApiKey: string)\n                    \n                \n                        \n                            \n                                Defined in scripts/fuseLegacySDK.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        publicApiKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        _axios\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AxiosInstance\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Wallet\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _encodedDataForContractCall\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:197\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _getNonce\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:183\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _initWebsocket\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _signer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _signOffChain\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _smartWalletsJwt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _socketClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Centrifuge(Variables.SOCKET_SERVER_URL)\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _throwError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:202\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SmartWallet\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:239\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        events\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LegacyEventEmitter()\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:271\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        publicApiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        relay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/fuseLegacySDK.ts:287\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BigNumber, Wallet, ethers } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport axios, { AxiosError, AxiosInstance } from 'axios'\nimport { Centrifuge } from 'centrifuge'\nimport EventEmitter from 'events'\nimport WebSocket from 'ws'\nimport { jwtDecode } from 'jwt-decode'\nimport { websocketEvents } from '@app/smart-wallets-service/smart-wallets/constants/smart-wallets.constants'\n\ntype WalletModuleAddresses = {\n  GuardianManager: string;\n  LockManager: string;\n  RecoveryManager: string;\n  ApprovedTransfer: string;\n  TransferManager: string;\n  NftTransfer: string;\n  TokenExchanger: string;\n  CommunityManager: string;\n  WalletOwnershipManager: string;\n};\n\ntype SmartWallet = {\n  smartWalletAddress: string;\n  walletModules: WalletModuleAddresses;\n  networks: string[];\n  version: string;\n  paddedVersion: string;\n  ownerAddress: string;\n};\n\nconst Variables = {\n  FUSE_API_BASE_URL: process.env.FUSE_API_BASE_URL ?? 'https://api.fuse.io',\n  DEFAULT_GAS_LIMIT: process.env.DEFAULT_GAS_LIMIT ?? 700000,\n  SOCKET_SERVER_URL: process.env.SOCKET_SERVER_URL ?? 'wss://ws.fuse.io/connection/websocket'\n}\n\nconst ABI = {\n  constant: false,\n  inputs: [\n    {\n      name: '_wallet',\n      type: 'address'\n    },\n    {\n      name: '_token',\n      type: 'address'\n    },\n    {\n      name: '_to',\n      type: 'address'\n    },\n    {\n      name: '_amount',\n      type: 'uint256'\n    },\n    {\n      name: '_data',\n      type: 'bytes'\n    }\n  ],\n  name: 'transferToken',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}\n\nclass LegacyEventEmitter extends EventEmitter { }\n\nexport class FuseLegacySDK {\n  private readonly _axios: AxiosInstance\n  private _credentials: Wallet\n  private _from: string\n  private _smartWalletsJwt: string\n  private _wallet: SmartWallet\n  private _socketClient = new Centrifuge(Variables.SOCKET_SERVER_URL)\n  public events = new LegacyEventEmitter()\n\n  constructor (public readonly publicApiKey: string) {\n    this._axios = axios.create({\n      baseURL: `${Variables.FUSE_API_BASE_URL}/api`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        apiKey: publicApiKey\n      }\n    })\n  }\n\n  init = async (\n    credentials: Wallet\n  ) => {\n    this._credentials = credentials\n\n    try {\n      this._from = await credentials.getAddress()\n      const { hash, signature } = await this._signer(this._credentials, this._from)\n      this._smartWalletsJwt = await this.authenticate(hash, signature, this._from)\n      await this._initWebsocket()\n    } catch (error) {\n      throw new Error(error)\n    }\n\n    try {\n      this._wallet = await this.getWallet()\n    } catch (error) {\n      const createWallet = await this.createWallet()\n      await createWallet.wait()\n\n      this._wallet = await this.getWallet()\n      if (!this._wallet.smartWalletAddress) {\n        throw new Error(\"Couldn't retrieve smart wallet due to an invalid JWT. Please try again.\")\n      }\n    }\n  }\n\n  private _initWebsocket = async (): Promise => {\n    try {\n      const decodedJwt: any = jwtDecode(this._smartWalletsJwt)\n      this._socketClient = new Centrifuge(\n        Variables.SOCKET_SERVER_URL,\n        {\n          websocket: WebSocket,\n          token: this._smartWalletsJwt,\n          name: decodedJwt.sub\n        }\n      )\n      this._socketClient.connect()\n      await this._socketClient.ready()\n    } catch (error) {\n      this._throwError('Unable to establish legacy websocket connection with Centrifuge', error)\n    }\n  }\n\n  private _signer = async (\n    credentials: ethers.Signer,\n    ownerAddress: string\n  ): Promise => {\n    const input = Uint8Array.from(Buffer.from(ownerAddress.replace('0x', ''), 'hex'))\n    const hash = ethers.utils.keccak256(input)\n    const signature = await credentials.signMessage(ethers.utils.arrayify(hash))\n    return { hash, signature }\n  }\n\n  private _signOffChain = (\n    credentials: Wallet,\n    from: string,\n    to: string,\n    data: string,\n    nonce: string,\n    options?: {\n      value?: BigNumber;\n      gasPrice?: BigNumber;\n      gasLimit?: BigNumber;\n    }\n  ): Promise => {\n    const value = options?.value ?? BigNumber.from(0)\n    const gasPrice = options?.gasPrice ?? BigNumber.from(0)\n    const gasLimit =\n      options?.gasLimit ?? BigNumber.from(Variables.DEFAULT_GAS_LIMIT)\n\n    const inputArr = [\n      '0x19',\n      '0x00',\n      from,\n      to,\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(value), 32),\n      data,\n      nonce,\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(gasPrice), 32),\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(gasLimit), 32)\n    ]\n\n    const input = `0x${inputArr.map((hexStr) => hexStr.slice(2)).join('')}`\n\n    const messagePayload = ethers.utils.keccak256(ethers.utils.arrayify(input))\n    const signature = credentials.signMessage(messagePayload)\n\n    return signature\n  }\n\n  private _getNonce = async (): Promise => {\n    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL)\n\n    const block = await provider.getBlockNumber()\n    const timestamp = Date.now()\n\n    const blockHex = ethers.utils.hexZeroPad(ethers.utils.hexlify(block), 16)\n    const timestampHex = ethers.utils.hexZeroPad(ethers.utils.hexlify(timestamp), 16)\n\n    const combinedHex = blockHex.substring(2) + timestampHex.substring(2)\n\n    return ethers.utils.hexlify(ethers.utils.arrayify('0x' + combinedHex))\n  }\n\n  private _encodedDataForContractCall = (abi: any, methodName: string, values: any[]) => {\n    const iface = new Interface([abi])\n    return iface.encodeFunctionData(methodName, values)\n  }\n\n  private _throwError = (message: string, error: Error | AxiosError) => {\n    let err: string | unknown = error.message\n    if (axios.isAxiosError(error)) {\n      if (error.response) {\n        err = error.response.data\n      } else if (error.request) {\n        err = error.request\n      }\n    }\n\n    this._socketClient.disconnect()\n\n    throw new Error(`${message} ${JSON.stringify(err)}`)\n  }\n\n  authenticate = async (\n    hash: string,\n    signature: string,\n    ownerAddress: string\n  ) => {\n    try {\n      const response = await this._axios.post('/v1/smart-wallets/auth', {\n        hash,\n        signature,\n        ownerAddress\n      })\n      return response.data.jwt\n    } catch (error) {\n      console.log({ error })\n\n      this._throwError(\n        'Unable to authenticate legacy smart wallet. Please try again.',\n        error\n      )\n    }\n  }\n\n  createWallet = async () => {\n    try {\n      const response = await this._axios.post('/v1/smart-wallets/create', {}, {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n\n      const subscription = this._socketClient.newSubscription(`transaction:#${response.data.transactionId}`)\n      subscription.on('publication', ctx => {\n        this.events.emit(ctx.data.eventName, ctx.data.eventData)\n      })\n\n      return {\n        data: response.data,\n        wait: () => {\n          return new Promise((resolve) => {\n            this.events.once(websocketEvents.WALLET_CREATION_SUCCEEDED, (data) => {\n              subscription.off('publication', () => {})\n              resolve(data)\n            })\n          })\n        }\n      }\n    } catch (error) {\n      this._throwError(\n        \"Couldn't create a legacy smart wallet. Please try again.\",\n        error\n      )\n    }\n  }\n\n  getWallet = async (): Promise => {\n    try {\n      const response = await this._axios.get('/v1/smart-wallets', {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n      return response.data\n    } catch (error) {\n      this._throwError(\n        'Unable to retrieve legacy smart wallet. Please try again.',\n        error\n      )\n    }\n  }\n\n  relay = async (\n    to: string,\n    amount: BigNumber\n  ) => {\n    try {\n      const walletModule = 'TransferManager'\n      const methodName = 'transferToken'\n      const tokenAddress = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n      const transactionData = '0x'\n      const nonce = await this._getNonce()\n      const data = this._encodedDataForContractCall(ABI, methodName, [\n        this._wallet.smartWalletAddress,\n        tokenAddress,\n        to,\n        amount,\n        transactionData\n      ])\n      const signature = await this._signOffChain(\n        this._credentials,\n        this._wallet.walletModules.TransferManager,\n        this._wallet.smartWalletAddress,\n        data,\n        nonce\n      )\n      const transactionBody = {\n        status: 'pending',\n        from: this._wallet.smartWalletAddress,\n        to,\n        value: amount.toString(),\n        type: 'SEND',\n        asset: 'FUSE',\n        tokenName: 'FuseToken',\n        tokenSymbol: 'FUSE',\n        tokenDecimal: 18,\n        tokenAddress\n      }\n\n      const body = {\n        gasPrice: 0,\n        gasLimit: 700000,\n        relayBody: null,\n        txMetadata: null,\n        transactionBody,\n        walletAddress: this._wallet.smartWalletAddress,\n        walletModuleAddress: this._wallet.walletModules.TransferManager,\n        data,\n        nonce,\n        methodName,\n        signature,\n        walletModule\n      }\n\n      const response = await this._axios.post('/v1/smart-wallets/relay', body, {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n\n      const subscription = this._socketClient.newSubscription(`transaction:#${response.data.transactionId}`)\n      subscription.on('publication', ctx => {\n        this.events.emit(ctx.data.eventName, ctx.data.eventData)\n      })\n\n      return {\n        data: response.data,\n        wait: () => {\n          return new Promise((resolve, reject) => {\n            this.events.once(websocketEvents.TRANSACTION_SUCCEEDED, (data) => {\n              subscription.off('publication', () => {})\n              this._socketClient.disconnect()\n              resolve(data)\n            })\n\n            this.events.once(websocketEvents.TRANSACTION_FAILED, (data) => {\n              subscription.off('publication', () => {})\n              this._socketClient.disconnect()\n              reject(new Error(`Couldn't process the legacy relay transaction. Please try again. ${JSON.stringify(data)}`))\n            })\n          })\n        }\n      }\n    } catch (error) {\n      this._throwError(\n        'Unable to relay legacy transaction. Please try again.',\n        error\n      )\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FuseLiquidStakingService.html":{"url":"injectables/FuseLiquidStakingService.html","title":"injectable - FuseLiquidStakingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FuseLiquidStakingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stake\n                            \n                            \n                                    Async\n                                stakedToken\n                            \n                            \n                                    Async\n                                stakingApr\n                            \n                            \n                                    Async\n                                tvl\n                            \n                            \n                                unStake\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    address\n                                \n                                \n                                    sfTokenAddress\n                                \n                                \n                                    consensusAddress\n                                \n                                \n                                    blockRewardAddress\n                                \n                                \n                                    wfuseAddress\n                                \n                                \n                                    validatorFee\n                                \n                                \n                                    liquidStakingInterface\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(provider: JsonRpcProvider, configService: ConfigService, tradeService: TradeService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tradeService\n                                                  \n                                                        \n                                                                        TradeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        stake\n                        \n                    \n                \n            \n            \n                \nstake()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakedToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedToken(accountAddress: string, undefined: StakingOption)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            StakingOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakingApr\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingApr()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        tvl\n                        \n                    \n                \n            \n            \n                \n                        \n                    tvl()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unStake\n                        \n                    \n                \n            \n            \n                \nunStake(undefined: UnstakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(FuseLiquidStakingService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        sfTokenAddress\n                    \n                \n\n                \n                    \n                        getsfTokenAddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        consensusAddress\n                    \n                \n\n                \n                    \n                        getconsensusAddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blockRewardAddress\n                    \n                \n\n                \n                    \n                        getblockRewardAddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        wfuseAddress\n                    \n                \n\n                \n                    \n                        getwfuseAddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        validatorFee\n                    \n                \n\n                \n                    \n                        getvalidatorFee()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        liquidStakingInterface\n                    \n                \n\n                \n                    \n                        getliquidStakingInterface()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/fuse-liquid-staking.service.ts:55\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import LiquidStakingABI from '@app/network-service/common/constants/abi/FuseLiquidStaking.json'\nimport Erc20ABI from '@app/network-service/common/constants/abi/Erc20.json'\nimport ConsensusABI from '@app/network-service/common/constants/abi/Consensus'\nimport BlockRewardABI from '@app/network-service/common/constants/abi/BlockReward.json'\nimport TradeService from '@app/common/services/trade.service'\nimport {\n  Contract,\n  InjectEthersProvider,\n  Interface,\n  JsonRpcProvider,\n  formatEther,\n  parseEther\n} from 'nestjs-ethers'\nimport { aprToApy } from '@app/network-service/common/utils/helper-functions'\nimport { Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport { StakingOption, StakingProvider } from '@app/network-service/staking/interfaces'\n\n@Injectable()\nexport default class FuseLiquidStakingService implements StakingProvider {\n  private readonly logger = new Logger(FuseLiquidStakingService.name)\n\n  constructor (\n    @InjectEthersProvider('regular-node')\n    private readonly provider: JsonRpcProvider,\n    private readonly configService: ConfigService,\n    private readonly tradeService: TradeService\n  ) {}\n\n  get address () {\n    return this.configService.get('fuseLiquidStakingAddress')\n  }\n\n  get sfTokenAddress () {\n    return this.configService.get('sfTokenAddress')\n  }\n\n  get consensusAddress () {\n    return this.configService.get('consensusAddress')\n  }\n\n  get blockRewardAddress () {\n    return this.configService.get('blockRewardAddress')\n  }\n\n  get wfuseAddress () {\n    return this.configService.get('wfuseAddress')\n  }\n\n  get validatorFee () {\n    return this.configService.get('validatorFee')\n  }\n\n  get liquidStakingInterface () {\n    return new Interface(LiquidStakingABI)\n  }\n\n  stake () {\n    return this.liquidStakingInterface.encodeFunctionData('deposit', [])\n  }\n\n  unStake ({ tokenAmount }: UnstakeDto) {\n    return this.liquidStakingInterface.encodeFunctionData('withdraw', [parseEther(tokenAmount)])\n  }\n\n  async stakedToken (\n    accountAddress: string,\n    {\n      tokenAddress,\n      tokenLogoURI,\n      tokenName,\n      tokenSymbol,\n      unStakeTokenAddress\n    }: StakingOption) {\n    const liquidStakingContract = new Contract(this.address, LiquidStakingABI, this.provider)\n    const sfContract = new Contract(this.sfTokenAddress, Erc20ABI, this.provider)\n\n    const priceRatio = await liquidStakingContract.priceRatio()\n    const sfBalance = await sfContract.balanceOf(accountAddress)\n\n    const stakedAmount = Number(formatEther(sfBalance.toString())) * Number(formatEther(priceRatio.toString()))\n    const fusePrice = await this.tradeService.getTokenPrice(this.wfuseAddress)\n    const stakedAmountUSD = stakedAmount * fusePrice\n    const earnedAmountUSD = 0\n\n    const stakingApr = await this.stakingApr()\n\n    return {\n      tokenAddress,\n      tokenLogoURI,\n      tokenName,\n      tokenSymbol,\n      unStakeTokenAddress,\n      stakedAmount,\n      stakedAmountUSD,\n      earnedAmountUSD,\n      stakingApr\n    }\n  }\n\n  async stakingApr () {\n    try {\n      const consensusContract = new Contract(this.consensusAddress, ConsensusABI, this.provider)\n      const blockRewardContract = new Contract(this.blockRewardAddress, BlockRewardABI, this.provider)\n      const validatorFee = Number(this.validatorFee)\n      const totalStakeAmount: BigInt = await consensusContract.totalStakeAmount()\n      const rewardPerBlock: BigInt = await blockRewardContract.getBlockRewardAmount()\n      const blocksPerYear: BigInt = await blockRewardContract.getBlocksPerYear()\n\n      const rewardPerYearApr = (Number(formatEther(rewardPerBlock.toString())) * Number(blocksPerYear) * (1 - validatorFee) / Number(formatEther(totalStakeAmount.toString()))) * 100\n\n      return aprToApy(rewardPerYearApr, 365)\n    } catch (error) {\n      this.logger.error(`stakingApr error: ${error}`)\n    }\n  }\n\n  async tvl () {\n    try {\n      const liquidStakingContract = new Contract(this.address, LiquidStakingABI, this.provider)\n      const totalStaked = await liquidStakingContract.systemTotalStaked()\n      const fusePrice = await this.tradeService.getTokenPrice(this.wfuseAddress)\n\n      return Number(formatEther(totalStaked.toString())) * fusePrice\n    } catch (error) {\n      this.logger.error(`tvl error: ${error}`)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GasService.html":{"url":"injectables/GasService.html","title":"injectable - GasService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/gas.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchTransactionGasCosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchTransactionGasCosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTransactionGasCosts(transactionHash: string, rpcProvider: BaseProvider)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/gas.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                rpcProvider\n                                            \n                                                        BaseProvider\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GasService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/services/gas.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { BaseProvider } from 'nestjs-ethers'\n\n@Injectable()\nexport class GasService {\n  private readonly logger = new Logger(GasService.name)\n\n  async fetchTransactionGasCosts (transactionHash: string, rpcProvider: BaseProvider) {\n    const [tx, txReceipt] = await Promise.all([\n      rpcProvider.getTransaction(transactionHash),\n      rpcProvider.getTransactionReceipt(transactionHash)\n    ])\n\n    const gasPrice = tx?.gasPrice?.toString() || '0'\n    const gasUsed = txReceipt?.gasUsed?.toString() || '0'\n    const gasFee = tx?.gasPrice?.mul(txReceipt?.gasUsed)?.toString() || '0'\n    const gasLimit = tx?.gasLimit?.toString() || '0'\n    const txnValue = tx?.value?.toString() || '0'\n\n    return {\n      gasPrice,\n      gasUsed,\n      gasFee,\n      gasLimit,\n      txnValue\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphQLService.html":{"url":"injectables/GraphQLService.html","title":"injectable - GraphQLService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphQLService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/graphql.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchFromGraphQL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/graphql.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchFromGraphQL\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchFromGraphQL(graphApiUrl, query, variables)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/graphql.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                graphApiUrl\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                query\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                variables\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { Injectable } from '@nestjs/common'\nimport { lastValueFrom, map } from 'rxjs'\n\n@Injectable()\nexport default class GraphQLService {\n  constructor (\n    private readonly httpService: HttpService\n  ) { }\n\n  async fetchFromGraphQL (graphApiUrl, query, variables) {\n    const observable = this.httpService\n      .post(graphApiUrl, { query, variables })\n      .pipe(map(res => res.data))\n    return await lastValueFrom(observable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphService.html":{"url":"injectables/GraphService.html","title":"injectable - GraphService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/graph.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                blockClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                voltageClient\n                            \n                            \n                                    Private\n                                    Readonly\n                                voltBarClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBlockClient\n                            \n                            \n                                getVoltageClient\n                            \n                            \n                                getVoltBarClient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-network-service/src/staking/graph.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBlockClient\n                        \n                    \n                \n            \n            \n                \ngetBlockClient()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/graph.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GraphQLClient\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVoltageClient\n                        \n                    \n                \n            \n            \n                \ngetVoltageClient()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/graph.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GraphQLClient\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getVoltBarClient\n                        \n                    \n                \n            \n            \n                \ngetVoltBarClient()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/graph.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     GraphQLClient\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        blockClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GraphQLClient\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/graph.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        voltageClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GraphQLClient\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/graph.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        voltBarClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GraphQLClient\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/graph.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { GraphQLClient } from 'graphql-request'\n\n@Injectable()\nexport default class GraphService {\n  private readonly voltBarClient: GraphQLClient\n  private readonly blockClient: GraphQLClient\n  private readonly voltageClient: GraphQLClient\n\n  constructor (\n    private configService: ConfigService\n  ) {\n    this.voltBarClient = new GraphQLClient(this.configService.get('voltBarGraphUrl'))\n    this.blockClient = new GraphQLClient(this.configService.get('blockGraphUrl'))\n    this.voltageClient = new GraphQLClient(this.configService.get('voltageGraphUrl'))\n  }\n\n  getVoltBarClient () {\n    return this.voltBarClient\n  }\n\n  getBlockClient () {\n    return this.blockClient\n  }\n\n  getVoltageClient () {\n    return this.voltageClient\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphqlAPIController.html":{"url":"controllers/GraphqlAPIController.html","title":"controller - GraphqlAPIController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphqlAPIController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/graphql-api/graphql-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v0/graphql\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCollectiblesByOwner\n                            \n                            \n                                    \n                                getUserOpsBySender\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getCollectiblesByOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCollectiblesByOwner(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('collectibles/:address')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/graphql-api/graphql-api.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUserOpsBySender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserOpsBySender(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('userops/:address')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/graphql-api/graphql-api.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\nimport { GraphqlAPIService } from '@app/api-service/graphql-api/graphql-api.service'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@Controller('v0/graphql')\nexport class GraphqlAPIController {\n  constructor (\n    private readonly graphqlAPIService: GraphqlAPIService\n  ) { }\n\n  @Get('collectibles/:address')\n  getCollectiblesByOwner (@Param('address') address: string) {\n    return this.graphqlAPIService.getCollectiblesByOwner(address)\n  }\n\n  @Get('userops/:address')\n  getUserOpsBySender (@Param('address') address: string) {\n    return this.graphqlAPIService.getUserOpsBySender(address)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlAPIModule.html":{"url":"modules/GraphqlAPIModule.html","title":"module - GraphqlAPIModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlAPIModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphqlAPIModule\n\n\n\ncluster_GraphqlAPIModule_providers\n\n\n\ncluster_GraphqlAPIModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nGraphqlAPIModule\n\nGraphqlAPIModule\n\nGraphqlAPIModule -->\n\nApiKeyModule->GraphqlAPIModule\n\n\n\n\n\nGraphqlAPIService\n\nGraphqlAPIService\n\nGraphqlAPIModule -->\n\nGraphqlAPIService->GraphqlAPIModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/graphql-api/graphql-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphqlAPIService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphqlAPIController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { GraphqlAPIController } from 'apps/charge-api-service/src/graphql-api/graphql-api.controller'\nimport { GraphqlAPIService } from 'apps/charge-api-service/src/graphql-api/graphql-api.service'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: networkService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.NETWORK_HOST,\n          port: parseInt(process.env.NETWORK_TCP_PORT)\n        }\n      }\n    ]),\n    ApiKeyModule\n  ],\n  providers: [GraphqlAPIService],\n  controllers: [GraphqlAPIController]\n})\nexport class GraphqlAPIModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GraphqlAPIService.html":{"url":"injectables/GraphqlAPIService.html","title":"injectable - GraphqlAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GraphqlAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/graphql-api/graphql-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCollectiblesByOwner\n                            \n                            \n                                    Async\n                                getUserOpsBySender\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(networkClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/graphql-api/graphql-api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        networkClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCollectiblesByOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCollectiblesByOwner(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/graphql-api/graphql-api.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserOpsBySender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserOpsBySender(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/graphql-api/graphql-api.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\n\n@Injectable()\nexport class GraphqlAPIService {\n  constructor (\n    @Inject(networkService) private readonly networkClient: ClientProxy\n  ) { }\n\n  async getCollectiblesByOwner (address: string): Promise {\n    return callMSFunction(this.networkClient, 'get_collectibles_by_owner', address)\n  }\n\n  async getUserOpsBySender (address: string): Promise {\n    return callMSFunction(this.networkClient, 'get_userops_by_sender', address)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GraphqlController.html":{"url":"controllers/GraphqlController.html","title":"controller - GraphqlController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GraphqlController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/graphql/graphql.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                graphql\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCollectiblesByOwner\n                            \n                            \n                                    \n                                getUserOpsBySender\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getCollectiblesByOwner\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCollectiblesByOwner(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_collectibles_by_owner')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/graphql/graphql.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUserOpsBySender\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserOpsBySender(sender: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_userops_by_sender')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/graphql/graphql.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sender\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import GraphQLService from '@app/common/services/graphql.service'\nimport { Controller } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { getCollectiblesByOwner } from '@app/network-service/common/constants/graph-queries/nfts'\nimport { getUserOpsBySender } from '@app/network-service/common/constants/graph-queries/aa'\n\n@Controller('graphql')\nexport class GraphqlController {\n  constructor (\n    private readonly configService: ConfigService,\n    private readonly graphQLService: GraphQLService\n  ) { }\n\n  get nftGraphUrl () {\n    return this.configService.get('nftGraphUrl')\n  }\n\n  get accountAbstractionGraphUrl () {\n    return this.configService.get('accountAbstractionGraphUrl')\n  }\n\n  @MessagePattern('get_collectibles_by_owner')\n  getCollectiblesByOwner (address: string) {\n    return this.graphQLService.fetchFromGraphQL(this.nftGraphUrl, getCollectiblesByOwner, { address: address.toLowerCase() })\n  }\n\n  @MessagePattern('get_userops_by_sender')\n  getUserOpsBySender (sender: string) {\n    return this.graphQLService.fetchFromGraphQL(this.accountAbstractionGraphUrl, getUserOpsBySender, { sender: sender.toLowerCase() })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphqlModule.html":{"url":"modules/GraphqlModule.html","title":"module - GraphqlModule","body":"\n                   \n\n\n\n\n    Modules\n    GraphqlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\n\nGraphQLService\n\nGraphQLService\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nGraphqlModule -->\n\nGraphQLService->GraphqlModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-network-service/src/graphql/graphql.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GraphQLService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GraphqlController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GraphqlController } from 'apps/charge-network-service/src/graphql/graphql.controller'\nimport GraphQLService from '@app/common/services/graphql.service'\nimport { ConfigModule } from '@nestjs/config'\nimport { HttpModule } from '@nestjs/axios'\nimport configuration from 'apps/charge-network-service/src/common/config/configuration'\n\n@Module({\n  imports: [\n    ConfigModule.forFeature(configuration),\n    HttpModule\n  ],\n  controllers: [GraphqlController],\n  providers: [GraphQLService]\n})\nexport class GraphqlModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISmartWalletUser.html":{"url":"interfaces/ISmartWalletUser.html","title":"interface - ISmartWalletUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISmartWalletUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/interfaces/smart-wallet.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ownerAddress\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            smartWalletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smartWalletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smartWalletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ISmartWalletUser {\n  readonly ownerAddress: string;\n  readonly projectId: string;\n  query?: Record;\n  smartWalletAddress?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidator.html":{"url":"interfaces/IValidator.html","title":"interface - IValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/consensus/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            apy\n                                        \n                                \n                                \n                                        \n                                            delegators\n                                        \n                                \n                                \n                                        \n                                            delegatorsLength\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstSeen\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            forDelegation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isJailed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isPending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            stakeAmount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            totalValidated\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uptime\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delegators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delegators:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delegatorsLength\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delegatorsLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSeen\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstSeen:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forDelegation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forDelegation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isJailed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isJailed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakeAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakeAmount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalValidated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalValidated:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uptime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uptime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IValidator {\n    address: string\n    stakeAmount: string\n    fee: string\n    delegatorsLength: string\n    delegators: { [address: string]: { amount: string; amountFormatted: string } };\n    name?: string\n    website?: string\n    firstSeen?: string\n    status?: string\n    image?: string\n    forDelegation?: boolean\n    totalValidated?: number\n    uptime?: number\n    description?: string\n    isPending?: boolean\n    isJailed?: boolean,\n    apy?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsAccountOwnerGuard.html":{"url":"guards/IsAccountOwnerGuard.html","title":"guard - IsAccountOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsAccountOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-accounts-service/src/users/guards/is-account-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/users/guards/is-account-owner.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/guards/is-account-owner.guard.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { UsersService } from '@app/accounts-service/users/users.service'\n\n@Injectable()\nexport class IsAccountOwnerGuard implements CanActivate {\n  constructor (private usersService: UsersService) {}\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { params }: { params: { id: string } } = request\n    const auth0Id = request?.user?.sub\n    const userById = await this.usersService.findOne(params.id)\n\n    if (!auth0Id || !userById || auth0Id !== userById.auth0Id) return false\n\n    return true\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsApiKeyProjectMatchGuard.html":{"url":"guards/IsApiKeyProjectMatchGuard.html","title":"guard - IsApiKeyProjectMatchGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsApiKeyProjectMatchGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-api-service/src/api-keys/guards/is-api-key-project-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/api-keys/guards/is-api-key-project-owner.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/guards/is-api-key-project-owner.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { NotificationsService } from '@app/api-service/notifications/notifications.service'\nimport { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { ApiKeysService } from '@app/api-service/api-keys/api-keys.service'\nimport { isEmpty } from 'lodash'\n\n@Injectable()\nexport class IsApiKeyProjectMatchGuard implements CanActivate {\n  constructor (\n    private apiKeysService: ApiKeysService,\n    private notificationService: NotificationsService\n  ) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { query }: { query: { apiKey: string } } = request\n    const { params }: { params: {projectId: string, webhookId: string } } = request\n    const { body } : { body: { projectId: string, webhookId: string } } = request\n\n    let projectId = params?.projectId || body?.projectId\n\n    if (isEmpty(projectId)) {\n      const webhookId = params?.webhookId || body?.webhookId\n      const webhook = await this.notificationService.getWebhook(webhookId)\n\n      if (isEmpty(webhook)) {\n        return false\n      }\n\n      projectId = webhook?.projectId\n    }\n\n    const projectApiKey = await this.apiKeysService.findOne({\n      publicKey: query?.apiKey,\n      projectId\n    })\n\n    if (!isEmpty(projectApiKey)) {\n      return true\n    }\n    return false\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsCreatorOwnerGuard.html":{"url":"guards/IsCreatorOwnerGuard.html","title":"guard - IsCreatorOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsCreatorOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-accounts-service/src/projects/guards/is-creator-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/projects/guards/is-creator-owner.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/guards/is-creator-owner.guard.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { UsersService } from '@app/accounts-service/users/users.service'\n\n@Injectable()\nexport class IsCreatorOwnerGuard implements CanActivate {\n  constructor (private usersService: UsersService) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const ownerId = request.body?.ownerId\n    const auth0Id = request?.user?.sub\n    const userById = await this.usersService.findOne(ownerId)\n\n    if (!auth0Id || !userById || auth0Id !== userById.auth0Id) return false\n\n    return true\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsPrdOrSbxKeyGuard.html":{"url":"guards/IsPrdOrSbxKeyGuard.html","title":"guard - IsPrdOrSbxKeyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsPrdOrSbxKeyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-api-service/src/api-keys/guards/is-production-or-sandbox-key.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/api-keys/guards/is-production-or-sandbox-key.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/guards/is-production-or-sandbox-key.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { ApiKeysService } from 'apps/charge-api-service/src/api-keys/api-keys.service'\nimport { isEmpty } from 'lodash'\n\n@Injectable()\nexport class IsPrdOrSbxKeyGuard implements CanActivate {\n  constructor (private apiKeysService: ApiKeysService) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { query }: { query: { apiKey: string } } = request\n    let apiKey\n    if (isEmpty(query?.apiKey)) return false\n    if (query?.apiKey.includes('pk_test_')) {\n      apiKey = await this.apiKeysService.findOne({ sandboxKey: query?.apiKey })\n      if (!isEmpty(apiKey)) {\n        request.projectId = apiKey.projectId\n        request.environment = 'sandbox'\n        return true\n      }\n    } else {\n      apiKey = await this.apiKeysService.findOne({ publicKey: query?.apiKey })\n      if (!isEmpty(apiKey)) {\n        request.projectId = apiKey.projectId\n        request.environment = 'production'\n        return true\n      }\n    }\n    return false\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsProjectOwnerGuard.html":{"url":"guards/IsProjectOwnerGuard.html","title":"guard - IsProjectOwnerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsProjectOwnerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-accounts-service/src/projects/guards/is-project-owner.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, projectsService: ProjectsService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/projects/guards/is-project-owner.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectsService\n                                                  \n                                                        \n                                                                        ProjectsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/guards/is-project-owner.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { ProjectsService } from '@app/accounts-service/projects/projects.service'\n\n@Injectable()\nexport class IsProjectOwnerGuard implements CanActivate {\n  constructor (\n    private usersService: UsersService,\n    private projectsService: ProjectsService\n  ) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { params }: { params: { id: string; projectId: string } } = request\n    const auth0Id = request?.user?.sub\n    const projectId = params.id || params.projectId\n    const project = await this.projectsService.findOne(projectId)\n    const userById = await this.usersService.findOne(project?.ownerId)\n\n    if (!auth0Id || !userById || auth0Id !== userById.auth0Id) return false\n\n    return true\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsValidApiKeysGuard.html":{"url":"guards/IsValidApiKeysGuard.html","title":"guard - IsValidApiKeysGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsValidApiKeysGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-api-service/src/api-keys/guards/is-valid-api-keys.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/api-keys/guards/is-valid-api-keys.guard.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/guards/is-valid-api-keys.guard.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { ApiKeysService } from 'apps/charge-api-service/src/api-keys/api-keys.service'\nimport * as bcrypt from 'bcryptjs'\n@Injectable()\nexport class IsValidApiKeysGuard implements CanActivate {\n  constructor (private apiKeysService: ApiKeysService) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { query }: { query: { apiKey: string } } = request\n    const projectApiKey = await this.apiKeysService.findOne({ publicKey: query?.apiKey })\n    const projectSecretHash = projectApiKey?.secretHash\n    const secretKey = request.header('API-SECRET')\n\n    if (projectSecretHash && secretKey) {\n      request.projectId = projectApiKey.projectId\n      return await bcrypt.compare(secretKey, projectSecretHash)\n    }\n    return false\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsValidApiKeysGuard-1.html":{"url":"guards/IsValidApiKeysGuard-1.html","title":"guard - IsValidApiKeysGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsValidApiKeysGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-apps-service/src/api-keys/guards/is-valid-api-keys.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/api-keys/guards/is-valid-api-keys.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/api-keys/guards/is-valid-api-keys.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { ApiKeysService } from 'apps/charge-apps-service/src/api-keys/api-keys.service'\nimport * as bcrypt from 'bcryptjs'\n\n@Injectable()\nexport class IsValidApiKeysGuard implements CanActivate {\n  constructor (private apiKeysService: ApiKeysService) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const contextType = context.getType()\n\n    if (contextType === 'rpc') {\n      return true\n    }\n\n    const request = context.switchToHttp().getRequest()\n    const { query }: { query: { apiKey: string } } = request\n    const appApiKey = await this.apiKeysService.findOne({ publicKey: query?.apiKey })\n    const projectSecretHash = appApiKey?.secretHash\n    const secretKey = request.header('API-SECRET')\n\n    request.userId = appApiKey?.ownerId\n\n    if (projectSecretHash && secretKey) {\n      return await bcrypt.compare(secretKey, projectSecretHash)\n    }\n    return false\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/IsValidPublicApiKeyGuard.html":{"url":"guards/IsValidPublicApiKeyGuard.html","title":"guard - IsValidPublicApiKeyGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    IsValidPublicApiKeyGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/charge-api-service/src/api-keys/guards/is-valid-public-api-key.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/api-keys/guards/is-valid-public-api-key.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/api-keys/guards/is-valid-public-api-key.guard.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common'\nimport { ApiKeysService } from 'apps/charge-api-service/src/api-keys/api-keys.service'\nimport { isEmpty } from 'lodash'\n\n@Injectable()\nexport class IsValidPublicApiKeyGuard implements CanActivate {\n  constructor (private apiKeysService: ApiKeysService) { }\n\n  async canActivate (context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest()\n    const { query }: { query: { apiKey: string } } = request\n    const projectApiKey = await this.apiKeysService.findOne({ publicKey: query?.apiKey })\n\n    if (!isEmpty(projectApiKey) && !isEmpty(query?.apiKey)) {\n      request.projectId = projectApiKey.projectId\n      return true\n    }\n    return false\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuard(['jwt', operatorJwtString])\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { AuthGuard } from '@nestjs/passport'\nimport { operatorJwtString } from '@app/accounts-service/operators/operators.constants'\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(['jwt', operatorJwtString]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/auth/jwt.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { passportJwtSecret } from 'jwks-rsa'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor () {\n    super({\n      secretOrKeyProvider: passportJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: `${process.env.AUTH0_ISSUER_URL}.well-known/jwks.json`\n      }),\n\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      audience: process.env.AUTH0_AUDIENCE,\n      issuer: `${process.env.AUTH0_ISSUER_URL}`,\n      algorithms: ['RS256']\n    })\n  }\n\n  validate (payload: unknown): unknown {\n    return payload\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy-1.html":{"url":"injectables/JwtStrategy-1.html","title":"injectable - JwtStrategy-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/smart-wallets-api/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/smart-wallets-api/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/jwt.strategy.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor (\n    private readonly configService: ConfigService\n  ) {\n    super({\n      secretOrKey: configService.get('SMART_WALLETS_JWT_SECRET'),\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken()\n    })\n  }\n\n  validate (payload: unknown): unknown {\n    return payload\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LegacyAdminApiController.html":{"url":"controllers/LegacyAdminApiController.html","title":"controller - LegacyAdminApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LegacyAdminApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-admin-api/legacy-admin-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                getTokens\n                            \n                            \n                                    \n                                getWallets\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/*')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-admin-api/legacy-admin-api.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokens()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/tokens/*')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-admin-api/legacy-admin-api.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getWallets\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWallets()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/wallets/*')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-admin-api/legacy-admin-api.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/*')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-admin-api/legacy-admin-api.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { IsValidApiKeysGuard } from '@app/api-service/api-keys/guards/is-valid-api-keys.guard'\nimport { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { LegacyApiInterceptor } from '@app/api-service/legacy-api/legacy-api.interceptor'\n\n@UseGuards(IsValidApiKeysGuard)\n@UseInterceptors(LegacyApiInterceptor)\n@Controller({ path: 'v0/admin' })\nexport class LegacyAdminApiController {\n  @Get('/wallets/*')\n  getWallets () {}\n\n  @Get('/tokens/*')\n  getTokens () {}\n\n  @Get('/*')\n  get () { }\n\n  @Post('/*')\n  post () { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LegacyApiInterceptor.html":{"url":"injectables/LegacyApiInterceptor.html","title":"injectable - LegacyApiInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LegacyApiInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-api.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                intercept\n                            \n                            \n                                    Private\n                                    Async\n                                prepareRequestConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiKeysService: ApiKeysService, httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/legacy-api/legacy-api.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiKeysService\n                                                  \n                                                        \n                                                                        ApiKeysService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-api.interceptor.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        prepareRequestConfig\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareRequestConfig(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-api.interceptor.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LegacyApiInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-api-service/src/legacy-api/legacy-api.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ApiKeysService } from '@app/api-service/api-keys/api-keys.service'\nimport { HttpService } from '@nestjs/axios'\nimport { Injectable, NestInterceptor, ExecutionContext, HttpException, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { catchError, map } from 'rxjs/operators'\nimport { get, isEmpty } from 'lodash'\nimport { AxiosRequestConfig, AxiosResponse } from 'axios'\n\n@Injectable()\nexport class LegacyApiInterceptor implements NestInterceptor {\n  private readonly logger = new Logger(LegacyApiInterceptor.name)\n\n  constructor (\n    private apiKeysService: ApiKeysService,\n    private httpService: HttpService,\n    private configService: ConfigService\n  ) { }\n\n  async intercept (context: ExecutionContext): Promise {\n    const requestConfig: AxiosRequestConfig = await this.prepareRequestConfig(context)\n\n    const response = await this.httpService\n      .request(\n        requestConfig\n      )\n      .pipe(\n        map((axiosResponse: AxiosResponse) => {\n          return axiosResponse.data\n        })\n      )\n      .pipe(\n        catchError(e => {\n          const errorReason = e?.response?.data?.error ||\n            e?.response?.data?.errors?.message || ''\n\n          throw new HttpException(\n            `${e?.response?.statusText}: ${errorReason}`,\n            e?.response?.status\n          )\n        })\n      )\n\n    return response\n  }\n\n  private async prepareRequestConfig (context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest()\n\n    const ctxClassName = context.getClass().name\n    const ctxHandlerName = context.getHandler().name\n    const query = request.query\n    const params = request.params\n    const body = request.body || {}\n    const requestHeaders = request.headers\n\n    // Get the configuration for the relevant Legacy API\n    const config = this.configService.get>(ctxClassName)\n\n    // Replace headers if needed based on the configuration\n    let headers: Record = {\n      'Content-Type': 'application/json'\n    }\n\n    if (config.replaceHeaders) {\n      const projectJwt = await this.apiKeysService.getProjectJwt({ publicKey: query?.apiKey })\n      headers = {\n        Authorization: `Bearer ${projectJwt}`\n      }\n    } else if (get(requestHeaders, 'authorization')) {\n      headers = {\n        Authorization: get(requestHeaders, 'authorization')\n      }\n    }\n\n    if (config.addCommunityAddressForPostRequests &&\n      ctxHandlerName === 'post' &&\n      isEmpty(body?.communityAddress)) {\n      const projectId = await this.apiKeysService.getProjectIdByPublicKey(query?.apiKey)\n      body.communityAddress = projectId\n    }\n\n    // Build the final request configuration\n    let requestConfig: AxiosRequestConfig\n\n    // Handle the special case of fetching wallets for Admin API through legacy Wallets API\n    if (ctxHandlerName === 'getWallets') {\n      const baseUrl = this.configService.get>('LegacyWalletApiController')?.baseUrl\n      requestConfig = {\n        url: `${baseUrl}/wallets/${params[0]}`,\n        method: 'get',\n        headers\n      }\n      // Handle the special case of fetching tokens for Admin API through legacy v1 Tokens API\n    } else if (ctxHandlerName === 'getTokens') {\n      const baseUrl = this.configService.get>('LegacyV1ApiUrl')\n      requestConfig = {\n        url: `${baseUrl}/tokens/${params[0]}`,\n        method: 'get',\n        headers\n      }\n    } else {\n      requestConfig = {\n        url: `${config?.baseUrl}/${params[0]}`,\n        method: ctxHandlerName,\n        headers\n      }\n    }\n\n    if (!isEmpty(body)) {\n      requestConfig.data = body\n    }\n\n    if (!isEmpty(query)) {\n      requestConfig.params = query\n    }\n    return requestConfig\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LegacyApiModule.html":{"url":"modules/LegacyApiModule.html","title":"module - LegacyApiModule","body":"\n                   \n\n\n\n\n    Modules\n    LegacyApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LegacyApiModule\n\n\n\ncluster_LegacyApiModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nLegacyApiModule\n\nLegacyApiModule\n\nLegacyApiModule -->\n\nApiKeyModule->LegacyApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            LegacyWalletApiController\n                        \n                        \n                            LegacyAdminApiController\n                        \n                        \n                            LegacyJobsApiController\n                        \n                        \n                            LegacyTradeApiController\n                        \n                        \n                            TradeApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { LegacyWalletApiController } from '@app/api-service/legacy-api/legacy-wallet-api/legacy-wallet-api.controller'\nimport { LegacyAdminApiController } from '@app/api-service/legacy-api/legacy-admin-api/legacy-admin-api.controller'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { HttpModule } from '@nestjs/axios'\nimport { LegacyJobsApiController } from '@app/api-service/legacy-api/legacy-jobs-api/legacy-jobs-api.controller'\nimport { ConfigModule } from '@nestjs/config'\nimport configuration from '@app/api-service/legacy-api/config/configuration'\nimport { LegacyTradeApiController } from '@app/api-service/legacy-api/legacy-trade-api/legacy-trade-api.controller'\nimport { TradeApiController } from '@app/api-service/legacy-api/legacy-trade-api/legacy-trade-api-v2.controller'\n\n@Module({\n  imports: [\n    ApiKeyModule,\n    HttpModule,\n    ConfigModule.forFeature(configuration)\n  ],\n  controllers: [\n    LegacyWalletApiController,\n    LegacyAdminApiController,\n    LegacyJobsApiController,\n    LegacyTradeApiController,\n    TradeApiController\n  ]\n})\nexport class LegacyApiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LegacyEventEmitter.html":{"url":"classes/LegacyEventEmitter.html","title":"class - LegacyEventEmitter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LegacyEventEmitter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/fuseLegacySDK.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        EventEmitter\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BigNumber, Wallet, ethers } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport axios, { AxiosError, AxiosInstance } from 'axios'\nimport { Centrifuge } from 'centrifuge'\nimport EventEmitter from 'events'\nimport WebSocket from 'ws'\nimport { jwtDecode } from 'jwt-decode'\nimport { websocketEvents } from '@app/smart-wallets-service/smart-wallets/constants/smart-wallets.constants'\n\ntype WalletModuleAddresses = {\n  GuardianManager: string;\n  LockManager: string;\n  RecoveryManager: string;\n  ApprovedTransfer: string;\n  TransferManager: string;\n  NftTransfer: string;\n  TokenExchanger: string;\n  CommunityManager: string;\n  WalletOwnershipManager: string;\n};\n\ntype SmartWallet = {\n  smartWalletAddress: string;\n  walletModules: WalletModuleAddresses;\n  networks: string[];\n  version: string;\n  paddedVersion: string;\n  ownerAddress: string;\n};\n\nconst Variables = {\n  FUSE_API_BASE_URL: process.env.FUSE_API_BASE_URL ?? 'https://api.fuse.io',\n  DEFAULT_GAS_LIMIT: process.env.DEFAULT_GAS_LIMIT ?? 700000,\n  SOCKET_SERVER_URL: process.env.SOCKET_SERVER_URL ?? 'wss://ws.fuse.io/connection/websocket'\n}\n\nconst ABI = {\n  constant: false,\n  inputs: [\n    {\n      name: '_wallet',\n      type: 'address'\n    },\n    {\n      name: '_token',\n      type: 'address'\n    },\n    {\n      name: '_to',\n      type: 'address'\n    },\n    {\n      name: '_amount',\n      type: 'uint256'\n    },\n    {\n      name: '_data',\n      type: 'bytes'\n    }\n  ],\n  name: 'transferToken',\n  outputs: [],\n  payable: false,\n  stateMutability: 'nonpayable',\n  type: 'function'\n}\n\nclass LegacyEventEmitter extends EventEmitter { }\n\nexport class FuseLegacySDK {\n  private readonly _axios: AxiosInstance\n  private _credentials: Wallet\n  private _from: string\n  private _smartWalletsJwt: string\n  private _wallet: SmartWallet\n  private _socketClient = new Centrifuge(Variables.SOCKET_SERVER_URL)\n  public events = new LegacyEventEmitter()\n\n  constructor (public readonly publicApiKey: string) {\n    this._axios = axios.create({\n      baseURL: `${Variables.FUSE_API_BASE_URL}/api`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        apiKey: publicApiKey\n      }\n    })\n  }\n\n  init = async (\n    credentials: Wallet\n  ) => {\n    this._credentials = credentials\n\n    try {\n      this._from = await credentials.getAddress()\n      const { hash, signature } = await this._signer(this._credentials, this._from)\n      this._smartWalletsJwt = await this.authenticate(hash, signature, this._from)\n      await this._initWebsocket()\n    } catch (error) {\n      throw new Error(error)\n    }\n\n    try {\n      this._wallet = await this.getWallet()\n    } catch (error) {\n      const createWallet = await this.createWallet()\n      await createWallet.wait()\n\n      this._wallet = await this.getWallet()\n      if (!this._wallet.smartWalletAddress) {\n        throw new Error(\"Couldn't retrieve smart wallet due to an invalid JWT. Please try again.\")\n      }\n    }\n  }\n\n  private _initWebsocket = async (): Promise => {\n    try {\n      const decodedJwt: any = jwtDecode(this._smartWalletsJwt)\n      this._socketClient = new Centrifuge(\n        Variables.SOCKET_SERVER_URL,\n        {\n          websocket: WebSocket,\n          token: this._smartWalletsJwt,\n          name: decodedJwt.sub\n        }\n      )\n      this._socketClient.connect()\n      await this._socketClient.ready()\n    } catch (error) {\n      this._throwError('Unable to establish legacy websocket connection with Centrifuge', error)\n    }\n  }\n\n  private _signer = async (\n    credentials: ethers.Signer,\n    ownerAddress: string\n  ): Promise => {\n    const input = Uint8Array.from(Buffer.from(ownerAddress.replace('0x', ''), 'hex'))\n    const hash = ethers.utils.keccak256(input)\n    const signature = await credentials.signMessage(ethers.utils.arrayify(hash))\n    return { hash, signature }\n  }\n\n  private _signOffChain = (\n    credentials: Wallet,\n    from: string,\n    to: string,\n    data: string,\n    nonce: string,\n    options?: {\n      value?: BigNumber;\n      gasPrice?: BigNumber;\n      gasLimit?: BigNumber;\n    }\n  ): Promise => {\n    const value = options?.value ?? BigNumber.from(0)\n    const gasPrice = options?.gasPrice ?? BigNumber.from(0)\n    const gasLimit =\n      options?.gasLimit ?? BigNumber.from(Variables.DEFAULT_GAS_LIMIT)\n\n    const inputArr = [\n      '0x19',\n      '0x00',\n      from,\n      to,\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(value), 32),\n      data,\n      nonce,\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(gasPrice), 32),\n      ethers.utils.hexZeroPad(ethers.utils.hexlify(gasLimit), 32)\n    ]\n\n    const input = `0x${inputArr.map((hexStr) => hexStr.slice(2)).join('')}`\n\n    const messagePayload = ethers.utils.keccak256(ethers.utils.arrayify(input))\n    const signature = credentials.signMessage(messagePayload)\n\n    return signature\n  }\n\n  private _getNonce = async (): Promise => {\n    const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL)\n\n    const block = await provider.getBlockNumber()\n    const timestamp = Date.now()\n\n    const blockHex = ethers.utils.hexZeroPad(ethers.utils.hexlify(block), 16)\n    const timestampHex = ethers.utils.hexZeroPad(ethers.utils.hexlify(timestamp), 16)\n\n    const combinedHex = blockHex.substring(2) + timestampHex.substring(2)\n\n    return ethers.utils.hexlify(ethers.utils.arrayify('0x' + combinedHex))\n  }\n\n  private _encodedDataForContractCall = (abi: any, methodName: string, values: any[]) => {\n    const iface = new Interface([abi])\n    return iface.encodeFunctionData(methodName, values)\n  }\n\n  private _throwError = (message: string, error: Error | AxiosError) => {\n    let err: string | unknown = error.message\n    if (axios.isAxiosError(error)) {\n      if (error.response) {\n        err = error.response.data\n      } else if (error.request) {\n        err = error.request\n      }\n    }\n\n    this._socketClient.disconnect()\n\n    throw new Error(`${message} ${JSON.stringify(err)}`)\n  }\n\n  authenticate = async (\n    hash: string,\n    signature: string,\n    ownerAddress: string\n  ) => {\n    try {\n      const response = await this._axios.post('/v1/smart-wallets/auth', {\n        hash,\n        signature,\n        ownerAddress\n      })\n      return response.data.jwt\n    } catch (error) {\n      console.log({ error })\n\n      this._throwError(\n        'Unable to authenticate legacy smart wallet. Please try again.',\n        error\n      )\n    }\n  }\n\n  createWallet = async () => {\n    try {\n      const response = await this._axios.post('/v1/smart-wallets/create', {}, {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n\n      const subscription = this._socketClient.newSubscription(`transaction:#${response.data.transactionId}`)\n      subscription.on('publication', ctx => {\n        this.events.emit(ctx.data.eventName, ctx.data.eventData)\n      })\n\n      return {\n        data: response.data,\n        wait: () => {\n          return new Promise((resolve) => {\n            this.events.once(websocketEvents.WALLET_CREATION_SUCCEEDED, (data) => {\n              subscription.off('publication', () => {})\n              resolve(data)\n            })\n          })\n        }\n      }\n    } catch (error) {\n      this._throwError(\n        \"Couldn't create a legacy smart wallet. Please try again.\",\n        error\n      )\n    }\n  }\n\n  getWallet = async (): Promise => {\n    try {\n      const response = await this._axios.get('/v1/smart-wallets', {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n      return response.data\n    } catch (error) {\n      this._throwError(\n        'Unable to retrieve legacy smart wallet. Please try again.',\n        error\n      )\n    }\n  }\n\n  relay = async (\n    to: string,\n    amount: BigNumber\n  ) => {\n    try {\n      const walletModule = 'TransferManager'\n      const methodName = 'transferToken'\n      const tokenAddress = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n      const transactionData = '0x'\n      const nonce = await this._getNonce()\n      const data = this._encodedDataForContractCall(ABI, methodName, [\n        this._wallet.smartWalletAddress,\n        tokenAddress,\n        to,\n        amount,\n        transactionData\n      ])\n      const signature = await this._signOffChain(\n        this._credentials,\n        this._wallet.walletModules.TransferManager,\n        this._wallet.smartWalletAddress,\n        data,\n        nonce\n      )\n      const transactionBody = {\n        status: 'pending',\n        from: this._wallet.smartWalletAddress,\n        to,\n        value: amount.toString(),\n        type: 'SEND',\n        asset: 'FUSE',\n        tokenName: 'FuseToken',\n        tokenSymbol: 'FUSE',\n        tokenDecimal: 18,\n        tokenAddress\n      }\n\n      const body = {\n        gasPrice: 0,\n        gasLimit: 700000,\n        relayBody: null,\n        txMetadata: null,\n        transactionBody,\n        walletAddress: this._wallet.smartWalletAddress,\n        walletModuleAddress: this._wallet.walletModules.TransferManager,\n        data,\n        nonce,\n        methodName,\n        signature,\n        walletModule\n      }\n\n      const response = await this._axios.post('/v1/smart-wallets/relay', body, {\n        headers: {\n          Authorization: `Bearer ${this._smartWalletsJwt}`\n        }\n      })\n\n      const subscription = this._socketClient.newSubscription(`transaction:#${response.data.transactionId}`)\n      subscription.on('publication', ctx => {\n        this.events.emit(ctx.data.eventName, ctx.data.eventData)\n      })\n\n      return {\n        data: response.data,\n        wait: () => {\n          return new Promise((resolve, reject) => {\n            this.events.once(websocketEvents.TRANSACTION_SUCCEEDED, (data) => {\n              subscription.off('publication', () => {})\n              this._socketClient.disconnect()\n              resolve(data)\n            })\n\n            this.events.once(websocketEvents.TRANSACTION_FAILED, (data) => {\n              subscription.off('publication', () => {})\n              this._socketClient.disconnect()\n              reject(new Error(`Couldn't process the legacy relay transaction. Please try again. ${JSON.stringify(data)}`))\n            })\n          })\n        }\n      }\n    } catch (error) {\n      this._throwError(\n        'Unable to relay legacy transaction. Please try again.',\n        error\n      )\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LegacyJobsApiController.html":{"url":"controllers/LegacyJobsApiController.html","title":"controller - LegacyJobsApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LegacyJobsApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-jobs-api/legacy-jobs-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-jobs-api/legacy-jobs-api.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-jobs-api/legacy-jobs-api.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { IsValidApiKeysGuard } from '@app/api-service/api-keys/guards/is-valid-api-keys.guard'\nimport { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { LegacyApiInterceptor } from '@app/api-service/legacy-api/legacy-api.interceptor'\n\n@UseGuards(IsValidApiKeysGuard)\n@UseInterceptors(LegacyApiInterceptor)\n@Controller({ path: 'v0/jobs/*' })\nexport class LegacyJobsApiController {\n  @Get()\n  get () { }\n\n  @Post()\n  post () { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LegacyTradeApiController.html":{"url":"controllers/LegacyTradeApiController.html","title":"controller - LegacyTradeApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LegacyTradeApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { LegacyApiInterceptor } from '@app/api-service/legacy-api/legacy-api.interceptor'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@UseInterceptors(LegacyApiInterceptor)\n@Controller({ path: 'v0/trade/*' })\nexport class LegacyTradeApiController {\n  @Get()\n  get () {\n  }\n\n  @Post()\n  post () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LegacyWalletApiController.html":{"url":"controllers/LegacyWalletApiController.html","title":"controller - LegacyWalletApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LegacyWalletApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-wallet-api/legacy-wallet-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                            \n                                    \n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-wallet-api/legacy-wallet-api.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-wallet-api/legacy-wallet-api.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-wallet-api/legacy-wallet-api.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-wallet-api/legacy-wallet-api.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Put, Post, Delete, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { LegacyApiInterceptor } from '@app/api-service/legacy-api/legacy-api.interceptor'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@UseInterceptors(LegacyApiInterceptor)\n@Controller({ path: 'v0/wallets/*' })\nexport class LegacyWalletApiController {\n  @Get()\n  get () {\n  }\n\n  @Post()\n  post () {\n  }\n\n  @Put()\n  put () {\n  }\n\n  @Delete()\n  delete () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogFilter.html":{"url":"interfaces/LogFilter.html","title":"interface - LogFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/interfaces/logs-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            topics\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        topics:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogFilter {\n  address: string,\n  topics: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NativeTransfer.html":{"url":"classes/NativeTransfer.html","title":"class - NativeTransfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NativeTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/native-transfer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                constructTokenTransferData\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                descGenerator\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(parsedUserOp, tokenTransferData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/native-transfer.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenTransferData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { walletAddress: any; name: string; status: string; sent: {}; userOpHash: any; txHash: string; blockNumber: number; description: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constructTokenTransferData\n                        \n                    \n                \n            \n            \n                \nconstructTokenTransferData(targetAddress, value)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/native-transfer.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetAddress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ERC20Transfer\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NATIVE_TOKEN_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport { ERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\n\nexport default class NativeTransfer extends WalletAction {\n  constructTokenTransferData (targetAddress, value) {\n    return {\n      ...NATIVE_FUSE_TOKEN,\n      type: NATIVE_TOKEN_TYPE,\n      value,\n      to: targetAddress\n    } as ERC20Transfer\n  }\n\n  constructResponse (parsedUserOp, tokenTransferData) {\n    const { sender: walletAddress, userOpHash } = parsedUserOp\n    const { symbol, decimals } = tokenTransferData\n    return {\n      walletAddress,\n      name: 'tokenTransfer',\n      status: 'pending',\n      sent: [tokenTransferData],\n      userOpHash,\n      txHash: '',\n      blockNumber: 0,\n      description: this.generateDescription({\n        action: 'Transferred',\n        symbol,\n        valueInWei: tokenTransferData.value,\n        decimals\n      })\n    }\n  }\n\n  async execute (parsedUserOp) {\n    const { targetAddress, value } = parsedUserOp.targetFunctions[0]\n    const tokenTransferData = this.constructTokenTransferData(targetAddress, value)\n    return this.constructResponse(parsedUserOp, tokenTransferData)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NftTransfer.html":{"url":"classes/NftTransfer.html","title":"class - NftTransfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NftTransfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/nft-transfer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                descGenerator\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                fetchTokenTransferData\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(parsedUserOp, tokenTransferData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/nft-transfer.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenTransferData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { walletAddress: any; name: string; status: string; sent: {}; userOpHash: any; txHash: string; blockNumber: number; description: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:6\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchTokenTransferData\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTokenTransferData(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/nft-transfer.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_721_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC721Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\n\nexport default class NftTransfer extends WalletAction {\n  descGenerator ({ symbol, tokenId, to }) {\n    return `${symbol} #${tokenId} sent to ${to}`\n  }\n\n  async fetchTokenTransferData ({ targetAddress, callData }) {\n    const [, to, tokenId] = callData\n    const tokenData = await this.tokenService.fetchTokenDetails(targetAddress)\n    return {\n      type: ERC_721_TYPE,\n      ...tokenData,\n      to,\n      tokenId\n    } as ERC721Transfer\n  }\n\n  constructResponse (parsedUserOp, tokenTransferData) {\n    const { sender: walletAddress, userOpHash } = parsedUserOp\n    const { tokenId, to, symbol } = tokenTransferData\n    return {\n      walletAddress,\n      name: 'nftTransfer',\n      status: 'pending',\n      sent: [tokenTransferData],\n      userOpHash,\n      txHash: '',\n      blockNumber: 0,\n      description: this.descGenerator({ tokenId, to, symbol })\n    }\n  }\n\n  async execute (parsedUserOp) {\n    const targetFunction = parsedUserOp.targetFunctions[0]\n    const tokenTransferData = await this.fetchTokenTransferData(targetFunction)\n    return this.constructResponse(parsedUserOp, tokenTransferData)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationsController.html":{"url":"controllers/NotificationsController.html","title":"controller - NotificationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/notifications/notifications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v0/notifications\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                createAddresses\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                deleteAddresses\n                            \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                getAddresses\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWebhookDto: CreateWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookDto\n                                            \n                                                            CreateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook/add-addresses')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('webhook/:webhookId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook/delete-addresses')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhook/:webhookId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddresses(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhook/addresses/:webhookId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('webhooks/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateWebhookDto: UpdateWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateWebhookDto\n                                            \n                                                            UpdateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { NotificationsService } from '@app/api-service/notifications/notifications.service'\nimport { CreateWebhookDto } from '@app/notifications-service/webhooks/dto/create-webhook.dto'\nimport { UpdateWebhookDto } from '@app/notifications-service/webhooks/dto/update-webhook.dto'\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseGuards } from '@nestjs/common'\nimport { IsValidApiKeysGuard } from '@app/api-service/api-keys/guards/is-valid-api-keys.guard'\nimport { IsApiKeyProjectMatchGuard } from '@app/api-service/api-keys/guards/is-api-key-project-owner.guard'\nimport { CreateWebhookAddressesDto } from '@app/notifications-service/webhooks/dto/create-webhook-addresses.dto'\n\n@UseGuards(IsApiKeyProjectMatchGuard)\n@UseGuards(IsValidApiKeysGuard)\n@Controller('v0/notifications')\nexport class NotificationsController {\n  constructor (private readonly notificationsService: NotificationsService) { }\n\n  @Post('webhook')\n  create (@Body() createWebhookDto: CreateWebhookDto) {\n    return this.notificationsService.createWebhook(createWebhookDto)\n  }\n\n  @Put('webhook')\n  update (@Body() updateWebhookDto: UpdateWebhookDto) {\n    return this.notificationsService.updateWebhook(updateWebhookDto)\n  }\n\n  @Delete('webhook/:webhookId')\n  delete (@Param('webhookId') webhookId: string) {\n    return this.notificationsService.deleteWebhook(webhookId)\n  }\n\n  @Get('webhook/:webhookId')\n  get (@Param('webhookId') webhookId: string) {\n    return this.notificationsService.getWebhook(webhookId)\n  }\n\n  @Get('webhooks/:projectId')\n  getAll (@Param('projectId') projectId: string) {\n    return this.notificationsService.getAllWebhooks(projectId)\n  }\n\n  @Post('webhook/add-addresses')\n  createAddresses (@Body() createWebhookAddressesDto: CreateWebhookAddressesDto) {\n    return this.notificationsService.createAddresses(createWebhookAddressesDto)\n  }\n\n  @Get('webhook/addresses/:webhookId')\n  getAddresses (@Param('webhookId') webhookId: string) {\n    return this.notificationsService.getAddresses(webhookId)\n  }\n\n  @Post('webhook/delete-addresses')\n  deleteAddresses (@Body() createWebhookAddressesDto: CreateWebhookAddressesDto) {\n    return this.notificationsService.deleteAddresses(createWebhookAddressesDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nApiKeyModule->NotificationsModule\n\n\n\n\n\nNotificationsService \n\nNotificationsService \n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/notifications/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { notificationsService } from '@app/common/constants/microservices.constants'\nimport { Module } from '@nestjs/common'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { NotificationsService } from '@app/api-service/notifications/notifications.service'\nimport { NotificationsController } from '@app/api-service/notifications/notifications.controller'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: notificationsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.NOTIFICATIONS_HOST,\n          port: parseInt(process.env.NOTIFICATIONS_TCP_PORT)\n        }\n      }\n    ]),\n    ApiKeyModule\n  ],\n  providers: [NotificationsService],\n  controllers: [NotificationsController],\n  exports: [NotificationsService]\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/notifications/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAddresses\n                            \n                            \n                                    Async\n                                createWebhook\n                            \n                            \n                                    Async\n                                deleteAddresses\n                            \n                            \n                                    Async\n                                deleteWebhook\n                            \n                            \n                                    Async\n                                getAddresses\n                            \n                            \n                                    Async\n                                getAllWebhooks\n                            \n                            \n                                    Async\n                                getWebhook\n                            \n                            \n                                    Async\n                                updateWebhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/notifications/notifications.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWebhook(createWebhookDto: CreateWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookDto\n                                            \n                                                            CreateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteWebhook(webhookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddresses(webhookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllWebhooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllWebhooks(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWebhook(webhookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateWebhook(updateWebhookDto: UpdateWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/notifications/notifications.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateWebhookDto\n                                            \n                                                            UpdateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  notificationsService\n  // relayService\n} from '@app/common/constants/microservices.constants'\nimport { CreateWebhookAddressesDto } from '@app/notifications-service/webhooks/dto/create-webhook-addresses.dto'\nimport { CreateWebhookDto } from '@app/notifications-service/webhooks/dto/create-webhook.dto'\nimport { UpdateWebhookDto } from '@app/notifications-service/webhooks/dto/update-webhook.dto'\nimport { Webhook } from '@app/notifications-service/webhooks/interfaces/webhook.interface'\nimport { Inject, Injectable } from '@nestjs/common'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\n\n@Injectable()\nexport class NotificationsService {\n  constructor (\n    @Inject(notificationsService) private readonly notificationsClient: ClientProxy\n  ) {}\n\n  async createWebhook (createWebhookDto: CreateWebhookDto): Promise {\n    return callMSFunction(this.notificationsClient, 'create_webhook', createWebhookDto)\n  }\n\n  async updateWebhook (updateWebhookDto: UpdateWebhookDto): Promise {\n    return callMSFunction(this.notificationsClient, 'update_webhook', updateWebhookDto)\n  }\n\n  async deleteWebhook (webhookId: string): Promise {\n    return callMSFunction(this.notificationsClient, 'delete_webhook', webhookId)\n  }\n\n  async getWebhook (webhookId: string): Promise {\n    return callMSFunction(this.notificationsClient, 'get_webhook', webhookId)\n  }\n\n  async getAllWebhooks (projectId: string): Promise {\n    return callMSFunction(this.notificationsClient, 'get_all_webhooks', projectId)\n  }\n\n  async createAddresses (createWebhookAddressesDto: CreateWebhookAddressesDto): Promise {\n    return callMSFunction(this.notificationsClient, 'create_addresses', createWebhookAddressesDto)\n  }\n\n  async getAddresses (webhookId: string): Promise {\n    return callMSFunction(this.notificationsClient, 'get_addresses', webhookId)\n  }\n\n  async deleteAddresses (createWebhookAddressesDto: CreateWebhookAddressesDto): Promise {\n    return callMSFunction(this.notificationsClient, 'delete_addresses', createWebhookAddressesDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OperatorJwtStrategy.html":{"url":"injectables/OperatorJwtStrategy.html","title":"injectable - OperatorJwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OperatorJwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/operator-jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportStrategy(Strategy, operatorJwtString)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/operators/operator-jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operator-jwt.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { ExtractJwt, Strategy } from 'passport-jwt'\nimport { operatorJwtString } from '@app/accounts-service/operators/operators.constants'\nimport { ConfigService } from '@nestjs/config'\n\n@Injectable()\nexport class OperatorJwtStrategy extends PassportStrategy(Strategy, operatorJwtString) {\n  constructor (\n    private readonly configService: ConfigService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('SMART_WALLETS_JWT_SECRET')\n    })\n  }\n\n  validate (payload: unknown): unknown {\n    return payload\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorWallet.html":{"url":"interfaces/OperatorWallet.html","title":"interface - OperatorWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OperatorWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/interfaces/operator-wallet.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isActivated\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            smartWalletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isActivated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smartWalletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smartWalletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface OperatorWallet extends Document {\n  readonly ownerId: string;\n  readonly smartWalletAddress: string;\n  readonly isActivated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OperatorsController.html":{"url":"controllers/OperatorsController.html","title":"controller - OperatorsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OperatorsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/operators.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkOperatorExistence\n                            \n                            \n                                    \n                                    \n                                    Async\n                                checkWalletActivationStatus\n                            \n                            \n                                    \n                                    \n                                    Async\n                                createOperatorUserAndProjectAndWallet\n                            \n                            \n                                    \n                                    Async\n                                findOperatorByOwnerId\n                            \n                            \n                                    \n                                    Async\n                                findOperatorBySmartWallet\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getOperatorsUserAndProject\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getSponsoredTransactionsCount\n                            \n                            \n                                    \n                                    Async\n                                handleWebhookReceiveAndFundPaymaster\n                            \n                            \n                                    \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkOperatorExistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkOperatorExistence(address: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Head('/eoaAddress/:address')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:23\n                        \n                    \n\n\n            \n                \n                        Check if operator exist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        checkWalletActivationStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkWalletActivationStatus(auth0Id: string, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/is-activated')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:74\n                        \n                    \n\n\n            \n                \n                        Check if operator wallet is activated\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                OK if operator wallet is activated, not found otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createOperatorUserAndProjectAndWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOperatorUserAndProjectAndWallet(createOperatorUserDto: CreateOperatorUserDto, auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('/account')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:56\n                        \n                    \n\n\n            \n                \n                        Create user, project and AA wallet for an operator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOperatorUserDto\n                                            \n                                                            CreateOperatorUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user, project and AA wallet with public key\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOperatorByOwnerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOperatorByOwnerId(walletAddress: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('find-operator-by-owner-id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOperatorBySmartWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOperatorBySmartWallet(walletAddress: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('find-operator-by-smart-wallet')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getOperatorsUserAndProject\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOperatorsUserAndProject(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:45\n                        \n                    \n\n\n            \n                \n                        Get current operator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                the user and project with public key\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getSponsoredTransactionsCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSponsoredTransactionsCount(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('/sponsored-transaction')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:89\n                        \n                    \n\n\n            \n                \n                        Get sponsored transactions count\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                sponsored transactions count\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleWebhookReceiveAndFundPaymaster\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleWebhookReceiveAndFundPaymaster(webhookEvent: WebhookEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/webhook/fund')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:64\n                        \n                    \n\n\n            \n                \n                        Handle Webhook Receive And Fund Paymaster\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            WebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(authOperatorDto: AuthOperatorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/validate')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/operators/operators.controller.ts:34\n                        \n                    \n\n\n            \n                \n                        Validate operator\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authOperatorDto\n                                            \n                                                            AuthOperatorDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the new operator JWT\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Head, Logger, Param, Post, Res, UseGuards } from '@nestjs/common'\nimport { User } from '@app/accounts-service/users/user.decorator'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\nimport { CreateOperatorUserDto } from '@app/accounts-service/operators/dto/create-operator-user.dto'\nimport { OperatorsService } from '@app/accounts-service/operators/operators.service'\nimport { AuthOperatorDto } from '@app/accounts-service/operators/dto/auth-operator.dto'\nimport { Response } from 'express'\nimport { WebhookEvent } from '@app/apps-service/payments/interfaces/webhook-event.interface'\nimport { MessagePattern } from '@nestjs/microservices'\n\n@Controller({ path: 'operators', version: '1' })\nexport class OperatorsController {\n  private readonly logger = new Logger(OperatorsController.name)\n  constructor (\n    private readonly operatorsService: OperatorsService\n  ) { }\n\n  /**\n   * Check if operator exist\n   * @param Address\n   */\n  @Head('/eoaAddress/:address')\n  async checkOperatorExistence (@Param('address') address: string, @Res() response: Response) {\n    const statusCode = await this.operatorsService.checkOperatorExistenceByEoaAddress(address)\n    response.status(statusCode).send()\n  }\n\n  /**\n   * Validate operator\n   * @param authOperatorDto\n   * @returns the new operator JWT\n   */\n  @Post('/validate')\n  validate (@Body() authOperatorDto: AuthOperatorDto) {\n    return this.operatorsService.validate(authOperatorDto)\n  }\n\n  /**\n   * Get current operator\n   * @param authOperatorDto\n   * @returns the user and project with public key\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('/account')\n  async getOperatorsUserAndProject (@User('sub') auth0Id: string) {\n    return this.operatorsService.getOperatorUserAndProject(auth0Id)\n  }\n\n  /**\n   * Create user, project and AA wallet for an operator\n   * @param authOperatorDto\n   * @returns the user, project and AA wallet with public key\n   */\n  @UseGuards(JwtAuthGuard)\n  @Post('/account')\n  async createOperatorUserAndProjectAndWallet (@Body() createOperatorUserDto: CreateOperatorUserDto, @User('sub') auth0Id: string) {\n    return this.operatorsService.createOperatorUserAndProjectAndWallet(createOperatorUserDto, auth0Id)\n  }\n\n  /**\n   * Handle Webhook Receive And Fund Paymaster\n   */\n  @Post('/webhook/fund')\n  async handleWebhookReceiveAndFundPaymaster (@Body() webhookEvent: WebhookEvent) {\n    return await this.operatorsService.handleWebhookReceiveAndFundPaymasterAndDeleteWalletAddressFromOperatorsWebhook(webhookEvent)\n  }\n\n  /**\n   * Check if operator wallet is activated\n   * @returns OK if operator wallet is activated, not found otherwise\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('/is-activated')\n  async checkWalletActivationStatus (@User('sub') auth0Id: string, @Res() response: Response) {\n    const isActivated = await this.operatorsService.checkWalletActivationStatus(auth0Id)\n    if (!isActivated) {\n      return response.status(404).send({ message: 'Wallet not activated' })\n    }\n    return response.status(200).send({ message: 'Wallet is activated' })\n  }\n\n  /**\n   * Get sponsored transactions count\n   * @param authOperatorDto\n   * @returns sponsored transactions count\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get('/sponsored-transaction')\n  async getSponsoredTransactionsCount (@User('sub') auth0Id: string) {\n    return this.operatorsService.getSponsoredTransactionsCount(auth0Id)\n  }\n\n  // Endpoint for microservice interaction\n  @MessagePattern('find-operator-by-smart-wallet')\n  async findOperatorBySmartWallet (walletAddress: string) {\n    return this.operatorsService.findOperatorBySmartWallet(walletAddress)\n  }\n\n  @MessagePattern('find-operator-by-owner-id')\n  async findOperatorByOwnerId (walletAddress: string) {\n    return this.operatorsService.findWalletOwner(walletAddress)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OperatorsModule.html":{"url":"modules/OperatorsModule.html","title":"module - OperatorsModule","body":"\n                   \n\n\n\n\n    Modules\n    OperatorsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OperatorsModule\n\n\n\ncluster_OperatorsModule_imports\n\n\n\ncluster_OperatorsModule_exports\n\n\n\ncluster_OperatorsModule_providers\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nOperatorsModule\n\nOperatorsModule\n\nOperatorsModule -->\n\nApiKeyModule->OperatorsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nOperatorsModule -->\n\nAuthModule->OperatorsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nOperatorsModule -->\n\nDatabaseModule->OperatorsModule\n\n\n\n\n\nPaymasterModule\n\nPaymasterModule\n\nOperatorsModule -->\n\nPaymasterModule->OperatorsModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nOperatorsModule -->\n\nProjectsModule->OperatorsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nOperatorsModule -->\n\nUsersModule->OperatorsModule\n\n\n\n\n\nOperatorsService \n\nOperatorsService \n\nOperatorsService  -->\n\nOperatorsModule->OperatorsService \n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nOperatorsModule -->\n\nAnalyticsService->OperatorsModule\n\n\n\n\n\nOperatorJwtStrategy\n\nOperatorJwtStrategy\n\nOperatorsModule -->\n\nOperatorJwtStrategy->OperatorsModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nOperatorsModule -->\n\nOperatorsService->OperatorsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/operators.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalyticsService\n                        \n                        \n                            OperatorJwtStrategy\n                        \n                        \n                            OperatorsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OperatorsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            PaymasterModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OperatorsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { ProjectsModule } from '@app/accounts-service/projects/projects.module'\nimport { OperatorsController } from '@app/accounts-service/operators/operators.controller'\nimport { OperatorJwtStrategy } from '@app/accounts-service/operators/operator-jwt.strategy'\nimport { OperatorsService } from '@app/accounts-service/operators/operators.service'\nimport { AuthModule } from '@app/accounts-service/auth/auth.module'\nimport { PaymasterModule } from '@app/accounts-service/paymaster/paymaster.module'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport configuration from '@app/accounts-service/common/config/configuration'\nimport { ConfigModule } from '@nestjs/config'\nimport { DatabaseModule } from '@app/common'\nimport { operatorsProviders } from '@app/accounts-service/operators/operators.providers'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { smartWalletsService, notificationsService } from '@app/common/constants/microservices.constants'\nimport { AnalyticsService } from '@app/common/services/analytics.service'\nimport { HttpModule } from '@nestjs/axios'\n\n@Module({\n  imports: [\n    UsersModule,\n    ProjectsModule,\n    AuthModule,\n    HttpModule,\n    PaymasterModule,\n    ApiKeyModule,\n    ClientsModule.register([\n      {\n        name: smartWalletsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.SMART_WALLETS_HOST,\n          port: parseInt(process.env.SMART_WALLETS_TCP_PORT)\n        }\n      }, {\n        name: notificationsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.NOTIFICATIONS_HOST,\n          port: parseInt(process.env.NOTIFICATIONS_TCP_PORT)\n        }\n      }\n    ]),\n    ConfigModule.forFeature(configuration),\n    DatabaseModule\n  ],\n  controllers: [OperatorsController],\n  providers: [\n    OperatorJwtStrategy,\n    AnalyticsService,\n    OperatorsService,\n    ...operatorsProviders\n  ],\n  exports: [OperatorsService]\n})\nexport class OperatorsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymasterApiController.html":{"url":"controllers/PaymasterApiController.html","title":"controller - PaymasterApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymasterApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/paymaster-api/paymaster-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                jsonRpc\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jsonRpc\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonRpc(req, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Req, Post, Res } from '@nestjs/common'\nimport { PaymasterApiService } from '@app/api-service/paymaster-api/paymaster-api.service'\nimport { IsPrdOrSbxKeyGuard } from '@app/api-service/api-keys/guards/is-production-or-sandbox-key.guard'\nimport { JSONRPCServer } from 'json-rpc-2.0'\n\n@UseGuards(IsPrdOrSbxKeyGuard)\n@Controller({ path: 'v0/paymaster' })\nexport class PaymasterApiController {\n  server: JSONRPCServer = new JSONRPCServer()\n  constructor (\n    private readonly paymasterService: PaymasterApiService\n  ) {\n    this.server.addMethod('pm_sponsorUserOperation', (body, req: any) =>\n      this.paymasterService.pm_sponsorUserOperation(\n        body,\n        req.environment,\n        req.projectId\n      )\n    )\n    this.server.addMethod('pm_accounts', (body, req: any) =>\n      this.paymasterService.pm_accounts(\n        body,\n        req.environment,\n        req.projectId\n      )\n    )\n  }\n\n  @Post()\n  jsonRpc (@Req() req, @Res() res) {\n    const jsonRPCRequest = req.body\n    // server.receive takes a JSON-RPC request and returns a promise of a JSON-RPC response.\n    // It can also receive an array of requests, in which case it may return an array of responses.\n    // Alternatively, you can use server.receiveJSON, which takes JSON string as is (in this case req.body).\n    this.server.receive(jsonRPCRequest, req).then((jsonRPCResponse) => {\n      if (jsonRPCResponse) {\n        res.json(jsonRPCResponse)\n      } else {\n        res.sendStatus(204)\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymasterApiModule.html":{"url":"modules/PaymasterApiModule.html","title":"module - PaymasterApiModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymasterApiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymasterApiModule\n\n\n\ncluster_PaymasterApiModule_providers\n\n\n\ncluster_PaymasterApiModule_imports\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nPaymasterApiModule\n\nPaymasterApiModule\n\nPaymasterApiModule -->\n\nApiKeyModule->PaymasterApiModule\n\n\n\n\n\nPaymasterApiService\n\nPaymasterApiService\n\nPaymasterApiModule -->\n\nPaymasterApiService->PaymasterApiModule\n\n\n\n\n\nUserOpParser\n\nUserOpParser\n\nPaymasterApiModule -->\n\nUserOpParser->PaymasterApiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/paymaster-api/paymaster-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymasterApiService\n                        \n                        \n                            UserOpParser\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymasterApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HttpModule } from '@nestjs/axios'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport configuration from '@app/api-service/paymaster-api/config/configuration'\nimport { PaymasterApiController } from '@app/api-service/paymaster-api/paymaster-api.controller'\nimport { PaymasterApiService } from '@app/api-service/paymaster-api/paymaster-api.service'\nimport { accountsService } from '@app/common/constants/microservices.constants'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { EthersModule } from 'nestjs-ethers'\nimport { UserOpParser } from '@app/common/services/user-op-parser.service'\n\n@Module({\n  imports: [\n    ApiKeyModule,\n    HttpModule,\n    ConfigModule.forFeature(configuration),\n    ClientsModule.register([\n      {\n        name: accountsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.ACCOUNTS_HOST,\n          port: parseInt(process.env.ACCOUNTS_TCP_PORT)\n        }\n      }\n    ]),\n    EthersModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      token: 'fuse',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('paymasterApi')\n        const { production } = config\n        const { url, networkName, chainId } = production\n        return {\n          network: { name: networkName, chainId },\n          custom: url,\n          useDefaultProvider: false\n        }\n      }\n    }),\n    EthersModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      token: 'fuseSpark',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('paymasterApi')\n        const { sandbox } = config\n        const { url, networkName, chainId } = sandbox\n        return {\n          network: { name: networkName, chainId },\n          custom: url,\n          useDefaultProvider: false\n        }\n      }\n    })\n  ],\n  controllers: [\n    PaymasterApiController\n  ],\n  providers: [\n    PaymasterApiService,\n    UserOpParser\n  ]\n})\n\nexport class PaymasterApiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymasterApiService.html":{"url":"injectables/PaymasterApiService.html","title":"injectable - PaymasterApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymasterApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildPaymasterAndData\n                            \n                            \n                                    Async\n                                estimateUserOpGas\n                            \n                            \n                                    Private\n                                    Async\n                                getHash\n                            \n                            \n                                    Private\n                                getProviderByEnv\n                            \n                            \n                                    Async\n                                pm_accounts\n                            \n                            \n                                    Async\n                                pm_sponsorUserOperation\n                            \n                            \n                                    Private\n                                prepareUrl\n                            \n                            \n                                    Private\n                                    Async\n                                signHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountClient: ClientProxy, configService: ConfigService, fuseProvider: JsonRpcProvider, sparkProvider: JsonRpcProvider, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fuseProvider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sparkProvider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildPaymasterAndData\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildPaymasterAndData(paymasterAddress: string, validUntil: number, validAfter: number, sponsorId: string, signature: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymasterAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validUntil\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validAfter\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        estimateUserOpGas\n                        \n                    \n                \n            \n            \n                \n                        \n                    estimateUserOpGas(op, requestEnvironment, entrypointAddress)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                op\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestEnvironment\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entrypointAddress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHash(paymasterContract: Contract, op: any, validUntil: number, validAfter: number, sponsorId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymasterContract\n                                            \n                                                        Contract\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                op\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validUntil\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validAfter\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getProviderByEnv\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProviderByEnv(env: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:216\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                env\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     JsonRpcProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pm_accounts\n                        \n                    \n                \n            \n            \n                \n                        \n                    pm_accounts(body, env: any, projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                env\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        pm_sponsorUserOperation\n                        \n                    \n                \n            \n            \n                \n                        \n                    pm_sponsorUserOperation(body: any, env: any, projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                env\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        prepareUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    prepareUrl(environment)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environment\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        signHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    signHash(hash: string, paymasterInfo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                hash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paymasterInfo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PaymasterApiService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-api-service/src/paymaster-api/paymaster-api.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { accountsService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy, RpcException } from '@nestjs/microservices'\nimport {\n  Injectable,\n  Inject,\n  InternalServerErrorException,\n  Logger\n} from '@nestjs/common'\nimport { arrayify, defaultAbiCoder, hexConcat } from 'ethers/lib/utils'\nimport fusePaymasterABI from '@app/api-service/paymaster-api/abi/FuseVerifyingPaymasterSingleton.abi.json'\nimport { BigNumber, Contract, Wallet } from 'ethers'\nimport { ConfigService } from '@nestjs/config'\nimport { InjectEthersProvider, JsonRpcProvider } from 'nestjs-ethers'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { capitalize, isEmpty, has, get } from 'lodash'\nimport { HttpService } from '@nestjs/axios'\nimport { catchError, lastValueFrom, map } from 'rxjs'\nimport { AxiosRequestConfig, AxiosResponse } from 'axios'\n\n@Injectable()\nexport class PaymasterApiService {\n  private readonly logger = new Logger(PaymasterApiService.name)\n  constructor (\n    @Inject(accountsService) private readonly accountClient: ClientProxy,\n    private configService: ConfigService,\n    @InjectEthersProvider('fuse')\n    private readonly fuseProvider: JsonRpcProvider,\n    @InjectEthersProvider('fuseSpark')\n    private readonly sparkProvider: JsonRpcProvider,\n    private httpService: HttpService\n  ) { }\n\n  async pm_sponsorUserOperation (body: any, env: any, projectId: string) {\n    try {\n      const provider = this.getProviderByEnv(env)\n      const [op] = body\n      this.logger.log(`INITIAL OP: ${JSON.stringify(op)}`)\n      const { timestamp } = await provider.getBlock('latest')\n\n      const validUntil = parseInt(timestamp.toString()) + 900\n      const validAfter = 0\n      const paymasterInfo = await callMSFunction(this.accountClient, 'get_paymaster_info', { projectId, env })\n      const minVerificationGasLimit = '140000'\n\n      if (isEmpty(paymasterInfo)) {\n        throw new RpcException(`Error getting paymaster for project: ${projectId} in ${env} environment`)\n      }\n\n      const sponsorId = paymasterInfo.sponsorId\n      const paymasterAddress = paymasterInfo.paymasterAddress\n      const paymasterContract = new Contract(\n        paymasterAddress,\n        fusePaymasterABI,\n        provider\n      )\n\n      const hashForEstimateUserOpGasCall = await this.getHash(paymasterContract, op, validUntil, validAfter, sponsorId)\n      const signatureForEstimateUserOpGasCall = await this.signHash(hashForEstimateUserOpGasCall, paymasterInfo)\n      const paymasterAndDataForEstimateUserOpGasCall = this.buildPaymasterAndData(paymasterAddress, validUntil, validAfter, sponsorId, signatureForEstimateUserOpGasCall)\n\n      op.paymasterAndData = paymasterAndDataForEstimateUserOpGasCall\n\n      const gases = await this.estimateUserOpGas(op, env, paymasterInfo.entrypointAddress)\n\n      const actualVerificationGasLimit = Math.max(parseInt(gases.verificationGasLimit), parseInt(minVerificationGasLimit)).toString()\n\n      op.callGasLimit = gases?.callGasLimit ?? op.callGasLimit\n      op.verificationGasLimit = actualVerificationGasLimit\n      op.preVerificationGas = gases?.preVerificationGas\n\n      const hash = await this.getHash(paymasterContract, op, validUntil, validAfter, sponsorId)\n      const signature = await this.signHash(hash, paymasterInfo)\n      const paymasterAndData = this.buildPaymasterAndData(paymasterAddress, validUntil, validAfter, sponsorId, signature)\n      op.paymasterAndData = paymasterAndData\n\n      const response = {\n        paymasterAndData,\n        preVerificationGas: op.preVerificationGas,\n        verificationGasLimit: op.verificationGasLimit,\n        callGasLimit: op.callGasLimit\n      }\n      this.logger.log(`Paymaster pm_sponsorUserOperation response ${JSON.stringify(response)}`)\n      return response\n    } catch (error) {\n      this.logger.error(`Paymaster pm_sponsorUserOperation error ${JSON.stringify(error)}`)\n      throw new RpcException(error)\n    }\n  }\n\n  private async getHash (\n    paymasterContract: Contract,\n    op: any,\n    validUntil: number,\n    validAfter: number,\n    sponsorId: string\n  ) {\n    return await paymasterContract.getHash(\n      op,\n      validUntil,\n      validAfter,\n      sponsorId\n    )\n  }\n\n  private async signHash (hash: string, paymasterInfo: any) {\n    const privateKeyString = this.configService.getOrThrow(\n      `paymasterApi.keys.${paymasterInfo.paymasterVersion}.${paymasterInfo.environment}PrivateKey`\n    )\n    const paymasterSigner = new Wallet(privateKeyString)\n    return await paymasterSigner.signMessage(arrayify(hash))\n  }\n\n  private buildPaymasterAndData (paymasterAddress: string, validUntil: number, validAfter: number, sponsorId: string, signature: string) {\n    return hexConcat([\n      paymasterAddress,\n      defaultAbiCoder.encode(\n        ['uint48', 'uint48', 'uint256', 'bytes'],\n        [validUntil, validAfter, sponsorId, signature]\n      ),\n      signature\n    ])\n  }\n\n  async estimateUserOpGas (op, requestEnvironment, entrypointAddress) {\n    const data = {\n      jsonrpc: '2.0',\n      method: 'eth_estimateUserOperationGas',\n      params: [\n        op,\n        entrypointAddress\n      ],\n      id: 1\n    }\n\n    const requestConfig: AxiosRequestConfig = {\n      url: this.prepareUrl(requestEnvironment),\n      method: 'post',\n      data\n    }\n\n    const response = await lastValueFrom(\n      this.httpService\n        .request(requestConfig)\n        .pipe(\n          map((axiosResponse: AxiosResponse) => {\n            return axiosResponse.data\n          })\n        )\n        .pipe(\n          catchError((e) => {\n            const errorReason =\n              e?.result?.error ||\n              e?.result?.error?.message ||\n              ''\n\n            this.logger.error(`RpcException catchError: ${errorReason} ${JSON.stringify(e)}`)\n            throw new RpcException(errorReason)\n          })\n        )\n    )\n\n    if (has(response, 'error')) {\n      const error = get(response, 'error')\n      this.logger.error('Error getting gas estimation', error)\n      throw new RpcException(error)\n    }\n\n    if (!has(response, 'result')) {\n      this.logger.error('Response does not contain result', JSON.stringify(response))\n      throw new InternalServerErrorException('Error getting gas estimation from paymaster')\n    }\n\n    if (has(response, 'result.error')) {\n      const result = get(response, 'result')\n      const error = get(response, 'result.error')\n      this.logger.error('Error in result of gas estimation', result)\n      throw new RpcException(error)\n    }\n\n    if (!has(response, 'result.callGasLimit')) {\n      const result = get(response, 'result')\n      this.logger.error('Result does not contain callGasLimit', result)\n      throw new InternalServerErrorException('Error getting gas estimation from paymaster')\n    }\n\n    const result = get(response, 'result')\n    this.logger.log(`Gas estimation received: ${JSON.stringify(result)}`)\n\n    const callGasLimit = BigNumber.from(result.callGasLimit).mul(115).div(100).toHexString() // 15% buffer\n\n    return {\n      ...result,\n      callGasLimit\n    }\n  }\n\n  private prepareUrl (environment) {\n    if (isEmpty(environment)) throw new InternalServerErrorException('Bundler environment is missing')\n    const config = this.configService.get(`bundler.${environment}`)\n\n    if (config.url) {\n      return config.url\n    } else {\n      throw new InternalServerErrorException(`${capitalize(environment)} bundler environment is missing`)\n    }\n  }\n\n  async pm_accounts (body, env: any, projectId: string) {\n    // const [entryPointAddress] = body\n    const paymasterInfo = await callMSFunction(this.accountClient, 'get_paymaster_info', { projectId, env })\n    return [\n      paymasterInfo.paymasterAddress\n    ]\n  }\n\n  private getProviderByEnv (env: string) {\n    if (env === 'production') {\n      return this.fuseProvider\n    }\n    if (env === 'sandbox') {\n      return this.sparkProvider\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymasterController.html":{"url":"controllers/PaymasterController.html","title":"controller - PaymasterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymasterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/paymaster/paymaster.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findActiveByProjectIdAndEnv\n                            \n                            \n                                    \n                                    \n                                findActivePaymasters\n                            \n                            \n                                    \n                                    \n                                getAvailableVersionList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Post(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findActiveByProjectIdAndEnv\n                        \n                    \n                \n            \n            \n                \n                        \n                    findActiveByProjectIdAndEnv(idAndEnv: object)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_paymaster_info')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idAndEnv\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findActivePaymasters\n                        \n                    \n                \n            \n            \n                \n                        \n                    findActivePaymasters(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAvailableVersionList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableVersionList()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('version-list')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Param,\n  Post,\n  UseGuards, Get\n} from '@nestjs/common'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\nimport { IsProjectOwnerGuard } from '@app/accounts-service/projects/guards/is-project-owner.guard'\nimport { PaymasterService } from '@app/accounts-service/paymaster/paymaster.service'\nimport { MessagePattern } from '@nestjs/microservices'\n\n@Controller({ path: 'paymaster', version: '1' })\nexport class PaymasterController {\n  constructor (private readonly paymasterService: PaymasterService) { }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('version-list')\n  getAvailableVersionList () {\n    return this.paymasterService.getAvailableVersionList()\n  }\n\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Post(':id')\n  create (@Param('id') id: string) {\n    return this.paymasterService.create(id, '0_1_0')\n  }\n\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get(':id')\n  findActivePaymasters (@Param('id') id: string) {\n    return this.paymasterService.findActivePaymasters(id)\n  }\n\n  @MessagePattern('get_paymaster_info')\n  findActiveByProjectIdAndEnv (idAndEnv: object) {\n    return this.paymasterService.findOneByProjectIdAndEnv(idAndEnv)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymasterInfo.html":{"url":"interfaces/PaymasterInfo.html","title":"interface - PaymasterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymasterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/paymaster/interfaces/paymaster.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entrypointAddress\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            paymasterAddress\n                                        \n                                \n                                \n                                        \n                                            paymasterVersion\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            sponsorId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entrypointAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entrypointAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymasterAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymasterAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymasterVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymasterVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sponsorId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sponsorId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface PaymasterInfo extends Document {\n    readonly paymasterAddress: string;\n    readonly paymasterVersion: string;\n    readonly entrypointAddress: string;\n    readonly projectId: string;\n    readonly sponsorId: string;\n    readonly isActive: boolean;\n    readonly environment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymasterModule.html":{"url":"modules/PaymasterModule.html","title":"module - PaymasterModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymasterModule\n\n\n\ncluster_PaymasterModule_exports\n\n\n\ncluster_PaymasterModule_providers\n\n\n\ncluster_PaymasterModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPaymasterModule\n\nPaymasterModule\n\nPaymasterModule -->\n\nDatabaseModule->PaymasterModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nPaymasterModule -->\n\nProjectsModule->PaymasterModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaymasterModule -->\n\nUsersModule->PaymasterModule\n\n\n\n\n\nPaymasterService \n\nPaymasterService \n\nPaymasterService  -->\n\nPaymasterModule->PaymasterService \n\n\n\n\n\nPaymasterService\n\nPaymasterService\n\nPaymasterModule -->\n\nPaymasterService->PaymasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/paymaster/paymaster.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymasterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymasterController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaymasterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PaymasterController } from '@app/accounts-service/paymaster/paymaster.controller'\nimport { paymasterProviders } from '@app/accounts-service/paymaster/paymaster.providers'\nimport { PaymasterService } from '@app/accounts-service/paymaster/paymaster.service'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { DatabaseModule } from '@app/common'\nimport { ProjectsModule } from '@app/accounts-service/projects/projects.module'\nimport { Module } from '@nestjs/common'\nimport configuration from '@app/accounts-service/common/config/configuration'\nimport { ConfigModule } from '@nestjs/config'\n\n@Module({\n  imports: [\n    UsersModule,\n    DatabaseModule,\n    ProjectsModule,\n    ConfigModule.forFeature(configuration)\n  ],\n  controllers: [PaymasterController],\n  providers: [PaymasterService, ...paymasterProviders],\n  exports: [PaymasterService]\n})\n\nexport class PaymasterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymasterService.html":{"url":"injectables/PaymasterService.html","title":"injectable - PaymasterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/paymaster/paymaster.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findActivePaymasters\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByProjectIdAndEnv\n                            \n                            \n                                    Async\n                                getAvailableVersionList\n                            \n                            \n                                getSponsorId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymasterModel: Model, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymasterModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(projectId: string, ver: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ver\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findActivePaymasters\n                        \n                    \n                \n            \n            \n                \n                        \n                    findActivePaymasters(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByProjectIdAndEnv\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByProjectIdAndEnv(idAndEnv: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idAndEnv\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvailableVersionList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableVersionList()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSponsorId\n                        \n                    \n                \n            \n            \n                \ngetSponsorId(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/paymaster/paymaster.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PaymasterInfo } from '@app/accounts-service/paymaster/interfaces/paymaster.interface'\nimport { paymasterInfoModelString } from '@app/accounts-service/paymaster/paymaster.constants'\nimport { Inject, Injectable, InternalServerErrorException } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { ConfigService } from '@nestjs/config'\nimport { BigNumber } from 'ethers'\n@Injectable()\nexport class PaymasterService {\n  constructor (\n    @Inject(paymasterInfoModelString)\n    private paymasterModel: Model,\n    private configService: ConfigService\n\n  ) { }\n\n  async create (projectId: string, ver: string) {\n    if (!Object.keys(this.configService.getOrThrow(\n      'paymaster')).includes(ver)) {\n      throw new InternalServerErrorException('Paymaster version is wrong')\n    }\n\n    const paymasterEnvs = this.configService.getOrThrow(\n      `paymaster.${ver}`\n    )\n    // TODO: When we will implement creation of new paymaster version\n    // we should make the \"isActive\" field true on creation and make this field false for old paymaster info\n    try {\n      const sponsorId = this.getSponsorId(projectId)\n      const paymasterDefaultObj = {\n        paymasterVersion: ver,\n        projectId,\n        sponsorId,\n        isActive: true\n      }\n      const productionPaymasterInfoObj = {\n        ...paymasterDefaultObj,\n        paymasterAddress: paymasterEnvs.production.paymasterContractAddress,\n        entrypointAddress: paymasterEnvs.production.entrypointAddress,\n        environment: 'production'\n      }\n      const sandboxPaymasterInfoObj = {\n        ...paymasterDefaultObj,\n        paymasterAddress: paymasterEnvs.sandbox.paymasterContractAddress,\n        entrypointAddress: paymasterEnvs.sandbox.entrypointAddress,\n        environment: 'sandbox'\n      }\n      return this.paymasterModel.create([productionPaymasterInfoObj, sandboxPaymasterInfoObj])\n    } catch (err) {\n      throw new InternalServerErrorException(err.message)\n    }\n  }\n\n  async findOneByProjectIdAndEnv (idAndEnv: any) {\n    return await this.paymasterModel.findOne({\n      projectId: idAndEnv.projectId,\n      isActive: true,\n      environment: idAndEnv.env\n    })\n  }\n\n  async findAll (projectId: string) {\n    return await this.paymasterModel.find({\n      projectId\n    })\n  }\n\n  async findActivePaymasters (projectId: string) {\n    return await this.paymasterModel.find({\n      projectId, isActive: true\n    })\n  }\n\n  async getAvailableVersionList () {\n    return await Object.keys(this.configService.getOrThrow(\n      'paymaster'))\n  }\n\n  getSponsorId (projectId: string) {\n    return BigNumber.from(`0x${projectId}`).toString()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentAccount.html":{"url":"interfaces/PaymentAccount.html","title":"interface - PaymentAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/interfaces/payment-account.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backendWalletId\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendWalletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendWalletId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface PaymentAccount extends Document {\n  readonly ownerId: string;\n  readonly backendWalletId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentLink.html":{"url":"interfaces/PaymentLink.html","title":"interface - PaymentLink","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentLink\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/interfaces/payment-link.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            backendWalletId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                                \n                                        \n                                            receivedAmount\n                                        \n                                \n                                \n                                        \n                                            receivedTokenAddress\n                                        \n                                \n                                \n                                        \n                                            receivedTokenSymbol\n                                        \n                                \n                                \n                                        \n                                            redirectionLink\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            tokenAddress\n                                        \n                                \n                                \n                                        \n                                            tokenSymbol\n                                        \n                                \n                                \n                                        \n                                            webhookUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backendWalletId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendWalletId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedAmount:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedTokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedTokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receivedTokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        receivedTokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectionLink\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redirectionLink:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhookUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhookUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface PaymentLink extends Document {\n  readonly ownerId: string;\n  readonly title: string;\n  readonly description: string;\n  readonly tokenSymbol: string;\n  readonly tokenAddress: string;\n  readonly amount: number;\n  readonly backendWalletId: string;\n  status: string;\n  receivedTokenSymbol: string;\n  receivedTokenAddress: string;\n  receivedAmount: string;\n  redirectionLink: string | null;\n  webhookUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentsController.html":{"url":"controllers/PaymentsController.html","title":"controller - PaymentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/payments.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payments\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createPaymentAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                createPaymentLink\n                            \n                            \n                                    \n                                    \n                                    \n                                getAllowedTokens\n                            \n                            \n                                    \n                                getPaymentLink\n                            \n                            \n                                    \n                                    \n                                    \n                                getPaymentLinks\n                            \n                            \n                                    \n                                    \n                                    \n                                getWalletBalance\n                            \n                            \n                                    \n                                transferTokens\n                            \n                            \n                                    \n                                webhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createPaymentAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentAccount(ownerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_payment_account')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(userId: string, createPaymentLinkDto: CreatePaymentLinkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Post('payment_link')@MessagePattern('create_payment_link')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllowedTokens()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Get('payment_link/allowed_tokens')@MessagePattern('get_allowed_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLink(paymentLinkId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('payment_link/:paymentLinkId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(userId: string, ownerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Get('payment_links')@MessagePattern('get_payment_links')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletBalance(userId: string, ownerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsValidApiKeysGuard)@Get('account_balance')@MessagePattern('get_wallet_balance')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transferTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferTokens(transferTokensDto: TransferTokensDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('transfer_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferTokensDto\n                                            \n                                                            TransferTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    webhook(webhookEvent: WebhookEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            WebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common'\nimport { CreatePaymentLinkDto } from '@app/apps-service/payments/dto/create-payment-link.dto'\nimport { PaymentsService } from '@app/apps-service/payments/payments.service'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { WebhookEvent } from '@app/apps-service/payments/interfaces/webhook-event.interface'\nimport { IsValidApiKeysGuard } from '@app/apps-service/api-keys/guards/is-valid-api-keys.guard'\nimport { UserId } from '@app/apps-service/common/config/decorators/user.decorator'\nimport { TransferTokensDto } from '@app/apps-service/payments/dto/transfer-tokens.dto'\n\n@Controller('payments')\nexport class PaymentsController {\n  constructor (private readonly paymentsService: PaymentsService) { }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Get('payment_link/allowed_tokens')\n  @MessagePattern('get_allowed_tokens')\n  getAllowedTokens () {\n    return this.paymentsService.getPaymentsAllowedTokens()\n  }\n\n  @MessagePattern('create_payment_account')\n  createPaymentAccount (ownerId: string) {\n    return this.paymentsService.createPaymentAccount(ownerId)\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Post('payment_link')\n  @MessagePattern('create_payment_link')\n  createPaymentLink (@UserId() userId: string, @Body() createPaymentLinkDto: CreatePaymentLinkDto) {\n    return this.paymentsService.createPaymentLink(userId, createPaymentLinkDto)\n  }\n\n  @Get('payment_link/:paymentLinkId')\n  getPaymentLink (@Param('paymentLinkId') paymentLinkId: string) {\n    return this.paymentsService.getPaymentLink(paymentLinkId)\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Get('payment_links')\n  @MessagePattern('get_payment_links')\n  getPaymentLinks (@UserId() userId: string, @Body() ownerId: string) {\n    return this.paymentsService.getPaymentLinks(userId || ownerId)\n  }\n\n  @Post('webhook')\n  webhook (@Body() webhookEvent: WebhookEvent) {\n    return this.paymentsService.handleWebhook(webhookEvent)\n  }\n\n  @UseGuards(IsValidApiKeysGuard)\n  @Get('account_balance')\n  @MessagePattern('get_wallet_balance')\n  getWalletBalance (@UserId() userId: string, @Body() ownerId: string) {\n    return this.paymentsService.getWalletBalance(userId || ownerId)\n  }\n\n  @MessagePattern('transfer_tokens')\n  transferTokens (@Body() transferTokensDto: TransferTokensDto) {\n    return this.paymentsService.transferTokens(transferTokensDto)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentsModule.html":{"url":"modules/PaymentsModule.html","title":"module - PaymentsModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_imports\n\n\n\ncluster_PaymentsModule_providers\n\n\n\n\nApiKeysModule\n\nApiKeysModule\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nApiKeysModule->PaymentsModule\n\n\n\n\n\nChargeApiModule\n\nChargeApiModule\n\nPaymentsModule -->\n\nChargeApiModule->PaymentsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nPaymentsModule -->\n\nDatabaseModule->PaymentsModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nWebhookSendService\n\nWebhookSendService\n\nPaymentsModule -->\n\nWebhookSendService->PaymentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/payments.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentsService\n                        \n                        \n                            WebhookSendService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeysModule\n                        \n                        \n                            ChargeApiModule\n                        \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/common'\nimport { Module } from '@nestjs/common'\nimport { HttpModule } from '@nestjs/axios'\nimport { ChargeApiModule } from '@app/apps-service/charge-api/charge-api.module'\nimport { PaymentsController } from '@app/apps-service/payments/payments.controller'\nimport { PaymentsService } from '@app/apps-service/payments/payments.service'\nimport { paymentsProviders } from '@app/apps-service/payments/payments.providers'\nimport configuration from '@app/apps-service/common/config/configuration'\nimport { ConfigModule } from '@nestjs/config'\nimport { ApiKeysModule } from '@app/apps-service/api-keys/api-keys.module'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Module({\n  imports: [ChargeApiModule, DatabaseModule, ConfigModule.forFeature(configuration), ApiKeysModule, HttpModule],\n  controllers: [PaymentsController],\n  providers: [PaymentsService, ...paymentsProviders, WebhookSendService]\n})\nexport class PaymentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentsService.html":{"url":"injectables/PaymentsService.html","title":"injectable - PaymentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/payments.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPaymentAccount\n                            \n                            \n                                    Async\n                                createPaymentLink\n                            \n                            \n                                    Async\n                                getPaymentLink\n                            \n                            \n                                    Async\n                                getPaymentLinks\n                            \n                            \n                                    Async\n                                getPaymentsAllowedTokens\n                            \n                            \n                                    Async\n                                getWalletBalance\n                            \n                            \n                                    Async\n                                handleWebhook\n                            \n                            \n                                isRequestedAllowedToken\n                            \n                            \n                                isTokenMatch\n                            \n                            \n                                    Async\n                                transferTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowedPaymentTokens\n                                \n                                \n                                    chargePaymentLinksWebhookId\n                                \n                                \n                                    allowedTokenAddresses\n                                \n                                \n                                    allowedTokenSymbols\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chargeApiService: ChargeApiService, paymentAccountModel: Model, paymentLinkModel: Model, configService: ConfigService, webhookSendService: WebhookSendService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-apps-service/src/payments/payments.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chargeApiService\n                                                  \n                                                        \n                                                                        ChargeApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentAccountModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentLinkModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhookSendService\n                                                  \n                                                        \n                                                                        WebhookSendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPaymentAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentAccount(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPaymentLink(userId: string, createPaymentLinkDto: CreatePaymentLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLink(paymentLinkId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLinkId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentLinks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentLinks(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPaymentsAllowedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaymentsAllowedTokens()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletBalance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletBalance(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleWebhook(webhookEvent: WebhookEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            WebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRequestedAllowedToken\n                        \n                    \n                \n            \n            \n                \nisRequestedAllowedToken(createPaymentLinkDto: CreatePaymentLinkDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentLinkDto\n                                            \n                                                            CreatePaymentLinkDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTokenMatch\n                        \n                    \n                \n            \n            \n                \nisTokenMatch(paymentLink: PaymentLink, webhookEvent: WebhookEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentLink\n                                            \n                                                            PaymentLink\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                webhookEvent\n                                            \n                                                            WebhookEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        transferTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    transferTokens(transferTokensDto: TransferTokensDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-apps-service/src/payments/payments.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transferTokensDto\n                                            \n                                                            TransferTokensDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(PaymentsService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/payments.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowedPaymentTokens\n                    \n                \n\n                \n                    \n                        getallowedPaymentTokens()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/payments/payments.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        chargePaymentLinksWebhookId\n                    \n                \n\n                \n                    \n                        getchargePaymentLinksWebhookId()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/payments/payments.service.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allowedTokenAddresses\n                    \n                \n\n                \n                    \n                        getallowedTokenAddresses()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/payments/payments.service.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        allowedTokenSymbols\n                    \n                \n\n                \n                    \n                        getallowedTokenSymbols()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-apps-service/src/payments/payments.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable, Logger } from '@nestjs/common'\nimport { CreatePaymentLinkDto } from '@app/apps-service/payments/dto/create-payment-link.dto'\nimport { ChargeApiService } from '@app/apps-service/charge-api/charge-api.service'\nimport { paymentAccountModelString, paymentLinkModelString } from '@app/apps-service/payments/payments.constants'\nimport { Model } from 'mongoose'\nimport { PaymentAccount } from '@app/apps-service/payments/interfaces/payment-account.interface'\nimport { PaymentLink } from '@app/apps-service/payments/interfaces/payment-link.interface'\nimport { walletTypes } from '@app/apps-service/charge-api/schemas/backend-wallet.schema'\nimport { WebhookEvent } from '@app/apps-service/payments/interfaces/webhook-event.interface'\nimport { status } from '@app/apps-service/payments/schemas/payment-link.schema'\nimport { ConfigService } from '@nestjs/config'\nimport { BackendWallet } from '@app/apps-service/charge-api/interfaces/backend-wallet.interface'\nimport { isEmpty } from 'lodash'\nimport { TransferTokensDto } from '@app/apps-service/payments/dto/transfer-tokens.dto'\nimport WebhookSendService from '@app/common/services/webhook-send.service'\n\n@Injectable()\nexport class PaymentsService {\n  private readonly logger = new Logger(PaymentsService.name)\n\n  constructor (\n    private chargeApiService: ChargeApiService,\n    @Inject(paymentAccountModelString)\n    private paymentAccountModel: Model,\n    @Inject(paymentLinkModelString)\n    private paymentLinkModel: Model,\n    private readonly configService: ConfigService,\n    private readonly webhookSendService: WebhookSendService\n  ) { }\n\n  get allowedPaymentTokens () {\n    return this.configService.get('paymentsAllowedTokens')\n  }\n\n  get chargePaymentLinksWebhookId () {\n    return this.configService.get('CHARGE_WEBHOOK_ID')\n  }\n\n  get allowedTokenAddresses () {\n    return this.allowedPaymentTokens.map(token => token.tokenAddress)\n  }\n\n  get allowedTokenSymbols () {\n    return this.allowedPaymentTokens.map(token => token.tokenSymbol)\n  }\n\n  async getPaymentsAllowedTokens () {\n    return this.configService.get('paymentsAllowedTokens')\n  }\n\n  isRequestedAllowedToken (createPaymentLinkDto: CreatePaymentLinkDto) {\n    const isTokenAddressAllowed = this.allowedTokenAddresses.some(address => {\n      return address.toLowerCase() === createPaymentLinkDto.tokenAddress.toLowerCase()\n    })\n\n    const isTokenSymbolAllowed = this.allowedTokenSymbols.some(symbol => {\n      return symbol.toLowerCase() === createPaymentLinkDto.tokenSymbol.toLowerCase()\n    })\n\n    return isTokenAddressAllowed && isTokenSymbolAllowed\n  }\n\n  async createPaymentAccount (ownerId: string) {\n    const backendWallet = await this.chargeApiService.createBackendWallet(walletTypes.PAYMENT_ACCOUNT)\n\n    const paymentAccount = await this.paymentAccountModel.create({\n      ownerId, backendWalletId: backendWallet._id\n    })\n\n    paymentAccount.save()\n\n    return paymentAccount\n  }\n\n  async createPaymentLink (userId: string, createPaymentLinkDto: CreatePaymentLinkDto) {\n    if (isEmpty(createPaymentLinkDto.ownerId)) {\n      createPaymentLinkDto.ownerId = userId\n    }\n\n    if (!this.isRequestedAllowedToken(createPaymentLinkDto)) {\n      throw new HttpException(\n        `${createPaymentLinkDto.tokenSymbol} - ${createPaymentLinkDto.tokenAddress} is not allowed`,\n        HttpStatus.BAD_REQUEST\n      )\n    }\n\n    const backendWallet = await this.chargeApiService.createBackendWallet(walletTypes.PAYMENT_LINK)\n\n    createPaymentLinkDto.backendWalletId = backendWallet._id\n\n    const paymentLink = await this.paymentLinkModel.create(createPaymentLinkDto)\n\n    paymentLink.save()\n\n    await this.chargeApiService.addWebhookAddress({\n      walletAddress: backendWallet.walletAddress,\n      webhookId: this.chargePaymentLinksWebhookId\n    })\n\n    return paymentLink\n  }\n\n  async getPaymentLink (paymentLinkId: string) {\n    const paymentLink = await this.paymentLinkModel.findById(paymentLinkId).populate('backendWalletId', 'walletAddress')\n\n    if (isEmpty(paymentLink)) {\n      throw new HttpException(`Payment link with id: ${paymentLinkId} was not found`,\n        HttpStatus.NOT_FOUND)\n    }\n    return paymentLink\n  }\n\n  async getPaymentLinks (ownerId: string) {\n    return this.paymentLinkModel.find({ ownerId })\n  }\n\n  async getWalletBalance (ownerId: string) {\n    const paymentAccount = await this.paymentAccountModel.findOne({ ownerId })\n      .populate('backendWalletId')\n\n    return this.chargeApiService.getWalletBalance(paymentAccount.backendWalletId.walletAddress)\n  }\n\n  async transferTokens (transferTokensDto: TransferTokensDto) {\n    if (isEmpty(transferTokensDto.from)) {\n      const paymentAccount = await this.paymentAccountModel\n        .findOne({ ownerId: transferTokensDto.ownerId })\n        .populate('backendWalletId')\n\n      transferTokensDto.from = paymentAccount.backendWalletId.walletAddress\n    }\n\n    return this.chargeApiService.transferTokens(transferTokensDto)\n  }\n\n  async handleWebhook (webhookEvent: WebhookEvent) {\n    if (webhookEvent.direction === 'incoming') {\n      const backendWallet = await this.chargeApiService.getBackendWalletByAddress(webhookEvent.to)\n      const paymentLink = await this.paymentLinkModel.findOne({ backendWalletId: backendWallet._id })\n\n      paymentLink.receivedAmount = webhookEvent.valueEth\n      paymentLink.receivedTokenAddress = webhookEvent.tokenAddress\n      paymentLink.receivedTokenSymbol = webhookEvent.tokenSymbol\n\n      const amountFloat = paymentLink.amount\n      const receivedAmountFloat = parseFloat(paymentLink.receivedAmount)\n\n      if (!this.isTokenMatch(paymentLink, webhookEvent)) {\n        paymentLink.status = status.WRONG_TOKEN\n      } else if (receivedAmountFloat === amountFloat) {\n        paymentLink.status = status.SUCCESSFUL\n      } else if (receivedAmountFloat > amountFloat) {\n        paymentLink.status = status.OVERPAID\n      } else {\n        paymentLink.status = status.UNDERPAID\n      }\n\n      const ownerId = paymentLink.ownerId\n      const paymentAccount = await this.paymentAccountModel.findOne({ ownerId })\n        .populate('backendWalletId')\n\n      this.transferTokens({\n        tokenAddress: paymentLink.receivedTokenAddress,\n        from: backendWallet.walletAddress,\n        to: paymentAccount.backendWalletId.walletAddress,\n        amount: paymentLink.receivedAmount\n      } as TransferTokensDto).then((transferTokensRes) => {\n        if (paymentLink.webhookUrl) {\n          const paymentLinkWebhookEvent = [\n            {\n              status: paymentLink.status.toLowerCase(),\n              from: webhookEvent.from,\n              to: webhookEvent.to,\n              txHash: webhookEvent.txHash,\n              amount: webhookEvent.value\n            },\n            {\n              status: transferTokensRes.data.status,\n              from: transferTokensRes.data.data.wallet,\n              to: transferTokensRes.data.data.to,\n              txHash: transferTokensRes.data.data.txHash,\n              amount: transferTokensRes.data.data.amount\n            }\n          ]\n          this.webhookSendService.sendData(paymentLinkWebhookEvent, paymentLink.webhookUrl)\n        }\n      }).catch(err => {\n        const errorMessage = `Failed to send funds to main account: ${err}`\n        this.logger.error(errorMessage)\n        throw new HttpException(\n          errorMessage,\n          HttpStatus.INTERNAL_SERVER_ERROR\n        )\n      })\n\n      await paymentLink.save()\n    }\n  }\n\n  isTokenMatch (paymentLink: PaymentLink, webhookEvent: WebhookEvent) {\n    return paymentLink.tokenAddress.toLowerCase() === webhookEvent.tokenAddress.toLowerCase() &&\n      paymentLink.tokenSymbol.toLowerCase() === webhookEvent.tokenSymbol.toLowerCase()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PrdOrSbxKeyRequest.html":{"url":"interfaces/PrdOrSbxKeyRequest.html","title":"interface - PrdOrSbxKeyRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PrdOrSbxKeyRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/operators/interfaces/production-or-sandbox-key.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express'\n\nexport interface PrdOrSbxKeyRequest extends Request {\n  projectId: string;\n  environment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/interfaces/project.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            ownerId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Project extends Document {\n  readonly ownerId: string;\n  readonly name: string;\n  readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectsController.html":{"url":"controllers/ProjectsController.html","title":"controller - ProjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/projects.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                checkIfSecretExists\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                createSandboxKey\n                            \n                            \n                                    \n                                    \n                                createSecret\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                findOneByIdInternal\n                            \n                            \n                                    \n                                findOneInternal\n                            \n                            \n                                    \n                                    \n                                getApiKeysInfo\n                            \n                            \n                                    \n                                    \n                                getProjectBySponsorId\n                            \n                            \n                                    \n                                    \n                                getPublic\n                            \n                            \n                                    \n                                getPublicInternal\n                            \n                            \n                                    \n                                    \n                                getSandboxKey\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        checkIfSecretExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfSecretExists(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get('/secret/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:90\n                        \n                    \n\n\n            \n                \n                        Checks if an API key secret for the given project exists\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                true if secret exists for the given project, false otherwise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:30\n                        \n                    \n\n\n            \n                \n                        Creates a new project for the authenticated user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProjectDto\n                                            \n                                                            CreateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSandboxKey(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Post('/sandbox/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:134\n                        \n                    \n\n\n            \n                \n                        Creates an sandbox API key for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the generated sandbox API key or error if key already exists\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Post('/secret/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:79\n                        \n                    \n\n\n            \n                \n                        Creates an API key secret for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the generated API key secret or error if secret already exists\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(auth0Id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:39\n                        \n                    \n\n\n            \n                \n                        Finds all the projects of the authenticated user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:50\n                        \n                    \n\n\n            \n                \n                        Fetches the project by the given id and verifies that the requesting\nauthenticated user is the owner of the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Project ID\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByIdInternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByIdInternal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('find-one-project-by-owner-id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneInternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneInternal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('find-one-project')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getApiKeysInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiKeysInfo(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get('/apikeysinfo/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:101\n                        \n                    \n\n\n            \n                \n                        Gets api keys unsensitive info for the given projectId\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                an object containing the unsensitive fields of api keys\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getProjectBySponsorId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectBySponsorId(sponsorId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get('/paymaster/:sponsorId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublic(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get('/public/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:123\n                        \n                    \n\n\n            \n                \n                        Gets the public API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the public API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getPublicInternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublicInternal(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get-public')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSandboxKey(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Get('/sandbox/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:145\n                        \n                    \n\n\n            \n                \n                        Gets the sandbox API key associated with the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the sandbox API key associated with the given project\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:68\n                        \n                    \n\n\n            \n                \n                        Updates the project with the given id with the given fields for the update\nand verifies that the requesting authenticated user is the owner of the project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Project ID\n\n                                            \n                                        \n                                        \n                                                updateProjectDto\n                                            \n                                                            UpdateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)@Put('/secret/:projectId')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.controller.ts:112\n                        \n                    \n\n\n            \n                \n                        Revokes the old API key secret and generates a new one for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the new API key secret\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Put,\n  UseGuards\n} from '@nestjs/common'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\nimport { User } from '@app/accounts-service/users/user.decorator'\nimport { CreateProjectDto } from '@app/accounts-service/projects/dto/create-project.dto'\nimport { UpdateProjectDto } from '@app/accounts-service/projects/dto/update-project.dto'\nimport { IsCreatorOwnerGuard } from '@app/accounts-service/projects/guards/is-creator-owner.guard'\nimport { IsProjectOwnerGuard } from '@app/accounts-service/projects/guards/is-project-owner.guard'\nimport { ProjectsService } from '@app/accounts-service/projects/projects.service'\nimport { MessagePattern } from '@nestjs/microservices'\n\n@Controller({ path: 'projects', version: '1' })\nexport class ProjectsController {\n  constructor (private readonly projectsService: ProjectsService) { }\n\n  /**\n   * Creates a new project for the authenticated user\n   * @param createProjectDto\n   */\n  @UseGuards(JwtAuthGuard, IsCreatorOwnerGuard)\n  @Post()\n  create (@Body() createProjectDto: CreateProjectDto) {\n    return this.projectsService.create(createProjectDto)\n  }\n\n  /**\n   * Finds all the projects of the authenticated user\n   */\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll (@User('sub') auth0Id: string) {\n    return this.projectsService.findAll(auth0Id)\n  }\n\n  /**\n   * Fetches the project by the given id and verifies that the requesting\n   * authenticated user is the owner of the project\n   * @param id Project ID\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get(':id')\n  findOne (@Param('id') id: string) {\n    return this.projectsService.findOne(id)\n  }\n\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get('/paymaster/:sponsorId')\n  getProjectBySponsorId (@Param('sponsorId') sponsorId: string) {\n    return this.projectsService.getProjectBySponsorId(sponsorId)\n  }\n\n  /**\n   * Updates the project with the given id with the given fields for the update\n   * and verifies that the requesting authenticated user is the owner of the project\n   * @param id Project ID\n   * @param updateProjectDto\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Patch(':id')\n  update (@Param('id') id: string, @Body() updateProjectDto: UpdateProjectDto) {\n    return this.projectsService.update(id, updateProjectDto)\n  }\n\n  /**\n   * Creates an API key secret for the given project\n   * @param projectId\n   * @returns the generated API key secret or error if secret already exists\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Post('/secret/:projectId')\n  createSecret (@Param('projectId') projectId: string) {\n    return this.projectsService.createSecret({ projectId, createLegacyAccount: true })\n  }\n\n  /**\n   * Checks if an API key secret for the given project exists\n   * @param projectId\n   * @returns true if secret exists for the given project, false otherwise\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get('/secret/:projectId')\n  checkIfSecretExists (@Param('projectId') projectId: string) {\n    return this.projectsService.checkIfSecretExists(projectId)\n  }\n\n  /**\n   * Gets api keys unsensitive info for the given projectId\n   * @param projectId\n   * @returns an object containing the unsensitive fields of api keys\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get('/apikeysinfo/:projectId')\n  getApiKeysInfo (@Param('projectId') projectId: string) {\n    return this.projectsService.getApiKeysInfo(projectId)\n  }\n\n  /**\n   * Revokes the old API key secret and generates a new one for the given project\n   * @param projectId\n   * @returns the new API key secret\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Put('/secret/:projectId')\n  updateSecret (@Param('projectId') projectId: string) {\n    return this.projectsService.updateSecret(projectId)\n  }\n\n  /**\n   * Gets the public API key associated with the project\n   * @param projectId\n   * @returns the public API key associated with the given project\n   */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get('/public/:projectId')\n  getPublic (@Param('projectId') projectId: string) {\n    return this.projectsService.getPublic(projectId)\n  }\n\n  /**\n  * Creates an sandbox API key for the given project\n  * @param projectId\n  * @returns the generated sandbox API key or error if key already exists\n  */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Post('/sandbox/:projectId')\n  createSandboxKey (@Param('projectId') projectId: string) {\n    return this.projectsService.createSandboxKey(projectId)\n  }\n\n  /**\n     * Gets the sandbox API key associated with the project\n     * @param projectId\n     * @returns the sandbox API key associated with the given project\n     */\n  @UseGuards(JwtAuthGuard, IsProjectOwnerGuard)\n  @Get('/sandbox/:projectId')\n  getSandboxKey (@Param('projectId') projectId: string) {\n    return this.projectsService.getSandboxKey(projectId)\n  }\n\n  @MessagePattern('find-one-project')\n  findOneInternal (id: string) {\n    return this.projectsService.findOne(id)\n  }\n\n  @MessagePattern('find-one-project-by-owner-id')\n  findOneByIdInternal (id: string) {\n    return this.projectsService.findOneByOwnerId(id)\n  }\n\n  @MessagePattern('get-public')\n  getPublicInternal (projectId: string) {\n    return this.projectsService.getPublic(projectId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_imports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\ncluster_ProjectsModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\n\n\nProjectsService \n\nProjectsService \n\nProjectsService  -->\n\nProjectsModule->ProjectsService \n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/projects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ProjectsController } from '@app/accounts-service/projects/projects.controller'\nimport { projectsProviders } from '@app/accounts-service/projects/projects.providers'\nimport { ProjectsService } from '@app/accounts-service/projects/projects.service'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { DatabaseModule } from '@app/common'\nimport {\n  apiService\n  // relayService\n} from '@app/common/constants/microservices.constants'\nimport { Module } from '@nestjs/common'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\n\n@Module({\n  imports: [\n    UsersModule,\n    DatabaseModule,\n    ClientsModule.register([\n      {\n        name: apiService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.API_HOST,\n          port: parseInt(process.env.API_TCP_PORT)\n        }\n      }\n    ])\n    // ClientsModule.register([\n    //   {\n    //     name: relayService,\n    //     transport: Transport.TCP,\n    //     options: {\n    //       host: process.env.RELAY_HOST,\n    //       port: parseInt(process.env.RELAY_TCP_PORT)\n    //     }\n    //   }\n    // ])\n  ],\n  controllers: [ProjectsController],\n  providers: [ProjectsService, ...projectsProviders],\n  exports: [ProjectsService]\n})\nexport class ProjectsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkIfSecretExists\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createSandboxKey\n                            \n                            \n                                    Async\n                                createSecret\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByOwnerId\n                            \n                            \n                                    Async\n                                getApiKeysInfo\n                            \n                            \n                                    Async\n                                getProjectBySponsorId\n                            \n                            \n                                    Async\n                                getPublic\n                            \n                            \n                                    Async\n                                getSandboxKey\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiClient: ClientProxy, projectModel: Model, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/projects/projects.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkIfSecretExists\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfSecretExists(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProjectDto\n                                            \n                                                            CreateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSandboxKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSecret(createSecretDto: CreateSecretDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSecretDto\n                                            \n                                                            CreateSecretDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(auth0Id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auth0Id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByOwnerId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByOwnerId(ownerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ownerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getApiKeysInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getApiKeysInfo(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getProjectBySponsorId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProjectBySponsorId(sponsorId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sponsorId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPublic\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPublic(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSandboxKey\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSandboxKey(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProjectDto\n                                            \n                                                            UpdateProjectDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSecret\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSecret(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/projects/projects.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateProjectDto } from '@app/accounts-service/projects/dto/create-project.dto'\nimport { UpdateProjectDto } from '@app/accounts-service/projects/dto/update-project.dto'\nimport { CreateSecretDto } from '@app/api-service/api-keys/dto/secret-key.dto'\n\nimport { Project } from '@app/accounts-service/projects/interfaces/project.interface'\nimport { projectModelString } from '@app/accounts-service/projects/projects.constants'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { apiService } from '@app/common/constants/microservices.constants'\nimport { Inject, Injectable } from '@nestjs/common'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { Model } from 'mongoose'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\n\n@Injectable()\nexport class ProjectsService {\n  constructor (\n    @Inject(apiService) private readonly apiClient: ClientProxy,\n    // @Inject(relayService) private readonly relayClient: ClientProxy,\n    @Inject(projectModelString)\n    private projectModel: Model,\n    private usersService: UsersService\n  ) { }\n\n  async create (createProjectDto: CreateProjectDto): Promise {\n    const createdProject = new this.projectModel(createProjectDto)\n    const projectId = createdProject._id\n    await callMSFunction(this.apiClient, 'create_public', projectId)\n    await callMSFunction(this.apiClient, 'create_sandbox_key', projectId)\n\n    return createdProject.save()\n  }\n\n  async findOne (id: string): Promise {\n    return this.projectModel.findById(id)\n  }\n\n  async findOneByOwnerId (ownerId: string): Promise {\n    return this.projectModel.findOne({ ownerId })\n  }\n\n  async findAll (auth0Id: string): Promise {\n    const userId = await this.usersService.findOneByAuth0Id(auth0Id)\n    return this.projectModel.find({ ownerId: userId._id })\n  }\n\n  async update (\n    id: string,\n    updateProjectDto: UpdateProjectDto\n  ): Promise {\n    return this.projectModel.findByIdAndUpdate(id, updateProjectDto, {\n      new: true\n    })\n  }\n\n  async createSecret (createSecretDto: CreateSecretDto) {\n    const secret = await callMSFunction(this.apiClient, 'create_secret', createSecretDto)\n    // if (secret) {\n    //   callMSFunction(this.relayClient, 'create_account', projectId)\n    // }\n    return secret\n  }\n\n  async createSandboxKey (projectId: string) {\n    const sandboxKey = await callMSFunction(this.apiClient, 'create_sandbox_key', projectId)\n    return sandboxKey\n  }\n\n  async getProjectBySponsorId (sponsorId: string) {\n    return this.projectModel.find({\n      'paymasterInfo.sponsorId': sponsorId\n    })\n  }\n\n  async getSandboxKey (projectId: string) {\n    return callMSFunction(this.apiClient, 'get_sandbox_key', projectId)\n  }\n\n  async checkIfSecretExists (projectId: string) {\n    const apiKeysInfo = await callMSFunction(this.apiClient, 'get_api_keys_info', projectId)\n\n    if (apiKeysInfo?.secretLastFourChars) {\n      return true\n    }\n    return false\n  }\n\n  async getApiKeysInfo (projectId: string) {\n    return callMSFunction(this.apiClient, 'get_api_keys_info', projectId)\n  }\n\n  async updateSecret (projectId: string) {\n    return callMSFunction(this.apiClient, 'update_secret', projectId)\n  }\n\n  async getPublic (projectId: string) {\n    return callMSFunction(this.apiClient, 'get_public', projectId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RelayAPIService.html":{"url":"injectables/RelayAPIService.html","title":"injectable - RelayAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RelayAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                    Async\n                                getHistoricalTxs\n                            \n                            \n                                    Private\n                                    Async\n                                httpProxy\n                            \n                            \n                                    Async\n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    relayApiUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWallet(params)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(smartWalletAddress, params)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletAddress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                params\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        httpProxy\n                        \n                    \n                \n            \n            \n                \n                        \n                    httpProxy(requestConfig: AxiosRequestConfig)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestConfig\n                                            \n                                                        AxiosRequestConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        relay\n                        \n                    \n                \n            \n            \n                \n                        \n                    relay(params)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        relayApiUrl\n                    \n                \n\n                \n                    \n                        getrelayApiUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/common/services/relay-api.service.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { HttpException, Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { AxiosRequestConfig } from 'axios'\nimport { catchError, lastValueFrom, map } from 'rxjs'\n\n@Injectable()\nexport default class RelayAPIService {\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService\n  ) { }\n\n  get relayApiUrl () {\n    return this.configService.get('relayApi')\n  }\n\n  async getHistoricalTxs (smartWalletAddress, params) {\n    const requestUrl = `${this.relayApiUrl}/wallets/actions/${smartWalletAddress}`\n    const requestConfig: AxiosRequestConfig = {\n      method: 'get',\n      url: requestUrl,\n      params\n    }\n    return await this.httpProxy(requestConfig)\n  }\n\n  async createWallet (params) {\n    const requestUrl = `${this.relayApiUrl}/wallets`\n    const name = 'createWallet'\n    const requestConfig: AxiosRequestConfig = {\n      method: 'post',\n      url: requestUrl,\n      data: {\n        name,\n        params\n      }\n    }\n    return await this.httpProxy(requestConfig)\n  }\n\n  async relay (params) {\n    const requestUrl = `${this.relayApiUrl}/relay`\n    const name = 'relay'\n    const requestConfig: AxiosRequestConfig = {\n      method: 'post',\n      url: requestUrl,\n      data: {\n        name,\n        params\n      }\n    }\n\n    return await this.httpProxy(requestConfig)\n  }\n\n  private async httpProxy (requestConfig: AxiosRequestConfig) {\n    const observable = this.httpService\n      .request(\n        requestConfig\n      )\n      .pipe(map(res => res.data))\n      .pipe(\n        catchError(e => {\n          const errorReason = e?.response?.data?.error ||\n            e?.response?.data?.errors?.message || ''\n\n          throw new HttpException(\n            `${e?.response?.statusText}: ${errorReason}`,\n            e?.response?.status\n          )\n        })\n      )\n    return await lastValueFrom(observable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelayAccount.html":{"url":"interfaces/RelayAccount.html","title":"interface - RelayAccount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RelayAccount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-relay-service/src/relay-accounts/interfaces/relay-accounts.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            encryptedPK\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            publicKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encryptedPK\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        encryptedPK:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        publicKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface RelayAccount extends Document {\n  readonly projectId: string;\n  readonly encryptedPK: string;\n  readonly publicKey: string;\n  readonly nonce: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RelayAccountsController.html":{"url":"controllers/RelayAccountsController.html","title":"controller - RelayAccountsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RelayAccountsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-relay-service/src/relay-accounts/relay-accounts.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_account')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-relay-service/src/relay-accounts/relay-accounts.controller.ts:15\n                        \n                    \n\n\n            \n                \n                        Creates an Relay account for the given project\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                the generated Relay account or error if account already exists\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { RelayAccountsService } from '@app/relay-service/relay-accounts/relay-accounts.service'\n\n@Controller()\nexport class RelayAccountsController {\n  constructor (private readonly relayAccountsService: RelayAccountsService) { }\n\n  /**\n   * Creates an Relay account for the given project\n   * @param projectId\n   * @returns the generated Relay account or error if account already exists\n   */\n  @MessagePattern('create_account')\n  createAccount (projectId: string) {\n    return this.relayAccountsService.createAccount(projectId)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RelayAccountsModule.html":{"url":"modules/RelayAccountsModule.html","title":"module - RelayAccountsModule","body":"\n                   \n\n\n\n\n    Modules\n    RelayAccountsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RelayAccountsModule\n\n\n\ncluster_RelayAccountsModule_providers\n\n\n\ncluster_RelayAccountsModule_imports\n\n\n\ncluster_RelayAccountsModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nRelayAccountsModule\n\nRelayAccountsModule\n\nRelayAccountsModule -->\n\nDatabaseModule->RelayAccountsModule\n\n\n\n\n\nRelayAccountsService \n\nRelayAccountsService \n\nRelayAccountsService  -->\n\nRelayAccountsModule->RelayAccountsService \n\n\n\n\n\nRelayAccountsService\n\nRelayAccountsService\n\nRelayAccountsModule -->\n\nRelayAccountsService->RelayAccountsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-relay-service/src/relay-accounts/relay-accounts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RelayAccountsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RelayAccountsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RelayAccountsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { DatabaseModule } from '@app/common'\nimport { RelayAccountsController } from '@app/relay-service/relay-accounts/relay-accounts.controller'\nimport { RelayAccountsService } from '@app/relay-service/relay-accounts/relay-accounts.service'\nimport { relayAccountsProviders } from '@app/relay-service/relay-accounts/relay-accounts.providers'\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [RelayAccountsController],\n  providers: [RelayAccountsService, ...relayAccountsProviders],\n  exports: [RelayAccountsService]\n})\nexport class RelayAccountsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RelayAccountsService.html":{"url":"injectables/RelayAccountsService.html","title":"injectable - RelayAccountsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RelayAccountsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-relay-service/src/relay-accounts/relay-accounts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAccount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(relayAccountModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-relay-service/src/relay-accounts/relay-accounts.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relayAccountModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAccount(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-relay-service/src/relay-accounts/relay-accounts.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport Wallet from 'ethereumjs-wallet'\nimport * as cryptoAES from 'crypto-js/aes'\nimport { relayAccountModelString } from '@app/relay-service/relay-accounts/relay-accounts.constants'\nimport { RelayAccount } from '@app/relay-service/relay-accounts/interfaces/relay-accounts.interface'\n\n@Injectable()\nexport class RelayAccountsService {\n  constructor (\n    @Inject(relayAccountModelString)\n    private relayAccountModel: Model\n  ) {}\n\n  async createAccount (projectId: string) {\n    const wallet = Wallet.generate()\n    const encryptedPK = cryptoAES.encrypt(wallet.getPrivateKeyString(), process.env.RELAY_SECRET)\n    const publicKey = wallet.getChecksumAddressString()\n    this.relayAccountModel.create({\n      projectId,\n      encryptedPK,\n      publicKey\n    })\n\n    return {\n      publicKey\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RelayDto.html":{"url":"classes/RelayDto.html","title":"class - RelayDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RelayDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                    \n                                externalId\n                            \n                            \n                                    \n                                    \n                                gasLimit\n                            \n                            \n                                    \n                                    \n                                gasPrice\n                            \n                            \n                                    \n                                methodName\n                            \n                            \n                                    \n                                    \n                                network\n                            \n                            \n                                    \n                                nonce\n                            \n                            \n                                    \n                                    \n                                ownerAddress\n                            \n                            \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                transactionBody\n                            \n                            \n                                    \n                                walletAddress\n                            \n                            \n                                    \n                                walletModule\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gasLimit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gasPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        methodName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        network\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nonce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        transactionBody\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        walletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        walletModule\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/relay.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsInt, IsObject, IsOptional, IsString } from 'class-validator'\n\nexport class RelayDto {\n  @IsOptional()\n  @IsEthereumAddress()\n    ownerAddress: string\n\n  @IsEthereumAddress()\n    walletAddress: string\n\n  @IsString()\n    data: string\n\n  @IsString()\n    nonce: string\n\n  @IsString()\n    methodName: string\n\n  @IsString()\n    signature: string\n\n  @IsString()\n    walletModule: string\n\n  @IsOptional()\n  @IsString()\n    externalId: string\n\n  @IsOptional()\n  @IsObject()\n    transactionBody: object\n\n  @IsOptional()\n  @IsInt()\n    gasPrice: number\n\n  @IsOptional()\n  @IsInt()\n    gasLimit: number\n\n  @IsOptional()\n  @IsString()\n    network: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScannerService.html":{"url":"classes/ScannerService.html","title":"class - ScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/scanner-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Abstract\n                                processBlocks\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, scannerStatusService: ScannerStatusService, rpcProvider: BaseProvider, logger)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/common/scanner-service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scannerStatusService\n                                                  \n                                                        \n                                                                        ScannerStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpcProvider\n                                                  \n                                                        \n                                                                    BaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/common/scanner-service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        processBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlocks(romBlock: number, toBlock: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/common/scanner-service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                romBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/common/scanner-service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { sleep } from '@app/notifications-service/common/utils/helper-functions'\nimport { BaseProvider } from 'nestjs-ethers'\nimport { ConfigService } from '@nestjs/config'\nimport { ScannerStatusService } from './scanner-status.service'\n\nexport abstract class ScannerService {\n  constructor (\n    protected configService: ConfigService,\n    protected scannerStatusService: ScannerStatusService,\n    protected readonly rpcProvider: BaseProvider,\n    protected readonly logger\n  ) { }\n\n  abstract processBlocks (romBlock: number, toBlock: number);\n\n  async onModuleInit (): Promise {\n    this.start()\n  }\n\n  async start () {\n    while (true) {\n      try {\n        let { number: toBlockNumber } = await this.rpcProvider.getBlock('latest')\n\n        const status = await this.scannerStatusService.getStatus()\n        const fromBlockNumber = status.blockNumber\n          ? status.blockNumber + 1\n          : toBlockNumber\n\n        const maxBlocksToProcess = this.configService.get('rpcConfig').rpc.maxBlocksToProcess\n\n        if (fromBlockNumber >= toBlockNumber) {\n          const timeout: number = this.configService.get('rpcConfig').timeoutInterval\n\n          await sleep(timeout)\n        } else if (toBlockNumber - fromBlockNumber > maxBlocksToProcess) {\n          toBlockNumber = fromBlockNumber + maxBlocksToProcess\n        }\n\n        await this.processBlocks(\n          fromBlockNumber,\n          toBlockNumber\n        )\n        await this.scannerStatusService.updateStatus(toBlockNumber)\n      } catch (error) {\n        this.logger.error(`Failed to process blocks: ${error}`)\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScannerStatus.html":{"url":"interfaces/ScannerStatus.html","title":"interface - ScannerStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScannerStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/interfaces/scanner-status.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockNumber\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface ScannerStatus extends Document {\n  readonly filter: string;\n  readonly blockNumber: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScannerStatusService.html":{"url":"classes/ScannerStatusService.html","title":"class - ScannerStatusService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScannerStatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/scanner-status.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStatus\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusModel, statusFilter)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/common/scanner-status.service.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusModel\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusFilter\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/common/scanner-status.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(blockNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/common/scanner-status.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blockNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ScannerStatusService {\n  constructor (\n    protected readonly statusModel,\n    protected readonly statusFilter\n  ) {\n\n  }\n\n  async getStatus () {\n    const status = await this.statusModel.findOne({\n      filter: this.statusFilter\n    })\n\n    if (status) {\n      return status\n    }\n\n    const newStatus = await this.statusModel.create({\n      filter: this.statusFilter\n    })\n    return newStatus\n  }\n\n  async updateStatus (blockNumber: number) {\n    await this.statusModel.updateOne({ filter: this.statusFilter }, { blockNumber }, { upsert: true })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmartContractWallet.html":{"url":"interfaces/SmartContractWallet.html","title":"interface - SmartContractWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmartContractWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/interfaces/smart-contract-wallet.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ownerAddress\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            smartWalletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smartWalletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smartWalletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface SmartContractWallet extends Document {\n  readonly ownerAddress: string;\n  readonly smartWalletAddress: string;\n  readonly projectId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmartWallet.html":{"url":"interfaces/SmartWallet.html","title":"interface - SmartWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmartWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/interfaces/smart-wallets.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isContractDeployed\n                                        \n                                \n                                \n                                        \n                                            networks\n                                        \n                                \n                                \n                                        \n                                            ownerAddress\n                                        \n                                \n                                \n                                        \n                                            paddedVersion\n                                        \n                                \n                                \n                                        \n                                            salt\n                                        \n                                \n                                \n                                        \n                                            smartWalletAddress\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                                \n                                        \n                                            versionType\n                                        \n                                \n                                \n                                        \n                                            walletFactoryCurrentAddress\n                                        \n                                \n                                \n                                        \n                                            walletFactoryOriginalAddress\n                                        \n                                \n                                \n                                        \n                                            walletImplementationCurrentAddress\n                                        \n                                \n                                \n                                        \n                                            walletImplementationOriginalAddress\n                                        \n                                \n                                \n                                        \n                                            walletModules\n                                        \n                                \n                                \n                                        \n                                            walletModulesOriginal\n                                        \n                                \n                                \n                                        \n                                            walletOwnerOriginalAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isContractDeployed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isContractDeployed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        networks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networks:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ownerAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ownerAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paddedVersion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paddedVersion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        salt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        smartWalletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        smartWalletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        versionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        versionType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletFactoryCurrentAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletFactoryCurrentAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletFactoryOriginalAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletFactoryOriginalAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletImplementationCurrentAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletImplementationCurrentAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletImplementationOriginalAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletImplementationOriginalAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletModules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletModules:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletModulesOriginal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletModulesOriginal:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletOwnerOriginalAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletOwnerOriginalAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { Document } from 'mongoose'\n\nexport interface SmartWallet extends Document {\n  readonly ownerAddress: string;\n  readonly smartWalletAddress: string;\n  readonly isContractDeployed: string;\n  readonly walletOwnerOriginalAddress: string;\n  readonly walletFactoryOriginalAddress: string;\n  readonly walletFactoryCurrentAddress: string;\n  readonly walletImplementationOriginalAddress: string;\n  readonly walletImplementationCurrentAddress: string;\n  readonly walletModulesOriginal: object;\n  readonly walletModules: object;\n  readonly salt: string;\n  readonly networks: string[];\n  // TODO:\n  // readonly upgradesInstalled: any[];\n  readonly version: string;\n  readonly paddedVersion: string;\n  readonly versionType: string;\n}\n\nexport interface SmartWalletService {\n  auth: (smartWalletsAuthDto: SmartWalletsAuthDto) => Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SmartWalletService.html":{"url":"interfaces/SmartWalletService.html","title":"interface - SmartWalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SmartWalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/interfaces/smart-wallets.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { Document } from 'mongoose'\n\nexport interface SmartWallet extends Document {\n  readonly ownerAddress: string;\n  readonly smartWalletAddress: string;\n  readonly isContractDeployed: string;\n  readonly walletOwnerOriginalAddress: string;\n  readonly walletFactoryOriginalAddress: string;\n  readonly walletFactoryCurrentAddress: string;\n  readonly walletImplementationOriginalAddress: string;\n  readonly walletImplementationCurrentAddress: string;\n  readonly walletModulesOriginal: object;\n  readonly walletModules: object;\n  readonly salt: string;\n  readonly networks: string[];\n  // TODO:\n  // readonly upgradesInstalled: any[];\n  readonly version: string;\n  readonly paddedVersion: string;\n  readonly versionType: string;\n}\n\nexport interface SmartWalletService {\n  auth: (smartWalletsAuthDto: SmartWalletsAuthDto) => Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartWalletsAAEventsService.html":{"url":"injectables/SmartWalletsAAEventsService.html","title":"injectable - SmartWalletsAAEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmartWalletsAAEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleReceiveWalletAction\n                            \n                            \n                                    Async\n                                publishUserOp\n                            \n                            \n                                    Async\n                                publishWalletAction\n                            \n                            \n                                    Async\n                                subscribeUserOpHash\n                            \n                            \n                                    Async\n                                unsubscribeUserOpHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(centClient: CentClient, analyticsService: AnalyticsService, tradeService: TradeService, accountsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        centClient\n                                                  \n                                                        \n                                                                    CentClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        analyticsService\n                                                  \n                                                        \n                                                                        AnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tradeService\n                                                  \n                                                        \n                                                                        TradeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleReceiveWalletAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleReceiveWalletAction(walletAction)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAction\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        publishUserOp\n                        \n                    \n                \n            \n            \n                \n                        \n                    publishUserOp(messageData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        publishWalletAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    publishWalletAction(sender, messageData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sender\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messageData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        subscribeUserOpHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeUserOpHash(userOpHash: string, sender: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userOpHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sender\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsubscribeUserOpHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribeUserOpHash(userOpHash, sender)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userOpHash\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sender\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmartWalletsAAEventsService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-aa-events.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common'\nimport { CentClient } from 'cent.js'\nimport { formatUnits } from 'nestjs-ethers'\nimport { AnalyticsService } from '@app/common/services/analytics.service'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { accountsService } from '@app/common/constants/microservices.constants'\nimport TradeService from '@app/common/services/trade.service'\n\n@Injectable()\nexport class SmartWalletsAAEventsService {\n  private readonly logger = new Logger(SmartWalletsAAEventsService.name)\n\n  constructor (\n    private readonly centClient: CentClient,\n    private analyticsService: AnalyticsService,\n    private tradeService: TradeService,\n    @Inject(accountsService) private readonly accountsClient: ClientProxy\n  ) { }\n\n  async publishUserOp (messageData: any) {\n    const { userOpHash } = messageData.eventData\n    try {\n      this.logger.debug(`Publishing user op to channel: transaction:#${userOpHash}`)\n      await this.centClient.publish({ channel: `transaction:#${userOpHash}`, data: messageData })\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during publish message to channel: transaction:#${userOpHash}`)\n    }\n  }\n\n  async publishWalletAction (sender, messageData) {\n    try {\n      await this.centClient.publish({ channel: `walletAction:#${sender}`, data: messageData })\n      if (messageData.name === 'tokenReceive') {\n        this.handleReceiveWalletAction(messageData)\n      }\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during publish message to channel: walletAction:#${sender}`)\n    }\n  }\n\n  async subscribeUserOpHash (userOpHash: string, sender: string) {\n    try {\n      this.logger.debug(`Subscribing to channel transaction:#${userOpHash}`)\n      await this.centClient.subscribe({ channel: `transaction:#${userOpHash}`, user: sender })\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during subscribe to channel transaction:#${userOpHash}`)\n    }\n  }\n\n  async unsubscribeUserOpHash (userOpHash, sender) {\n    try {\n      this.logger.debug(`Unsubscribing from channel transaction:#${userOpHash}`)\n      await this.centClient.unsubscribe({ channel: `transaction:#${userOpHash}`, user: sender })\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during unsubscribe from channel transaction:#${userOpHash}`)\n    }\n  }\n\n  async handleReceiveWalletAction (walletAction) {\n    try {\n      const operator = await callMSFunction(this.accountsClient, 'find-operator-by-smart-wallet', walletAction.walletAddress)\n      if (!operator) {\n        return\n      }\n      const operatorId = operator.ownerId.toString()\n      const user = await callMSFunction(this.accountsClient, 'find-one-user', operatorId)\n      const projectId = (await callMSFunction(this.accountsClient, 'find-one-project-by-owner-id', operatorId))?._id.toString()\n      const apiKey = (await callMSFunction(this.accountsClient, 'get-public', projectId))?.publicKey\n      const tokenPriceInUsd = await this.tradeService.getTokenPrice(walletAction?.sent[0]?.address)\n      const amount = formatUnits(walletAction?.sent[0]?.value, walletAction?.sent[0]?.decimals)\n      const amountUsd = Number(tokenPriceInUsd) * Number(amount)\n      const event = {\n        amount,\n        amountUsd,\n        token: walletAction.sent[0].symbol,\n        apiKey,\n        email: user.email\n      }\n      this.analyticsService.trackEvent('Account Balance Deposited', { ...event }, { user_id: user?.auth0Id })\n    } catch (error) {\n      this.logger.error('Error tracking Account Balance Deposited:', error)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartWalletsAAService.html":{"url":"injectables/SmartWalletsAAService.html","title":"injectable - SmartWalletsAAService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmartWalletsAAService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                auth\n                            \n                            \n                                    Private\n                                    Async\n                                storeSmartContractWallet\n                            \n                            \n                                    Private\n                                    Async\n                                subscribeWalletToNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, chargeApiService: ChargeApiService, smartContractWalletModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chargeApiService\n                                                  \n                                                        \n                                                                        ChargeApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartContractWalletModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        auth\n                        \n                    \n                \n            \n            \n                \n                        \n                    auth(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        storeSmartContractWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    storeSmartContractWallet(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        subscribeWalletToNotifications\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeWalletToNotifications(walletAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmartWalletsAAService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-aa.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { Inject, HttpException, HttpStatus, Injectable, Logger } from '@nestjs/common'\nimport { JwtService } from '@nestjs/jwt'\nimport { arrayify, computeAddress, hashMessage, recoverPublicKey } from 'nestjs-ethers'\nimport { SmartWalletService } from '@app/smart-wallets-service/smart-wallets/interfaces/smart-wallets.interface'\nimport { ConfigService } from '@nestjs/config'\nimport { ChargeApiService } from '@app/apps-service/charge-api/charge-api.service'\nimport { Model } from 'mongoose'\nimport { smartContractWalletString } from '@app/smart-wallets-service/smart-wallets/smart-wallets.constants'\nimport { SmartContractWallet } from '@app/smart-wallets-service/smart-wallets/interfaces/smart-contract-wallet.interface'\n\n@Injectable()\nexport class SmartWalletsAAService implements SmartWalletService {\n  private readonly logger = new Logger(SmartWalletsAAService.name)\n\n  constructor (\n    private readonly jwtService: JwtService,\n    private configService: ConfigService,\n    private chargeApiService: ChargeApiService,\n    @Inject(smartContractWalletString)\n    private smartContractWalletModel: Model\n  ) { }\n\n  async auth (smartWalletsAuthDto: SmartWalletsAuthDto) {\n    try {\n      const publicKey = recoverPublicKey(arrayify(hashMessage(arrayify(smartWalletsAuthDto.hash))), smartWalletsAuthDto.signature)\n      const recoveredAddress = computeAddress(publicKey)\n      const smartWalletAddress = smartWalletsAuthDto.smartWalletAddress\n\n      if (recoveredAddress === smartWalletsAuthDto.ownerAddress && smartWalletAddress) {\n        this.logger.debug('Signing the JWT...')\n        const jwt = this.jwtService.sign({\n          sub: smartWalletAddress,\n          info: {\n            smartWalletAddress: smartWalletsAuthDto.smartWalletAddress,\n            ownerAddress: recoveredAddress\n          },\n          channels: ['transaction', 'walletAction']\n        })\n\n        try {\n          await this.subscribeWalletToNotifications(smartWalletAddress)\n        } catch (error) {\n          this.logger.error(`An error occurred while subscribing wallet to notifications. ${error}`)\n        }\n\n        try {\n          await this.storeSmartContractWallet(smartWalletsAuthDto)\n        } catch (error) {\n          this.logger.error(`An error occurred while storing smart contract wallet. ${error}`)\n        }\n\n        this.logger.debug('Returning the JWT...')\n        return { jwt }\n      } else {\n        throw new Error('Owner Address does not match recovered address in signature')\n      }\n    } catch (err) {\n      this.logger.error(`An error occurred during Smart Wallets Auth. ${err}`)\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  private async subscribeWalletToNotifications (walletAddress: string) {\n    this.logger.debug('Subscribing wallet to notifications...')\n    const webhookId =\n      this.configService.get('INCOMING_TOKEN_TRANSFERS_WEBHOOK_ID')\n    return this.chargeApiService.addWebhookAddress({ walletAddress, webhookId })\n  }\n\n  private async storeSmartContractWallet (smartWalletsAuthDto: SmartWalletsAuthDto) {\n    if (!await this.smartContractWalletModel.findOne({ smartWalletAddress: smartWalletsAuthDto.smartWalletAddress })) {\n      await this.smartContractWalletModel.create({\n        smartWalletAddress: smartWalletsAuthDto.smartWalletAddress,\n        ownerAddress: smartWalletsAuthDto.ownerAddress,\n        projectId: smartWalletsAuthDto.projectId\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmartWalletsAPIController.html":{"url":"controllers/SmartWalletsAPIController.html","title":"controller - SmartWalletsAPIController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmartWalletsAPIController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                auth\n                            \n                            \n                                    \n                                    \n                                createWallet\n                            \n                            \n                                    \n                                    \n                                getHistoricalTxs\n                            \n                            \n                                    \n                                    \n                                getWallet\n                            \n                            \n                                    \n                                    \n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auth\n                        \n                    \n                \n            \n            \n                \n                        \n                    auth(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWallet(user: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('create')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(query, user: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('historical_txs')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWallet(user: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        relay\n                        \n                    \n                \n            \n            \n                \n                        \n                    relay(relayDto: RelayDto, user: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('relay')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relayDto\n                                            \n                                                            RelayDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport'\nimport { Controller, Post, Body, UseGuards, Get, Query } from '@nestjs/common'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\nimport { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { SmartWalletsAPIService } from '@app/api-service/smart-wallets-api/smart-wallets-api.service'\nimport { RelayDto } from '@app/smart-wallets-service/smart-wallets/dto/relay.dto'\nimport { SmartWalletOwner } from '@app/common/decorators/smart-wallet-owner.decorator'\nimport { ISmartWalletUser } from '@app/common/interfaces/smart-wallet.interface'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@Controller({ path: 'smart-wallets', version: '1' })\nexport class SmartWalletsAPIController {\n  constructor (private readonly smartWalletsAPIService: SmartWalletsAPIService) { }\n\n  @Post('auth')\n  auth (@Body() smartWalletsAuthDto: SmartWalletsAuthDto) {\n    return this.smartWalletsAPIService.auth(smartWalletsAuthDto)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Get()\n  getWallet (@SmartWalletOwner() user: ISmartWalletUser) {\n    return this.smartWalletsAPIService.getWallet(user)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Post('create')\n  createWallet (@SmartWalletOwner() user: ISmartWalletUser) {\n    return this.smartWalletsAPIService.createWallet(user)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Post('relay')\n  relay (@Body() relayDto: RelayDto, @SmartWalletOwner() user: ISmartWalletUser) {\n    relayDto.ownerAddress = user.ownerAddress\n    return this.smartWalletsAPIService.relay(relayDto)\n  }\n\n  @UseGuards(AuthGuard('jwt'))\n  @Get('historical_txs')\n  getHistoricalTxs (@Query() query, @SmartWalletOwner() user: ISmartWalletUser) {\n    user.query = query\n    return this.smartWalletsAPIService.getHistoricalTxs(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmartWalletsAPIModule.html":{"url":"modules/SmartWalletsAPIModule.html","title":"module - SmartWalletsAPIModule","body":"\n                   \n\n\n\n\n    Modules\n    SmartWalletsAPIModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartWalletsAPIModule\n\n\n\ncluster_SmartWalletsAPIModule_imports\n\n\n\ncluster_SmartWalletsAPIModule_providers\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule -->\n\nApiKeyModule->SmartWalletsAPIModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nSmartWalletsAPIModule -->\n\nJwtStrategy->SmartWalletsAPIModule\n\n\n\n\n\nSmartWalletsAPIService\n\nSmartWalletsAPIService\n\nSmartWalletsAPIModule -->\n\nSmartWalletsAPIService->SmartWalletsAPIModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            SmartWalletsAPIService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SmartWalletsAPIController\n                        \n                        \n                            SmartWalletsAPIV2Controller\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { SmartWalletsAPIController } from '@app/api-service/smart-wallets-api/smart-wallets-api.controller'\nimport { SmartWalletsAPIV2Controller } from '@app/api-service/smart-wallets-api/smart-wallets-api-v2.controller'\nimport { SmartWalletsAPIService } from '@app/api-service/smart-wallets-api/smart-wallets-api.service'\nimport { smartWalletsService } from '@app/common/constants/microservices.constants'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from '@app/api-service/smart-wallets-api/jwt.strategy'\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: smartWalletsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.SMART_WALLETS_HOST,\n          port: parseInt(process.env.SMART_WALLETS_TCP_PORT)\n        }\n      }\n    ]),\n    ApiKeyModule,\n    ConfigModule.forRoot(),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        const jwtSecret = configService.get('SMART_WALLETS_JWT_SECRET')\n        return {\n          secret: jwtSecret\n        }\n      }\n    })\n  ],\n  controllers: [\n    SmartWalletsAPIController,\n    SmartWalletsAPIV2Controller\n  ],\n  providers: [\n    SmartWalletsAPIService,\n    JwtStrategy\n  ]\n})\nexport class SmartWalletsAPIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartWalletsAPIService.html":{"url":"injectables/SmartWalletsAPIService.html","title":"injectable - SmartWalletsAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmartWalletsAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                    Async\n                                getAvailableUpgrades\n                            \n                            \n                                    Async\n                                getHistoricalTxs\n                            \n                            \n                                    Async\n                                getWallet\n                            \n                            \n                                    Async\n                                getWalletActions\n                            \n                            \n                                    Async\n                                handleTokenTransferWebhook\n                            \n                            \n                                    Async\n                                installUpgrade\n                            \n                            \n                                    Async\n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(smartWalletsClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        smartWalletsClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        auth\n                        \n                    \n                \n            \n            \n                \nauth(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWallet(user: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvailableUpgrades\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableUpgrades()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(user: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWallet(user: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWalletActions\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWalletActions(walletAddress, page, limit, tokenAddress)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                walletAddress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenAddress\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleTokenTransferWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTokenTransferWebhook(tokenTransferWebhookDto: TokenTransferWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenTransferWebhookDto\n                                            \n                                                            TokenTransferWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        installUpgrade\n                        \n                    \n                \n            \n            \n                \n                        \n                    installUpgrade()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        relay\n                        \n                    \n                \n            \n            \n                \n                        \n                    relay(relayDto: RelayDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relayDto\n                                            \n                                                            RelayDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmartWalletsAPIService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { smartWalletsService } from '@app/common/constants/microservices.constants'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { RelayDto } from '@app/smart-wallets-service/smart-wallets/dto/relay.dto'\nimport { ISmartWalletUser } from '@app/common/interfaces/smart-wallet.interface'\nimport { TokenTransferWebhookDto } from '@app/smart-wallets-service/smart-wallets/dto/token-transfer-webhook.dto'\n\n@Injectable()\nexport class SmartWalletsAPIService {\n  private readonly logger = new Logger(SmartWalletsAPIService.name)\n\n  constructor (\n    @Inject(smartWalletsService) private readonly smartWalletsClient: ClientProxy\n  ) { }\n\n  auth (smartWalletsAuthDto: SmartWalletsAuthDto) {\n    return callMSFunction(this.smartWalletsClient, 'auth', smartWalletsAuthDto)\n  }\n\n  async getWallet (user: ISmartWalletUser): Promise {\n    return callMSFunction(this.smartWalletsClient, 'get_wallet', user)\n  }\n\n  async createWallet (user: ISmartWalletUser): Promise {\n    return callMSFunction(this.smartWalletsClient, 'create_wallet', user)\n  }\n\n  async relay (relayDto: RelayDto): Promise {\n    return callMSFunction(this.smartWalletsClient, 'relay', relayDto)\n  }\n\n  async getHistoricalTxs (user: ISmartWalletUser): Promise {\n    return callMSFunction(this.smartWalletsClient, 'historical_txs', user)\n  }\n\n  async getAvailableUpgrades (): Promise {\n    return callMSFunction(this.smartWalletsClient, 'get_available_upgrades', '')\n  }\n\n  async installUpgrade (): Promise {\n    return callMSFunction(this.smartWalletsClient, 'install_upgrade', '')\n  }\n\n  async getWalletActions (walletAddress, page, limit, tokenAddress): Promise {\n    return callMSFunction(this.smartWalletsClient, 'get-all-wallet-actions', { walletAddress, page, limit, tokenAddress })\n  }\n\n  async handleTokenTransferWebhook (tokenTransferWebhookDto: TokenTransferWebhookDto) {\n    return callMSFunction(this.smartWalletsClient, 'handle-token-transfer-webhook', tokenTransferWebhookDto).catch((error) => {\n      this.logger.log('Error handling token transfer webhook:', error)\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmartWalletsAPIV2Controller.html":{"url":"controllers/SmartWalletsAPIV2Controller.html","title":"controller - SmartWalletsAPIV2Controller","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmartWalletsAPIV2Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/smart-wallets-api/smart-wallets-api-v2.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                auth\n                            \n                            \n                                    \n                                    \n                                getHistoricalTxs\n                            \n                            \n                                    \n                                    Async\n                                handleTokenTransferWebhook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        auth\n                        \n                    \n                \n            \n            \n                \n                        \n                    auth(projectId: string, smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(IsPrdOrSbxKeyGuard)@Post('auth')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api-v2.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(user: ISmartWalletUser, page?: string, limit?: string, tokenAddress?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined, IsPrdOrSbxKeyGuard)@Get('actions')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api-v2.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleTokenTransferWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTokenTransferWebhook(tokenTransferWebhookDto: TokenTransferWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('token-transfers')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/smart-wallets-api/smart-wallets-api-v2.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenTransferWebhookDto\n                                            \n                                                            TokenTransferWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Query, Get, Logger } from '@nestjs/common'\nimport { IsPrdOrSbxKeyGuard } from '@app/api-service/api-keys/guards/is-production-or-sandbox-key.guard'\nimport { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { SmartWalletsAPIService } from '@app/api-service/smart-wallets-api/smart-wallets-api.service'\nimport { AuthGuard } from '@nestjs/passport'\nimport { SmartWalletOwner } from '@app/common/decorators/smart-wallet-owner.decorator'\nimport { ISmartWalletUser } from '@app/common/interfaces/smart-wallet.interface'\nimport { TokenTransferWebhookDto } from '@app/smart-wallets-service/smart-wallets/dto/token-transfer-webhook.dto'\nimport { Project } from '@app/common/decorators/project.decorator'\n\n@Controller({ path: 'smart-wallets', version: '2' })\nexport class SmartWalletsAPIV2Controller {\n  private readonly logger = new Logger(SmartWalletsAPIV2Controller.name)\n\n  constructor (private readonly smartWalletsAPIService: SmartWalletsAPIService) { }\n\n  @UseGuards(IsPrdOrSbxKeyGuard)\n  @Post('auth')\n  auth (@Project() projectId: string, @Body() smartWalletsAuthDto: SmartWalletsAuthDto) {\n    smartWalletsAuthDto.projectId = projectId\n    return this.smartWalletsAPIService.auth(smartWalletsAuthDto)\n  }\n\n  @UseGuards(AuthGuard('jwt'), IsPrdOrSbxKeyGuard)\n  @Get('actions')\n  getHistoricalTxs (\n    @SmartWalletOwner() user: ISmartWalletUser,\n    @Query('page') page?: string,\n    @Query('limit') limit?: string,\n    @Query('tokenAddress') tokenAddress?: string\n  ) {\n    return this.smartWalletsAPIService.getWalletActions(user.smartWalletAddress, page, limit, tokenAddress)\n  }\n\n  @Post('token-transfers')\n  async handleTokenTransferWebhook (\n    @Body() tokenTransferWebhookDto: TokenTransferWebhookDto\n  ) {\n    this.logger.debug(\n      'A request has been made to token-transfers:',\n      JSON.stringify(tokenTransferWebhookDto)\n    )\n\n    this.smartWalletsAPIService.handleTokenTransferWebhook(\n      tokenTransferWebhookDto\n    )\n\n    this.logger.debug('Returning OK response from the webhook endpoint...')\n\n    return { data: 'ok' }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SmartWalletsAuthDto.html":{"url":"classes/SmartWalletsAuthDto.html","title":"class - SmartWalletsAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SmartWalletsAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                hash\n                            \n                            \n                                    \n                                ownerAddress\n                            \n                            \n                                    \n                                    \n                                projectId\n                            \n                            \n                                    \n                                signature\n                            \n                            \n                                    \n                                    \n                                smartWalletAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ownerAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        projectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        smartWalletAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/dto/smart-wallets-auth.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsOptional, IsString } from 'class-validator'\n\nexport class SmartWalletsAuthDto {\n  @IsString()\n    hash: string\n\n  @IsString()\n    signature: string\n\n  @IsEthereumAddress()\n    ownerAddress: string\n\n  @IsOptional()\n  @IsEthereumAddress()\n    smartWalletAddress: string\n\n  @IsOptional()\n  @IsString()\n    projectId: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmartWalletsController.html":{"url":"controllers/SmartWalletsController.html","title":"controller - SmartWalletsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmartWalletsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                auth\n                            \n                            \n                                    \n                                createWallet\n                            \n                            \n                                    \n                                getAvailableUpgrades\n                            \n                            \n                                    \n                                getHistoricalTxs\n                            \n                            \n                                    \n                                getWallet\n                            \n                            \n                                    \n                                installUpgrade\n                            \n                            \n                                    \n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auth\n                        \n                    \n                \n            \n            \n                \n                        \n                    auth(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('auth')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWallet(smartWalletUser: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_wallet')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletUser\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAvailableUpgrades\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableUpgrades()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_available_upgrades')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(user: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('historical_txs')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWallet(smartWalletUser: ISmartWalletUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_wallet')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletUser\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        installUpgrade\n                        \n                    \n                \n            \n            \n                \n                        \n                    installUpgrade()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('install_upgrade')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        relay\n                        \n                    \n                \n            \n            \n                \n                        \n                    relay(relayDto: RelayDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('relay')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relayDto\n                                            \n                                                            RelayDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { SmartWalletsLegacyService } from '@app/smart-wallets-service/smart-wallets/services/smart-wallets-legacy.service'\nimport { SmartWalletsAAService } from '@app/smart-wallets-service/smart-wallets/services/smart-wallets-aa.service'\nimport { Body, Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { ISmartWalletUser } from '@app/common/interfaces/smart-wallet.interface'\nimport { RelayDto } from '@app/smart-wallets-service/smart-wallets/dto/relay.dto'\n\n@Controller()\nexport class SmartWalletsController {\n  constructor (\n    private readonly legacyService: SmartWalletsLegacyService,\n    private readonly aaService: SmartWalletsAAService\n  ) { }\n\n  @MessagePattern('auth')\n  auth (@Body() smartWalletsAuthDto: SmartWalletsAuthDto) {\n    if (smartWalletsAuthDto.smartWalletAddress) {\n      return this.aaService.auth(smartWalletsAuthDto)\n    } else {\n      return this.legacyService.auth(smartWalletsAuthDto)\n    }\n  }\n\n  @MessagePattern('get_wallet')\n  getWallet (smartWalletUser: ISmartWalletUser) {\n    return this.legacyService.getWallet(smartWalletUser)\n  }\n\n  @MessagePattern('create_wallet')\n  createWallet (smartWalletUser: ISmartWalletUser) {\n    return this.legacyService.createWallet(smartWalletUser)\n  }\n\n  @MessagePattern('relay')\n  relay (relayDto: RelayDto) {\n    return this.legacyService.relay(relayDto)\n  }\n\n  @MessagePattern('historical_txs')\n  getHistoricalTxs (user: ISmartWalletUser) {\n    return this.legacyService.getHistoricalTxs(user)\n  }\n\n  @MessagePattern('get_available_upgrades')\n  getAvailableUpgrades () {\n    return this.legacyService.getAvailableUpgrades()\n  }\n\n  @MessagePattern('install_upgrade')\n  installUpgrade () {\n    return this.legacyService.installUpgrade()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartWalletsEventsService.html":{"url":"injectables/SmartWalletsEventsService.html","title":"injectable - SmartWalletsEventsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmartWalletsEventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onCreateSmartWalletFailed\n                            \n                            \n                                    Async\n                                onCreateSmartWalletStarted\n                            \n                            \n                                    Async\n                                onCreateSmartWalletSuccess\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                onRelayFailed\n                            \n                            \n                                    Async\n                                onRelayStarted\n                            \n                            \n                                    Async\n                                onRelaySuccess\n                            \n                            \n                                    Async\n                                onTransactionHash\n                            \n                            \n                                    Async\n                                publishMessage\n                            \n                            \n                                    Async\n                                subscribeToPublications\n                            \n                            \n                                    Async\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sharedAddresses\n                                \n                                \n                                    walletVersion\n                                \n                                \n                                    walletPaddedVersion\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, centrifuge: Centrifuge, centClient: CentClient, smartWalletModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        centrifuge\n                                                  \n                                                        \n                                                                    Centrifuge\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        centClient\n                                                  \n                                                        \n                                                                    CentClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartWalletModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onCreateSmartWalletFailed\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCreateSmartWalletFailed(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onCreateSmartWalletStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCreateSmartWalletStarted(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onCreateSmartWalletSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    onCreateSmartWalletSuccess(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRelayFailed\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRelayFailed(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRelayStarted\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRelayStarted(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRelaySuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRelaySuccess(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onTransactionHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    onTransactionHash(eventData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        publishMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    publishMessage(eventData, messageData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:187\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messageData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        subscribeToPublications\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeToPublications()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    unsubscribe(eventData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmartWalletsEventsService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sharedAddresses\n                    \n                \n\n                \n                    \n                        getsharedAddresses()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        walletVersion\n                    \n                \n\n                \n                    \n                        getwalletVersion()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:67\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        walletPaddedVersion\n                    \n                \n\n                \n                    \n                        getwalletPaddedVersion()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets-events.service.ts:71\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Model } from 'mongoose'\nimport { ConfigService } from '@nestjs/config'\nimport { smartWalletString } from '@app/smart-wallets-service/smart-wallets/smart-wallets.constants'\nimport { SmartWallet } from '@app/smart-wallets-service/smart-wallets/interfaces/smart-wallets.interface'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { Centrifuge } from 'centrifuge'\nimport { websocketEvents } from '@app/smart-wallets-service/smart-wallets/constants/smart-wallets.constants'\nimport { CentClient } from 'cent.js'\nimport { sleep } from '@app/notifications-service/common/utils/helper-functions'\nimport { has, get } from 'lodash'\nimport { versionType } from '@app/smart-wallets-service/smart-wallets/schemas/smart-wallet.schema'\n\n@Injectable()\nexport class SmartWalletsEventsService {\n  private readonly logger = new Logger(SmartWalletsEventsService.name)\n\n  constructor (\n    private readonly configService: ConfigService,\n    private readonly centrifuge: Centrifuge,\n    private readonly centClient: CentClient,\n    @Inject(smartWalletString)\n    private smartWalletModel: Model\n  ) { }\n\n  async onModuleInit (): Promise {\n    this.subscribeToPublications()\n  }\n\n  async subscribeToPublications () {\n    this.centrifuge.on('publication', (ctx) => {\n      const { data, channel } = ctx\n      if (channel === 'relayer') {\n        const { eventName, eventData } = data\n        switch (eventName) {\n          case 'createWalletStarted':\n            this.onCreateSmartWalletStarted(eventData)\n            break\n          case 'createWalletSuccess':\n            this.onCreateSmartWalletSuccess(eventData)\n            break\n          case 'createWalletFailed':\n            this.onCreateSmartWalletFailed(eventData)\n            break\n          case 'relayStarted':\n            this.onRelayStarted(eventData)\n            break\n          case 'relaySuccess':\n            this.onRelaySuccess(eventData)\n            break\n          case 'relayFailed':\n            this.onRelayFailed(eventData)\n            break\n          case 'transactionHash':\n            this.onTransactionHash(eventData)\n            break\n        }\n      }\n    })\n\n    this.centrifuge.connect()\n  }\n\n  get sharedAddresses () {\n    return this.configService.get('sharedAddresses')\n  }\n\n  get walletVersion () {\n    return this.configService.get('version')\n  }\n\n  get walletPaddedVersion () {\n    return this.configService.get('paddedVersion')\n  }\n\n  async onCreateSmartWalletStarted (eventData: any) {\n    this.logger.log(`onCreateSmartWalletStarted: ${JSON.stringify(eventData)}`)\n    try {\n      const {\n        smartWalletAddress,\n        smartWalletUser,\n        salt,\n        walletModules\n      } = eventData\n      const {\n        ownerAddress\n      } = smartWalletUser\n\n      if (!await this.smartWalletModel.findOne({ ownerAddress })) {\n        this.smartWalletModel.create({\n          salt,\n          ownerAddress,\n          walletModules,\n          smartWalletAddress,\n          walletOwnerOriginalAddress: ownerAddress,\n          walletFactoryOriginalAddress: this.sharedAddresses.WalletFactory,\n          walletFactoryCurrentAddress: this.sharedAddresses.WalletFactory,\n          walletImplementationOriginalAddress: this.sharedAddresses.WalletImplementation,\n          walletImplementationCurrentAddress: this.sharedAddresses.WalletImplementation,\n          walletModulesOriginal: walletModules,\n          networks: ['fuse'],\n          version: this.walletVersion,\n          versionType: get(eventData, 'versionType', versionType.V2),\n          paddedVersion: this.walletPaddedVersion\n        })\n\n        await this.publishMessage(eventData, {\n          eventName: websocketEvents.WALLET_CREATION_STARTED,\n          eventData: {}\n        })\n      }\n    } catch (error) {\n      this.logger.error(`An error occurred during create smart wallet. ${error}`)\n    }\n  }\n\n  async onTransactionHash (eventData: any) {\n    await this.publishMessage(eventData, {\n      eventName: websocketEvents.TRANSACTION_HASH,\n      eventData\n    })\n  }\n\n  async onCreateSmartWalletSuccess (eventData: any) {\n    this.logger.log(`onCreateSmartWalletSuccess: ${JSON.stringify(eventData)}`)\n    try {\n      const {\n        ownerAddress,\n        smartWalletAddress,\n        walletModules,\n        networks,\n        version,\n        paddedVersion\n      } =\n        await this.smartWalletModel.findOneAndUpdate(\n          { smartWalletAddress: eventData.smartWalletAddress },\n          { isContractDeployed: true },\n          { new: true }\n        )\n      const data = {\n        ownerAddress,\n        smartWalletAddress,\n        walletModules,\n        networks,\n        version,\n        paddedVersion\n      }\n      await this.publishMessage(eventData, {\n        eventName: websocketEvents.WALLET_CREATION_SUCCEEDED,\n        eventData: data\n      })\n      this.unsubscribe(eventData)\n    } catch (error) {\n      this.logger.error(`An error occurred during find and update smart wallet. ${error}`)\n    }\n  }\n\n  async onCreateSmartWalletFailed (eventData: any) {\n    await this.publishMessage(eventData, {\n      eventName: websocketEvents.WALLET_CREATION_FAILED\n    })\n    this.unsubscribe(eventData)\n  }\n\n  async onRelaySuccess (eventData: any) {\n    await this.publishMessage(eventData, {\n      eventName: websocketEvents.TRANSACTION_SUCCEEDED,\n      eventData\n    })\n    this.unsubscribe(eventData)\n  }\n\n  async onRelayFailed (eventData: any) {\n    await this.publishMessage(eventData, {\n      eventName: websocketEvents.TRANSACTION_FAILED,\n      eventData\n    })\n    this.unsubscribe(eventData)\n  }\n\n  async onRelayStarted (eventData: any) {\n    await this.publishMessage(eventData, {\n      eventName: websocketEvents.TRANSACTION_STARTED,\n      eventData\n    })\n  }\n\n  async publishMessage (eventData, messageData) {\n    try {\n      if (!has(eventData, 'transactionId')) {\n        return\n      }\n      const { transactionId } = eventData\n      await this.centClient.publish({ channel: `transaction:#${transactionId}`, data: messageData })\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during publish message to channel: transaction:# eventData: ${JSON.stringify(eventData)}`)\n    }\n  }\n\n  async unsubscribe (eventData) {\n    try {\n      if (!has(eventData, 'transactionId')) {\n        return\n      }\n      await sleep(500)\n      const { smartWalletAddress, transactionId } = eventData\n      const { ownerAddress } = await this.smartWalletModel.findOne({ smartWalletAddress })\n      await this.centClient.unsubscribe({ channel: `transaction:#${transactionId}`, user: ownerAddress })\n    } catch (error) {\n      this.logger.error({ error })\n      this.logger.error(`An error occurred during publish message to channel: transaction:# eventData: ${JSON.stringify(eventData)}`)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmartWalletsLegacyService.html":{"url":"injectables/SmartWalletsLegacyService.html","title":"injectable - SmartWalletsLegacyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmartWalletsLegacyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                auth\n                            \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                    Async\n                                getAvailableUpgrades\n                            \n                            \n                                    Async\n                                getHistoricalTxs\n                            \n                            \n                                    Async\n                                getWallet\n                            \n                            \n                                    Async\n                                installUpgrade\n                            \n                            \n                                    Async\n                                relay\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sharedAddresses\n                                \n                                \n                                    wsUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService, relayAPIService: RelayAPIService, centClient: CentClient, smartWalletModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        relayAPIService\n                                                  \n                                                        \n                                                                        RelayAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        centClient\n                                                  \n                                                        \n                                                                    CentClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smartWalletModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        auth\n                        \n                    \n                \n            \n            \n                \n                        \n                    auth(smartWalletsAuthDto: SmartWalletsAuthDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletsAuthDto\n                                            \n                                                            SmartWalletsAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWallet(smartWalletUser: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletUser\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAvailableUpgrades\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAvailableUpgrades()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHistoricalTxs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHistoricalTxs(user: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWallet\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWallet(smartWalletUser: ISmartWalletUser)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                smartWalletUser\n                                            \n                                                            ISmartWalletUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        installUpgrade\n                        \n                    \n                \n            \n            \n                \n                        \n                    installUpgrade()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        relay\n                        \n                    \n                \n            \n            \n                \n                        \n                    relay(relayDto: RelayDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relayDto\n                                            \n                                                            RelayDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(SmartWalletsLegacyService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sharedAddresses\n                    \n                \n\n                \n                    \n                        getsharedAddresses()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        wsUrl\n                    \n                \n\n                \n                    \n                        getwsUrl()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-smart-wallets-service/src/smart-wallets/services/smart-wallets-legacy.service.ts:32\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Model } from 'mongoose'\nimport { SmartWalletsAuthDto } from '@app/smart-wallets-service/dto/smart-wallets-auth.dto'\nimport { HttpException, HttpStatus, Inject, Injectable, Logger } from '@nestjs/common'\nimport { JwtService } from '@nestjs/jwt'\nimport { arrayify, computeAddress, hashMessage, recoverPublicKey } from 'nestjs-ethers'\nimport { ConfigService } from '@nestjs/config'\nimport { smartWalletString } from '@app/smart-wallets-service/smart-wallets/smart-wallets.constants'\nimport { SmartWallet, SmartWalletService } from '@app/smart-wallets-service/smart-wallets/interfaces/smart-wallets.interface'\nimport { generateSalt, generateTransactionId } from 'apps/charge-smart-wallets-service/src/common/utils/helper-functions'\nimport RelayAPIService from 'apps/charge-smart-wallets-service/src/common/services/relay-api.service'\nimport { RelayDto } from '@app/smart-wallets-service/smart-wallets/dto/relay.dto'\nimport { ISmartWalletUser } from '@app/common/interfaces/smart-wallet.interface'\nimport { CentClient } from 'cent.js'\n\n@Injectable()\nexport class SmartWalletsLegacyService implements SmartWalletService {\n  private readonly logger = new Logger(SmartWalletsLegacyService.name)\n\n  constructor (\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly relayAPIService: RelayAPIService,\n    private readonly centClient: CentClient,\n    @Inject(smartWalletString)\n    private smartWalletModel: Model\n  ) { }\n\n  get sharedAddresses () {\n    return this.configService.get('sharedAddresses')\n  }\n\n  get wsUrl () {\n    return this.configService.get('wsUrl')\n  }\n\n  async auth (smartWalletsAuthDto: SmartWalletsAuthDto) {\n    try {\n      const publicKey = recoverPublicKey(arrayify(hashMessage(arrayify(smartWalletsAuthDto.hash))), smartWalletsAuthDto.signature)\n      const recoveredAddress = computeAddress(publicKey)\n\n      if (recoveredAddress === smartWalletsAuthDto.ownerAddress) {\n        const jwt = this.jwtService.sign({\n          sub: recoveredAddress,\n          info: {\n            ownerAddress: recoveredAddress\n          },\n          channels: ['transaction']\n        })\n        return { jwt }\n      } else {\n        throw new Error('Owner Address does not match recovered address in signature')\n      }\n    } catch (err) {\n      this.logger.error(`An error occurred during Smart Wallets Auth. ${err}`)\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  async getWallet (smartWalletUser: ISmartWalletUser) {\n    const { ownerAddress } = smartWalletUser\n    const smartWallet = await this.smartWalletModel.findOne({ ownerAddress })\n    if (!smartWallet) {\n      throw new Error('Not found')\n    }\n    if (!smartWallet.isContractDeployed) {\n      const transactionId = generateTransactionId(smartWallet.salt)\n      const walletModules = this.sharedAddresses.walletModules\n      this.relayAPIService.createWallet({\n        v2: true,\n        salt: smartWallet.salt,\n        transactionId,\n        smartWalletUser,\n        owner: ownerAddress,\n        walletModules,\n        walletFactoryAddress: this.sharedAddresses.WalletFactory\n      }).catch(err => {\n        const errorMessage = `Retry wallet creation failed: ${err}`\n        this.logger.error(errorMessage)\n      })\n    }\n\n    const {\n      smartWalletAddress,\n      walletModules,\n      networks,\n      version,\n      paddedVersion\n    } = smartWallet\n\n    return {\n      smartWalletAddress,\n      walletModules,\n      networks,\n      version,\n      paddedVersion,\n      ownerAddress\n    }\n  }\n\n  async createWallet (smartWalletUser: ISmartWalletUser) {\n    try {\n      const { ownerAddress } = smartWalletUser\n      if (await this.smartWalletModel.findOne({ ownerAddress })) {\n        throw new Error('Owner address already has a deployed smart wallet')\n      }\n      const salt = generateSalt()\n      const transactionId = generateTransactionId(salt)\n      const walletModules = this.sharedAddresses.walletModules\n      await this.centClient.subscribe({ channel: `transaction:#${transactionId}`, user: ownerAddress })\n      this.relayAPIService.createWallet({\n        v2: true,\n        salt,\n        transactionId,\n        smartWalletUser,\n        owner: ownerAddress,\n        walletModules,\n        walletFactoryAddress: this.sharedAddresses.WalletFactory\n      })\n      return {\n        connectionUrl: this.wsUrl,\n        transactionId\n      }\n    } catch (err) {\n      this.logger.error(`An error occurred during Smart Wallets Creation. ${err}`)\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  async relay (relayDto: RelayDto) {\n    try {\n      const transactionId = generateTransactionId(relayDto.data)\n      await this.centClient.subscribe({ channel: `transaction:#${transactionId}`, user: relayDto.ownerAddress })\n      this.relayAPIService.relay({\n        v2: true,\n        transactionId,\n        ...relayDto\n      })\n      return {\n        connectionUrl: this.wsUrl,\n        transactionId\n      }\n    } catch (err) {\n      this.logger.error(`An error occurred during relay execution. ${err}`)\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  async getHistoricalTxs (user: ISmartWalletUser) {\n    try {\n      const { smartWalletAddress } = await this.smartWalletModel.findOne({ ownerAddress: user.ownerAddress })\n      const result = await this.relayAPIService.getHistoricalTxs(smartWalletAddress, user.query)\n      return {\n        ...result\n      }\n    } catch (error) {\n      this.logger.error(`An error occurred during fetching historical txs. ${error}`)\n      throw new HttpException(error.message, HttpStatus.BAD_REQUEST)\n    }\n  }\n\n  // TODO\n  async getAvailableUpgrades () {\n  }\n\n  // TODO\n  async installUpgrade () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SmartWalletsModule.html":{"url":"modules/SmartWalletsModule.html","title":"module - SmartWalletsModule","body":"\n                   \n\n\n\n\n    Modules\n    SmartWalletsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SmartWalletsModule\n\n\n\ncluster_SmartWalletsModule_providers\n\n\n\ncluster_SmartWalletsModule_imports\n\n\n\n\nChargeApiModule\n\nChargeApiModule\n\n\n\nSmartWalletsModule\n\nSmartWalletsModule\n\nSmartWalletsModule -->\n\nChargeApiModule->SmartWalletsModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nSmartWalletsModule -->\n\nDatabaseModule->SmartWalletsModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nSmartWalletsModule -->\n\nNotificationsModule->SmartWalletsModule\n\n\n\n\n\nOperatorsModule\n\nOperatorsModule\n\nSmartWalletsModule -->\n\nOperatorsModule->SmartWalletsModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nSmartWalletsModule -->\n\nProjectsModule->SmartWalletsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nSmartWalletsModule -->\n\nUsersModule->SmartWalletsModule\n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nSmartWalletsModule -->\n\nAnalyticsService->SmartWalletsModule\n\n\n\n\n\nRelayAPIService\n\nRelayAPIService\n\nSmartWalletsModule -->\n\nRelayAPIService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsAAService\n\nSmartWalletsAAService\n\nSmartWalletsModule -->\n\nSmartWalletsAAService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsEventsService\n\nSmartWalletsEventsService\n\nSmartWalletsModule -->\n\nSmartWalletsEventsService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsLegacyService\n\nSmartWalletsLegacyService\n\nSmartWalletsModule -->\n\nSmartWalletsLegacyService->SmartWalletsModule\n\n\n\n\n\nTradeService\n\nTradeService\n\nSmartWalletsModule -->\n\nTradeService->SmartWalletsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/smart-wallets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnalyticsService\n                        \n                        \n                            RelayAPIService\n                        \n                        \n                            SmartWalletsAAService\n                        \n                        \n                            SmartWalletsEventsService\n                        \n                        \n                            SmartWalletsLegacyService\n                        \n                        \n                            TradeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SmartWalletsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChargeApiModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            OperatorsModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SmartWalletsController } from '@app/smart-wallets-service/smart-wallets/smart-wallets.controller'\nimport { SmartWalletsLegacyService } from '@app/smart-wallets-service/smart-wallets/services/smart-wallets-legacy.service'\nimport { SmartWalletsAAService } from '@app/smart-wallets-service/smart-wallets/services/smart-wallets-aa.service'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { JwtModule } from '@nestjs/jwt'\nimport { DatabaseModule } from '@app/common'\nimport configuration from 'apps/charge-smart-wallets-service/src/common/config/configuration'\nimport { smartWalletsProviders } from '@app/smart-wallets-service/smart-wallets/smart-wallets.providers'\nimport { HttpModule } from '@nestjs/axios'\nimport { SmartWalletsEventsService } from '@app/smart-wallets-service/smart-wallets/smart-wallets-events.service'\nimport RelayAPIService from 'apps/charge-smart-wallets-service/src/common/services/relay-api.service'\nimport { CentrifugeProvider } from '@app/common/centrifuge/centrifuge.provider'\nimport { CentrifugeClientProvider } from '@app/common/centrifuge/centrifugeClient.provider'\nimport { getEnvPath } from '@app/common/utils/env.helper'\nimport path from 'path'\nimport { NotificationsModule } from '@app/api-service/notifications/notifications.module'\nimport { ChargeApiModule } from '@app/apps-service/charge-api/charge-api.module'\nimport { UsersModule } from '@app/accounts-service/users/users.module'\nimport { ProjectsModule } from '@app/accounts-service/projects/projects.module'\nimport { AnalyticsService } from '@app/common/services/analytics.service'\nimport { OperatorsModule } from '@app/accounts-service/operators/operators.module'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { accountsService } from '@app/common/constants/microservices.constants'\nimport TradeService from '@app/common/services/trade.service'\n\n@Module({\n  imports: [\n    DatabaseModule,\n    ChargeApiModule,\n    NotificationsModule,\n    UsersModule,\n    ProjectsModule,\n    OperatorsModule,\n    ClientsModule.register([\n      {\n        name: accountsService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.ACCOUNTS_HOST,\n          port: parseInt(process.env.ACCOUNTS_TCP_PORT)\n        }\n      }\n    ]),\n    ConfigModule.forRoot({\n      envFilePath: getEnvPath(path.join(__dirname, 'common/config')),\n      load: [configuration]\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        const jwtSecret = configService.get('SMART_WALLETS_JWT_SECRET')\n        return {\n          secret: jwtSecret\n        }\n      }\n    }),\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${configService.get('fuseWalletBackendJwt')}`\n        }\n      }),\n      inject: [ConfigService]\n    })\n  ],\n  providers: [\n    CentrifugeClientProvider,\n    CentrifugeProvider,\n    SmartWalletsEventsService,\n    RelayAPIService,\n    AnalyticsService,\n    SmartWalletsLegacyService,\n    SmartWalletsAAService,\n    TradeService,\n    ...smartWalletsProviders\n  ],\n  controllers: [SmartWalletsController]\n})\nexport class SmartWalletsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StakeDto.html":{"url":"classes/StakeDto.html","title":"class - StakeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StakeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/dto/stake.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accountAddress\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                            \n                                    \n                                tokenAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accountAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/stake.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/stake.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/stake.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsString } from 'class-validator'\n\nexport class StakeDto {\n  @IsEthereumAddress()\n    accountAddress: string\n\n  @IsString()\n    tokenAmount: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StakeTokens.html":{"url":"classes/StakeTokens.html","title":"class - StakeTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StakeTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                getERC20TransferData\n                            \n                            \n                                    Async\n                                getReceivedTokenData\n                            \n                            \n                                    Async\n                                handleBatchExecution\n                            \n                            \n                                    Async\n                                handleSingleExecution\n                            \n                            \n                                descGenerator\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(parsedUserOp, sentTokenData, receivedTokenData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                sentTokenData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                receivedTokenData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: string; walletAddress: any; status: string; sent: {}; received: {}; userOpHash: any; txHash: string; blockNumber: number; description: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:10\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getERC20TransferData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getERC20TransferData(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getReceivedTokenData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getReceivedTokenData(to)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleBatchExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleBatchExecution(parsedUserOp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSingleExecution\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSingleExecution(parsedUserOp)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/stake.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_20_TYPE, NATIVE_TOKEN_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\nimport { first, last } from 'lodash'\nimport { ethers } from 'ethers'\nimport { LIQUID_STAKING_CONTRACT_ADDRESS } from '@app/smart-wallets-service/common/constants/addresess'\n\nexport default class StakeTokens extends WalletAction {\n  async execute (parsedUserOp: any) {\n    const { name: walletFunctionName } = parsedUserOp.walletFunction\n\n    if (walletFunctionName === 'executeBatch') {\n      return this.handleBatchExecution(parsedUserOp)\n    } else {\n      return this.handleSingleExecution(parsedUserOp)\n    }\n  }\n\n  async handleBatchExecution (parsedUserOp: any) {\n    const lastCallData: any = last(parsedUserOp.targetFunctions)\n    if (lastCallData.name !== 'enter') return\n\n    const firstCallData: any = first(parsedUserOp.targetFunctions)\n    const sentTokenData = await this.getERC20TransferData(firstCallData)\n    const receivedTokenData = await this.getReceivedTokenData(sentTokenData.to)\n\n    return this.constructResponse(parsedUserOp, sentTokenData, receivedTokenData)\n  }\n\n  async handleSingleExecution (parsedUserOp) {\n    const { name, value, targetAddress } = parsedUserOp.targetFunctions[0]\n    if (name !== 'deposit') return\n\n    const tokenTransferData = {\n      type: NATIVE_TOKEN_TYPE,\n      ...NATIVE_FUSE_TOKEN,\n      value: value.toString(),\n      to: targetAddress\n    }\n\n    const receivedTokenData = await this.getReceivedTokenData(LIQUID_STAKING_CONTRACT_ADDRESS)\n\n    return this.constructResponse(parsedUserOp, tokenTransferData, receivedTokenData)\n  }\n\n  async getERC20TransferData ({ targetAddress, callData }) {\n    const [to, value] = callData\n    const sentTokenDetails = await this.tokenService.fetchTokenDetails(targetAddress)\n    return {\n      type: ERC_20_TYPE,\n      ...sentTokenDetails,\n      value: value.toString(),\n      to\n    } as ERC20Transfer\n  }\n\n  async getReceivedTokenData (to) {\n    const receiveTokenDetails = await this.tokenService.fetchTokenDetails(to)\n    return {\n      type: ERC_20_TYPE,\n      ...receiveTokenDetails,\n      value: '0',\n      from: ethers.constants.AddressZero\n    } as ERC20Transfer\n  }\n\n  constructResponse (parsedUserOp, sentTokenData, receivedTokenData) {\n    return {\n      name: 'stakeTokens',\n      walletAddress: parsedUserOp.sender,\n      status: 'pending',\n      sent: [sentTokenData],\n      received: [receivedTokenData],\n      userOpHash: parsedUserOp.userOpHash,\n      txHash: '',\n      blockNumber: 0,\n      description: this.generateDescription({\n        action: 'Staked',\n        symbol: sentTokenData.symbol,\n        decimals: sentTokenData.decimals,\n        valueInWei: sentTokenData.value\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StakedToken.html":{"url":"interfaces/StakedToken.html","title":"interface - StakedToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StakedToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/interfaces/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Token\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            earnedAmountUSD\n                                        \n                                \n                                \n                                        \n                                            stakedAmount\n                                        \n                                \n                                \n                                        \n                                            stakedAmountUSD\n                                        \n                                \n                                \n                                        \n                                            stakingApr\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        earnedAmountUSD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        earnedAmountUSD:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakedAmount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakedAmount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakedAmountUSD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakedAmountUSD:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakingApr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakingApr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\n\ninterface Token {\n    tokenAddress: string\n    tokenSymbol: string\n    tokenName: string\n    tokenLogoURI: string\n    unStakeTokenAddress: string\n}\n\nexport interface StakingOption extends Token {\n    stakingProviderId: string\n    stakingApr?: number\n    tvl?: number\n}\n\nexport interface StakedToken extends Token {\n    stakedAmount: number\n    stakedAmountUSD: number\n    earnedAmountUSD: number\n    stakingApr: number\n}\n\nexport interface UserStakedTokens {\n    totalStakedAmountUSD: string\n    totalEarnedAmountUSD: string\n    stakedTokens: Array\n}\n\nexport interface StakingProvider {\n    address: string\n    stake: (stakeDto: StakeDto) => string\n    unStake: (unStakeDto: UnstakeDto) => string\n    stakedToken: (accountAddress: string, stakingOption: StakingOption) => Promise\n    stakingApr: (stakingOption: StakingOption) => Promise\n    tvl: (stakingOption: StakingOption) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StakingAPIModule.html":{"url":"modules/StakingAPIModule.html","title":"module - StakingAPIModule","body":"\n                   \n\n\n\n\n    Modules\n    StakingAPIModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StakingAPIModule\n\n\n\ncluster_StakingAPIModule_imports\n\n\n\ncluster_StakingAPIModule_providers\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\n\n\nStakingAPIModule\n\nStakingAPIModule\n\nStakingAPIModule -->\n\nApiKeyModule->StakingAPIModule\n\n\n\n\n\nStakingAPIService\n\nStakingAPIService\n\nStakingAPIModule -->\n\nStakingAPIService->StakingAPIModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/staking-api/staking-api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StakingAPIService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StakingApiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiKeyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { ClientsModule, Transport } from '@nestjs/microservices'\nimport { ApiKeyModule } from '@app/api-service/api-keys/api-keys.module'\nimport { StakingApiController } from '@app/api-service/staking-api/staking-api.controller'\nimport { StakingAPIService } from '@app/api-service/staking-api/staking-api.service'\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: networkService,\n        transport: Transport.TCP,\n        options: {\n          host: process.env.NETWORK_HOST,\n          port: parseInt(process.env.NETWORK_TCP_PORT)\n        }\n      }\n    ]),\n    ApiKeyModule\n  ],\n  providers: [StakingAPIService],\n  controllers: [StakingApiController]\n})\nexport class StakingAPIModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StakingAPIService.html":{"url":"injectables/StakingAPIService.html","title":"injectable - StakingAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StakingAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/staking-api/staking-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                stake\n                            \n                            \n                                    Async\n                                stakedTokens\n                            \n                            \n                                    Async\n                                stakingOptions\n                            \n                            \n                                    Async\n                                unStake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stakingClient: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/staking-api/staking-api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stakingClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stake\n                        \n                    \n                \n            \n            \n                \n                        \n                    stake(stakeDto: StakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stakeDto\n                                            \n                                                            StakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedTokens(accountAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakingOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise>\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unStake\n                        \n                    \n                \n            \n            \n                \n                        \n                    unStake(unstakeDto: UnstakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                unstakeDto\n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { networkService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { StakingOption, UserStakedTokens } from '@app/network-service/staking/interfaces'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\n\n@Injectable()\nexport class StakingAPIService {\n  constructor (\n    @Inject(networkService) private readonly stakingClient: ClientProxy\n  ) { }\n\n  async stakingOptions (): Promise> {\n    return callMSFunction(this.stakingClient, 'staking_options', {})\n  }\n\n  async stake (stakeDto: StakeDto): Promise {\n    return callMSFunction(this.stakingClient, 'stake', stakeDto)\n  }\n\n  async unStake (unstakeDto: UnstakeDto): Promise {\n    return callMSFunction(this.stakingClient, 'unstake', unstakeDto)\n  }\n\n  async stakedTokens (accountAddress: string): Promise {\n    return callMSFunction(this.stakingClient, 'staked_tokens', accountAddress)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StakingApiController.html":{"url":"controllers/StakingApiController.html","title":"controller - StakingApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StakingApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/staking-api/staking-api.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v0/staking\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                stake\n                            \n                            \n                                    \n                                stakedTokens\n                            \n                            \n                                    \n                                stakingOptions\n                            \n                            \n                                    \n                                unstake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stake\n                        \n                    \n                \n            \n            \n                \n                        \n                    stake(stakeDto: StakeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('stake')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stakeDto\n                                            \n                                                            StakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stakedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedTokens(accountAddress: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('staked_tokens/:accountAddress')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stakingOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('staking_options')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unstake\n                        \n                    \n                \n            \n            \n                \n                        \n                    unstake(unstakeDto: UnstakeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('unstake')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/staking-api/staking-api.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                unstakeDto\n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\nimport { StakingAPIService } from '@app/api-service/staking-api/staking-api.service'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport { StakeDto } from '@app/network-service/staking/dto/stake.dto'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@Controller('v0/staking')\nexport class StakingApiController {\n  constructor (\n    private readonly stakingAPIService: StakingAPIService\n  ) { }\n\n  @Get('staking_options')\n  stakingOptions () {\n    return this.stakingAPIService.stakingOptions()\n  }\n\n  @Post('stake')\n  stake (@Body() stakeDto: StakeDto) {\n    return this.stakingAPIService.stake(stakeDto)\n  }\n\n  @Post('unstake')\n  unstake (@Body() unstakeDto: UnstakeDto) {\n    return this.stakingAPIService.unStake(unstakeDto)\n  }\n\n  @Get('staked_tokens/:accountAddress')\n  stakedTokens (@Param('accountAddress') accountAddress: string) {\n    return this.stakingAPIService.stakedTokens(accountAddress)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StakingController.html":{"url":"controllers/StakingController.html","title":"controller - StakingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StakingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/staking.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stake\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                stake\n                            \n                            \n                                    \n                                stakedTokens\n                            \n                            \n                                    \n                                stakingOptions\n                            \n                            \n                                    \n                                unstake\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stake\n                        \n                    \n                \n            \n            \n                \n                        \n                    stake(stakeDto: StakeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('stake')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stakeDto\n                                            \n                                                            StakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stakedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedTokens(accountAddress: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('staked_tokens')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stakingOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingOptions()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('staking_options')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unstake\n                        \n                    \n                \n            \n            \n                \n                        \n                    unstake(unstakeDto: UnstakeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('unstake')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                unstakeDto\n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\nimport { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport { StakingService } from '@app/network-service/staking/staking.service'\n\n@Controller('stake')\nexport class StakingController {\n  constructor (private readonly stakingService: StakingService) { }\n\n  @MessagePattern('staking_options')\n  stakingOptions () {\n    return this.stakingService.stakingOptions()\n  }\n\n  @MessagePattern('stake')\n  stake (stakeDto: StakeDto) {\n    return this.stakingService.stake(stakeDto)\n  }\n\n  @MessagePattern('unstake')\n  unstake (unstakeDto: UnstakeDto) {\n    return this.stakingService.unStake(unstakeDto)\n  }\n\n  @MessagePattern('staked_tokens')\n  stakedTokens (accountAddress: string) {\n    return this.stakingService.stakedTokens(accountAddress)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StakingModule.html":{"url":"modules/StakingModule.html","title":"module - StakingModule","body":"\n                   \n\n\n\n\n    Modules\n    StakingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StakingModule\n\n\n\ncluster_StakingModule_exports\n\n\n\ncluster_StakingModule_providers\n\n\n\n\nStakingService \n\nStakingService \n\n\n\nStakingModule\n\nStakingModule\n\nStakingService  -->\n\nStakingModule->StakingService \n\n\n\n\n\nFuseLiquidStakingService\n\nFuseLiquidStakingService\n\nStakingModule -->\n\nFuseLiquidStakingService->StakingModule\n\n\n\n\n\nGraphService\n\nGraphService\n\nStakingModule -->\n\nGraphService->StakingModule\n\n\n\n\n\nStakingService\n\nStakingService\n\nStakingModule -->\n\nStakingService->StakingModule\n\n\n\n\n\nTradeService\n\nTradeService\n\nStakingModule -->\n\nTradeService->StakingModule\n\n\n\n\n\nVoltBarService\n\nVoltBarService\n\nStakingModule -->\n\nVoltBarService->StakingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/staking.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FuseLiquidStakingService\n                        \n                        \n                            GraphService\n                        \n                        \n                            StakingService\n                        \n                        \n                            TradeService\n                        \n                        \n                            VoltBarService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StakingController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StakingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { StakingController } from '@app/network-service/staking/staking.controller'\nimport { StakingService } from '@app/network-service/staking/staking.service'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport configuration from 'apps/charge-network-service/src/common/config/configuration'\nimport { EthersModule } from 'nestjs-ethers'\nimport VoltBarService from '@app/network-service/staking/staking-providers/volt-bar.service'\nimport GraphService from '@app/network-service/staking/graph.service'\nimport TradeService from '@app/common/services/trade.service'\nimport { HttpModule } from '@nestjs/axios'\nimport FuseLiquidStakingService from '@app/network-service/staking/staking-providers/fuse-liquid-staking.service'\n\n@Module({\n  imports: [\n    ConfigModule.forFeature(configuration),\n    HttpModule,\n    EthersModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      token: 'regular-node',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('rpcConfig')\n        const { rpc } = config\n        const { url, networkName, chainId } = rpc\n        return {\n          network: { name: networkName, chainId },\n          custom: url,\n          useDefaultProvider: false\n        }\n      }\n    })\n  ],\n  controllers: [StakingController],\n  providers: [\n    StakingService,\n    VoltBarService,\n    FuseLiquidStakingService,\n    GraphService,\n    TradeService\n  ],\n  exports: [StakingService]\n})\nexport class StakingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StakingOption.html":{"url":"interfaces/StakingOption.html","title":"interface - StakingOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StakingOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/interfaces/index.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Token\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            stakingApr\n                                        \n                                \n                                \n                                        \n                                            stakingProviderId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tvl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stakingApr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakingApr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakingProviderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakingProviderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\n\ninterface Token {\n    tokenAddress: string\n    tokenSymbol: string\n    tokenName: string\n    tokenLogoURI: string\n    unStakeTokenAddress: string\n}\n\nexport interface StakingOption extends Token {\n    stakingProviderId: string\n    stakingApr?: number\n    tvl?: number\n}\n\nexport interface StakedToken extends Token {\n    stakedAmount: number\n    stakedAmountUSD: number\n    earnedAmountUSD: number\n    stakingApr: number\n}\n\nexport interface UserStakedTokens {\n    totalStakedAmountUSD: string\n    totalEarnedAmountUSD: string\n    stakedTokens: Array\n}\n\nexport interface StakingProvider {\n    address: string\n    stake: (stakeDto: StakeDto) => string\n    unStake: (unStakeDto: UnstakeDto) => string\n    stakedToken: (accountAddress: string, stakingOption: StakingOption) => Promise\n    stakingApr: (stakingOption: StakingOption) => Promise\n    tvl: (stakingOption: StakingOption) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StakingProvider.html":{"url":"interfaces/StakingProvider.html","title":"interface - StakingProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StakingProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            stake\n                                        \n                                \n                                \n                                        \n                                            stakedToken\n                                        \n                                \n                                \n                                        \n                                            stakingApr\n                                        \n                                \n                                \n                                        \n                                            tvl\n                                        \n                                \n                                \n                                        \n                                            unStake\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stake\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stake:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakedToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakedToken:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stakingApr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakingApr:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tvl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tvl:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unStake\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unStake:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\n\ninterface Token {\n    tokenAddress: string\n    tokenSymbol: string\n    tokenName: string\n    tokenLogoURI: string\n    unStakeTokenAddress: string\n}\n\nexport interface StakingOption extends Token {\n    stakingProviderId: string\n    stakingApr?: number\n    tvl?: number\n}\n\nexport interface StakedToken extends Token {\n    stakedAmount: number\n    stakedAmountUSD: number\n    earnedAmountUSD: number\n    stakingApr: number\n}\n\nexport interface UserStakedTokens {\n    totalStakedAmountUSD: string\n    totalEarnedAmountUSD: string\n    stakedTokens: Array\n}\n\nexport interface StakingProvider {\n    address: string\n    stake: (stakeDto: StakeDto) => string\n    unStake: (unStakeDto: UnstakeDto) => string\n    stakedToken: (accountAddress: string, stakingOption: StakingOption) => Promise\n    stakingApr: (stakingOption: StakingOption) => Promise\n    tvl: (stakingOption: StakingOption) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StakingService.html":{"url":"injectables/StakingService.html","title":"injectable - StakingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StakingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/staking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getStakingOption\n                            \n                            \n                                    Private\n                                getStakingProvider\n                            \n                            \n                                    Async\n                                stake\n                            \n                            \n                                    Async\n                                stakedTokens\n                            \n                            \n                                    Async\n                                stakingOptions\n                            \n                            \n                                    Async\n                                unStake\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    stakingOptionsConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(voltBarService: VoltBarService, fuseLiquidStakingService: FuseLiquidStakingService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-network-service/src/staking/staking.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        voltBarService\n                                                  \n                                                        \n                                                                        VoltBarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fuseLiquidStakingService\n                                                  \n                                                        \n                                                                        FuseLiquidStakingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStakingOption\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStakingOption(tokenAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getStakingProvider\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStakingProvider(stakingOption: StakingOption)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stakingOption\n                                            \n                                                            StakingOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StakingProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stake\n                        \n                    \n                \n            \n            \n                \n                        \n                    stake(stakeDto: StakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stakeDto\n                                            \n                                                            StakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakedTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedTokens(accountAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakingOptions\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unStake\n                        \n                    \n                \n            \n            \n                \n                        \n                    unStake(unStakeDto: UnstakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                unStakeDto\n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(StakingService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/staking.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        stakingOptionsConfig\n                    \n                \n\n                \n                    \n                        getstakingOptionsConfig()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { StakingOption, StakingProvider } from '@app/network-service/staking/interfaces'\nimport VoltBarService from '@app/network-service/staking/staking-providers/volt-bar.service'\nimport { sumBy } from 'lodash'\nimport { fuseLiquidStakingId, voltBarId } from '@app/network-service/common/constants'\nimport { ConfigService } from '@nestjs/config'\nimport FuseLiquidStakingService from '@app/network-service/staking/staking-providers/fuse-liquid-staking.service'\n\n@Injectable()\nexport class StakingService {\n  private readonly logger = new Logger(StakingService.name)\n  constructor (\n    private readonly voltBarService: VoltBarService,\n    private readonly fuseLiquidStakingService: FuseLiquidStakingService,\n    private readonly configService: ConfigService\n  ) { }\n\n  get stakingOptionsConfig () {\n    return this.configService.get('stakingOptions') as Array\n  }\n\n  async stakingOptions () {\n    const stakingOptionsData: Array = []\n\n    for (const stakingOption of this.stakingOptionsConfig) {\n      const stakingProvider = this.getStakingProvider(stakingOption)\n      const stakingApr = await stakingProvider.stakingApr(stakingOption)\n      const tvl = await stakingProvider.tvl(stakingOption)\n\n      stakingOptionsData.push({\n        ...stakingOption,\n        stakingApr,\n        tvl\n      })\n    }\n\n    return stakingOptionsData\n  }\n\n  async stake (stakeDto: StakeDto) {\n    const stakingOption = this.getStakingOption(stakeDto.tokenAddress)\n    const stakingProvider = this.getStakingProvider(stakingOption)\n\n    return {\n      contractAddress: stakingProvider.address,\n      encodedABI: stakingProvider.stake(stakeDto)\n    }\n  }\n\n  async unStake (unStakeDto: UnstakeDto) {\n    const stakingOption = this.getStakingOption(unStakeDto.tokenAddress)\n    const stakingProvider = this.getStakingProvider(stakingOption)\n\n    return {\n      contractAddress: stakingProvider.address,\n      encodedABI: stakingProvider.unStake(unStakeDto)\n    }\n  }\n\n  async stakedTokens (accountAddress: string) {\n    const stakedTokens = []\n\n    try {\n      for (const stakingOption of this.stakingOptionsConfig) {\n        const stakingProvider = this.getStakingProvider(stakingOption)\n        const stakedToken = await stakingProvider.stakedToken(accountAddress, stakingOption)\n\n        if (stakedToken.stakedAmount > 0) {\n          stakedTokens.push(stakedToken)\n        }\n      }\n\n      return {\n        totalStakedAmountUSD: sumBy(stakedTokens, 'stakedAmountUSD'),\n        totalEarnedAmountUSD: sumBy(stakedTokens, 'earnedAmountUSD'),\n        stakedTokens\n      }\n    } catch (error) {\n      this.logger.error('Error fetching staked tokens', error)\n    }\n  }\n\n  private getStakingOption (tokenAddress: string) {\n    return this.stakingOptionsConfig.find(stakingOption => stakingOption.tokenAddress === tokenAddress)\n  }\n\n  private getStakingProvider (stakingOption: StakingOption): StakingProvider {\n    if (stakingOption.stakingProviderId === voltBarId) {\n      return this.voltBarService\n    } else if (stakingOption.stakingProviderId === fuseLiquidStakingId) {\n      return this.fuseLiquidStakingService\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StudioLegacyJwtModule.html":{"url":"modules/StudioLegacyJwtModule.html","title":"module - StudioLegacyJwtModule","body":"\n                   \n\n\n\n\n    Modules\n    StudioLegacyJwtModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StudioLegacyJwtModule\n\n\n\ncluster_StudioLegacyJwtModule_providers\n\n\n\ncluster_StudioLegacyJwtModule_exports\n\n\n\n\nStudioLegacyJwtService \n\nStudioLegacyJwtService \n\n\n\nStudioLegacyJwtModule\n\nStudioLegacyJwtModule\n\nStudioLegacyJwtService  -->\n\nStudioLegacyJwtModule->StudioLegacyJwtService \n\n\n\n\n\nStudioLegacyJwtService\n\nStudioLegacyJwtService\n\nStudioLegacyJwtModule -->\n\nStudioLegacyJwtService->StudioLegacyJwtModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-api-service/src/studio-legacy-jwt/studio-legacy-jwt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StudioLegacyJwtService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StudioLegacyJwtService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { StudioLegacyJwtService } from '@app/api-service/studio-legacy-jwt/studio-legacy-jwt.service'\n\n@Module({\n  imports: [\n    HttpModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${configService.get('FUSE_STUDIO_ADMIN_JWT')}`\n        }\n      }),\n      inject: [ConfigService]\n    })\n  ],\n  providers: [StudioLegacyJwtService],\n  exports: [StudioLegacyJwtService]\n})\nexport class StudioLegacyJwtModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudioLegacyJwtService.html":{"url":"injectables/StudioLegacyJwtService.html","title":"injectable - StudioLegacyJwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StudioLegacyJwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/studio-legacy-jwt/studio-legacy-jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLegacyJwt\n                            \n                            \n                                    Async\n                                decryptEncryptedJWT\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-api-service/src/studio-legacy-jwt/studio-legacy-jwt.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLegacyJwt\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLegacyJwt(appName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/studio-legacy-jwt/studio-legacy-jwt.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                appName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'chargeApp'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decryptEncryptedJWT\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptEncryptedJWT(encryptedJwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-api-service/src/studio-legacy-jwt/studio-legacy-jwt.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                encryptedJwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { HttpException, Injectable } from '@nestjs/common'\nimport { catchError, lastValueFrom, map } from 'rxjs'\nimport * as CryptoJS from 'crypto-js'\n\n@Injectable()\nexport class StudioLegacyJwtService {\n  constructor (private httpService: HttpService) { }\n\n  async createLegacyJwt (\n    appName = 'chargeApp'\n  ): Promise> {\n    const requestBody = {\n      role: 'communityAdmin',\n      bridgeType: 'home',\n      description: appName,\n      appName\n    }\n\n    const responseData = await lastValueFrom(\n      this.httpService\n        .post(\n          `${process.env.LEGACY_FUSE_ADMIN_API_URL}/api/v2/accounts/`,\n          requestBody\n        )\n        .pipe(\n          map((response) => {\n            return response.data\n          })\n        )\n        .pipe(\n          catchError(e => {\n            throw new HttpException(\n              `${e?.response?.statusText}: ${e?.response?.data?.error}`,\n              e?.response?.status\n            )\n          })\n        )\n    )\n\n    const legacyJwt = responseData?.data?.jwt\n    const legacyBackendAccount = responseData?.data?.account?.address\n\n    const encryptedLegacyJwt = CryptoJS.AES.encrypt(legacyJwt, process.env.LEGACY_JWT_SECRET).toString()\n\n    return { encryptedLegacyJwt, legacyBackendAccount }\n  }\n\n  // To be used internally when requests will be forwarded to the Legacy Admin API\n  async decryptEncryptedJWT (encryptedJwt: string): Promise {\n    const decrypted = CryptoJS.AES.decrypt(encryptedJwt, process.env.LEGACY_JWT_SECRET)\n\n    return decrypted.toString(CryptoJS.enc.Utf8)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitQuestionnaireDto.html":{"url":"classes/SubmitQuestionnaireDto.html","title":"class - SubmitQuestionnaireDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitQuestionnaireDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/dto/submit-questionnaire.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                questionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        questionnaire\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsNotEmptyObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-accounts-service/src/users/dto/submit-questionnaire.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmptyObject, IsObject } from 'class-validator'\n\nexport class SubmitQuestionnaireDto {\n  @IsObject()\n  @IsNotEmptyObject()\n    questionnaire: object\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwapTokens.html":{"url":"classes/SwapTokens.html","title":"class - SwapTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwapTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/swap.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                descGenerator\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:9\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_20_TYPE, NATIVE_TOKEN_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\nimport { first, last } from 'lodash'\nimport { formatUnits } from 'nestjs-ethers'\n\nexport default class SwapTokens extends WalletAction {\n  descGenerator (data: any) {\n    const sentValue = formatUnits(data.sentTokenValueInWei, data.sentTokenDecimals)\n    const recValue = formatUnits(data.recTokenValueInWei, data.recTokenDecimals)\n    return `${sentValue} ${data.sentToken} was swapped to ${recValue} ${data.recToken}`\n  }\n\n  async execute (parsedUserOp: any) {\n    const { name: walletFunctionName } = parsedUserOp.walletFunction\n    let call\n    if (walletFunctionName === 'executeBatch') {\n      call = last(parsedUserOp.targetFunctions)\n    } else if (walletFunctionName === 'execute') {\n      call = first(parsedUserOp.targetFunctions)\n    }\n\n    const { name, callData } = call\n\n    if (name === 'swapTokensForExactTokens') {\n      const [amountOut, amountInMax, path, to] = callData\n      const tokenOut = first(path)\n      const tokenIn = last(path)\n      const sentTokenData = await this.tokenService.fetchTokenDetails(tokenOut as string)\n      const receivedTokenData = await this.tokenService.fetchTokenDetails(tokenIn as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...sentTokenData,\n        to,\n        value: amountInMax.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...receivedTokenData,\n        value: amountOut.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenData.symbol,\n          sentTokenDecimals: sentTokenData.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenData.symbol,\n          recTokenDecimals: receivedTokenData.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'swapExactTokensForTokens') {\n      const [amountIn, amountOutMin, path, to] = callData\n      const tokenOut = first(path)\n      const tokenIn = last(path)\n      const sentTokenData = await this.tokenService.fetchTokenDetails(tokenOut as string)\n      const receivedTokenData = await this.tokenService.fetchTokenDetails(tokenIn as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...sentTokenData,\n        to,\n        value: amountIn.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...receivedTokenData,\n        value: amountOutMin.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenData.symbol,\n          sentTokenDecimals: sentTokenData.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenData.symbol,\n          recTokenDecimals: receivedTokenData.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'swapExactETHForTokens') {\n      const { value } = call\n      const [amountOutMin, path, to] = callData\n      // const tokenOut = first(path)\n      const tokenIn = last(path)\n      // const sentTokenData = await fetchTokenDetails(tokenOut)\n      const receivedTokenData = await this.tokenService.fetchTokenDetails(tokenIn as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        to,\n        value: value.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...receivedTokenData,\n        value: amountOutMin.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenDetails.symbol,\n          sentTokenDecimals: sentTokenDetails.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenData.symbol,\n          recTokenDecimals: receivedTokenData.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'swapTokensForExactETH') {\n      const [amountOut, amountInMax, path, to] = callData\n      const tokenOut = first(path)\n      const sentTokenData = await this.tokenService.fetchTokenDetails(tokenOut as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...sentTokenData,\n        to,\n        value: amountInMax.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        value: amountOut.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenDetails.symbol,\n          sentTokenDecimals: sentTokenDetails.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenDetails.symbol,\n          recTokenDecimals: receivedTokenDetails.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'swapExactTokensForETH') {\n      const [amountIn, amountOutMin, path, to] = callData\n      const tokenOut = first(path)\n      const sentTokenData = await this.tokenService.fetchTokenDetails(tokenOut as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...sentTokenData,\n        to,\n        value: amountIn.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        value: amountOutMin.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenDetails.symbol,\n          sentTokenDecimals: sentTokenDetails.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenDetails.symbol,\n          recTokenDecimals: receivedTokenDetails.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'swapETHForExactTokens') {\n      const { value } = call\n      const [amountOut, path, to] = callData\n      const tokenOut = first(path)\n      const receiveTokenData = await this.tokenService.fetchTokenDetails(tokenOut as string)\n      const sentTokenDetails: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...receiveTokenData,\n        to,\n        value: value.toString()\n      }\n\n      const receivedTokenDetails: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        value: amountOut.toString(),\n        to: parsedUserOp.sender\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenDetails],\n        received: [receivedTokenDetails],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenDetails.symbol,\n          sentTokenDecimals: sentTokenDetails.decimals,\n          sentTokenValueInWei: sentTokenDetails.value,\n          recToken: receivedTokenDetails.symbol,\n          recTokenDecimals: receivedTokenDetails.decimals,\n          recTokenValueInWei: receivedTokenDetails.value\n        })\n      }\n    } else if (name === 'withdraw') {\n      const { targetAddress } = call\n      const [value] = callData\n      const tokenData = await this.tokenService.fetchTokenDetails(targetAddress as string)\n      const sentTokenData: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...tokenData,\n        value: value.toString(),\n        to: parsedUserOp.sender\n      }\n\n      const receivedTokenData: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        to: parsedUserOp.sender,\n        value\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenData],\n        received: [receivedTokenData],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenData.symbol,\n          sentTokenDecimals: sentTokenData.decimals,\n          sentTokenValueInWei: sentTokenData.value,\n          recToken: receivedTokenData.symbol,\n          recTokenDecimals: receivedTokenData.decimals,\n          recTokenValueInWei: receivedTokenData.value\n        })\n      }\n    } else if (name === 'deposit') {\n      const { targetAddress, value } = call\n      const tokenData = await this.tokenService.fetchTokenDetails(targetAddress)\n      const sentTokenData: ERC20Transfer = {\n        type: NATIVE_TOKEN_TYPE,\n        ...NATIVE_FUSE_TOKEN,\n        value: value.toString(),\n        to: parsedUserOp.sender\n      }\n\n      const receivedTokenData: ERC20Transfer = {\n        type: ERC_20_TYPE,\n        ...tokenData,\n        to: parsedUserOp.sender,\n        value\n      }\n\n      return {\n        name: 'swapTokens',\n        walletAddress: parsedUserOp.sender,\n        status: 'pending',\n        sent: [sentTokenData],\n        received: [receivedTokenData],\n        userOpHash: parsedUserOp.userOpHash,\n        txHash: '',\n        blockNumber: 0,\n        description: this.generateDescription({\n          action: 'Swapped',\n          sentToken: sentTokenData.symbol,\n          sentTokenDecimals: sentTokenData.decimals,\n          sentTokenValueInWei: sentTokenData.value,\n          recToken: receivedTokenData.symbol,\n          recTokenDecimals: receivedTokenData.decimals,\n          recTokenValueInWei: receivedTokenData.value\n        })\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokenAddress\n                                        \n                                \n                                \n                                        \n                                            tokenLogoURI\n                                        \n                                \n                                \n                                        \n                                            tokenName\n                                        \n                                \n                                \n                                        \n                                            tokenSymbol\n                                        \n                                \n                                \n                                        \n                                            unStakeTokenAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenLogoURI\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenLogoURI:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unStakeTokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unStakeTokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\n\ninterface Token {\n    tokenAddress: string\n    tokenSymbol: string\n    tokenName: string\n    tokenLogoURI: string\n    unStakeTokenAddress: string\n}\n\nexport interface StakingOption extends Token {\n    stakingProviderId: string\n    stakingApr?: number\n    tvl?: number\n}\n\nexport interface StakedToken extends Token {\n    stakedAmount: number\n    stakedAmountUSD: number\n    earnedAmountUSD: number\n    stakingApr: number\n}\n\nexport interface UserStakedTokens {\n    totalStakedAmountUSD: string\n    totalEarnedAmountUSD: string\n    stakedTokens: Array\n}\n\nexport interface StakingProvider {\n    address: string\n    stake: (stakeDto: StakeDto) => string\n    unStake: (unStakeDto: UnstakeDto) => string\n    stakedToken: (accountAddress: string, stakingOption: StakingOption) => Promise\n    stakingApr: (stakingOption: StakingOption) => Promise\n    tvl: (stakingOption: StakingOption) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token-1.html":{"url":"interfaces/Token-1.html","title":"interface - Token-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/interfaces/token-interfaces.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            decimals\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimals:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface ERC20Transfer {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n    type: string;\n    to?: string;\n    from?: string\n    value?: string;\n}\n\ninterface ERC721Transfer {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n    from?: string;\n    to: string;\n    type: string;\n    tokenId: number;\n}\n\ninterface Token {\n    name: string;\n    symbol: string;\n    address: string;\n    decimals: number;\n}\n\nexport { ERC20Transfer, ERC721Transfer, Token }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenEventData.html":{"url":"interfaces/TokenEventData.html","title":"interface - TokenEventData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenEventData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/interfaces/event-data.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EventData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockHash\n                                        \n                                \n                                \n                                        \n                                            blockNumber\n                                        \n                                \n                                \n                                        \n                                            isInternalTransaction\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            tokenAddress\n                                        \n                                \n                                \n                                        \n                                            tokenDecimals\n                                        \n                                \n                                \n                                        \n                                            tokenId\n                                        \n                                \n                                \n                                        \n                                            tokenName\n                                        \n                                \n                                \n                                        \n                                            tokenSymbol\n                                        \n                                \n                                \n                                        \n                                            tokenType\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            valueEth\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isInternalTransaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isInternalTransaction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenDecimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenDecimals:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenId:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueEth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueEth:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventData extends Object {\n  from: string,\n  txHash: string,\n  blockNumber: number,\n  blockHash: string,\n  gasPrice: string,\n  gasUsed: string,\n  gasFee: string,\n  gasLimit: string,\n  txnValue: string,\n}\nexport interface TokenEventData extends EventData {\n  to: string,\n  txHash: string,\n  tokenAddress: string,\n  blockNumber: number,\n  blockHash: string,\n  tokenType: string,\n  tokenName: string,\n  tokenSymbol: string,\n  value: string | null,\n  tokenDecimals: number | null,\n  tokenId: number | null,\n  valueEth: string | null,\n  isInternalTransaction: boolean\n}\nexport interface UserOpEventData extends EventData {\n  userOpHash: string;\n  nonce: string;\n  success: boolean;\n  actualGasCost: string;\n  actualGasUsed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenInfo.html":{"url":"interfaces/TokenInfo.html","title":"interface - TokenInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/interfaces/token-info-cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decimals\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            symbol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decimals:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        symbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        symbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenInfo {\n  name: string;\n  decimals: string;\n  symbol: string;\n}\n\nexport interface TokenInfoCache {\n  [tokenAddress: string]: TokenInfo\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenInfoCache.html":{"url":"interfaces/TokenInfoCache.html","title":"interface - TokenInfoCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenInfoCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/interfaces/token-info-cache.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tokenAddress: string]:        TokenInfo\n\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/events-scanner/interfaces/token-info-cache.ts:7\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface TokenInfo {\n  name: string;\n  decimals: string;\n  symbol: string;\n}\n\nexport interface TokenInfoCache {\n  [tokenAddress: string]: TokenInfo\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenReceive.html":{"url":"classes/TokenReceive.html","title":"class - TokenReceive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenReceive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                constructResponse\n                            \n                            \n                                constructTokenTransferData\n                            \n                            \n                                executeReceiveAction\n                            \n                            \n                                    Private\n                                getToken\n                            \n                            \n                                nftDescGenerator\n                            \n                            \n                                descGenerator\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        constructResponse\n                        \n                    \n                \n            \n            \n                \nconstructResponse(fromWalletAddress: string, txHash: string, tokenTransferData: ERC20Transfer, blockNumber: number, tokenId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromWalletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenTransferData\n                                            \n                                                            ERC20Transfer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                blockNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { walletAddress: string; name: string; status: string; sent: {}; txHash: string; blockNumber: number; description: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        constructTokenTransferData\n                        \n                    \n                \n            \n            \n                \nconstructTokenTransferData(targetAddress: string, value: string, tokenType: string, undefined, tokenId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        executeReceiveAction\n                        \n                    \n                \n            \n            \n                \nexecuteReceiveAction(fromWalletAddress: string, toWalletAddress: string, txHash: string, value: string, tokenType: string, undefined, blockNumber: number, tokenId?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromWalletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toWalletAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                txHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                blockNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                tokenId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { walletAddress: string; name: string; status: string; sent: {}; txHash: string; blockNumber: number; description: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken(tokenType: string, name: string, symbol: string, address: string, decimals: number)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                symbol\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decimals\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftDescGenerator\n                        \n                    \n                \n            \n            \n                \nnftDescGenerator(nftInfo: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/token-receive.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nftInfo\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp: Record)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:11\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer, ERC721Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport { ERC_721_TYPE, NATIVE_TOKEN_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\n\nexport class TokenReceive extends WalletAction {\n  constructTokenTransferData (\n    targetAddress: string,\n    value: string,\n    tokenType: string,\n    { name, symbol, address, decimals },\n    tokenId?: number\n  ) {\n    const token = this.getToken(tokenType, name, symbol, address, decimals)\n\n    if (tokenType === ERC_721_TYPE) {\n      return {\n        ...token,\n        type: ERC_721_TYPE,\n        value,\n        to: targetAddress,\n        tokenId\n      } as ERC721Transfer\n    }\n\n    return {\n      ...token,\n      type: tokenType === 'FUSE' ? NATIVE_TOKEN_TYPE : tokenType,\n      value,\n      from: targetAddress,\n      tokenId\n    } as ERC20Transfer\n  }\n\n  nftDescGenerator (nftInfo: { symbol: string, tokenId: number, from: string }) {\n    return `${nftInfo.symbol} #${nftInfo.tokenId} received from ${nftInfo.from}`\n  }\n\n  private getToken (\n    tokenType: string,\n    name: string,\n    symbol: string,\n    address: string,\n    decimals: number\n  ) {\n    if (tokenType === 'FUSE') return NATIVE_FUSE_TOKEN\n    return { name, symbol, address, decimals }\n  }\n\n  constructResponse (\n    fromWalletAddress: string,\n    txHash: string,\n    tokenTransferData: ERC20Transfer,\n    blockNumber: number,\n    tokenId?: number\n  ) {\n    const symbol = tokenTransferData.symbol\n    const decimals = tokenTransferData.decimals\n\n    let description: string\n\n    if (tokenTransferData.type === ERC_721_TYPE) {\n      description = this.nftDescGenerator({\n        symbol, tokenId, from: fromWalletAddress\n      })\n    } else {\n      description = this.generateDescription({\n        action: 'Received',\n        symbol,\n        valueInWei: tokenTransferData.value,\n        decimals\n      })\n    }\n\n    const name =\n      tokenTransferData.type === ERC_721_TYPE ? 'nftReceive' : 'tokenReceive'\n\n    return {\n      walletAddress: fromWalletAddress,\n      name,\n      status: 'success',\n      sent: [tokenTransferData],\n      txHash,\n      blockNumber,\n      description\n    }\n  }\n\n  executeReceiveAction (\n    fromWalletAddress: string,\n    toWalletAddress: string,\n    txHash: string,\n    value: string,\n    tokenType: string,\n    { name, symbol, address, decimals },\n    blockNumber: number,\n    tokenId?: number\n  ) {\n    const tokenTransferData = this.constructTokenTransferData(\n      fromWalletAddress,\n      value,\n      tokenType,\n      { name, symbol, address, decimals }\n    )\n\n    return this.constructResponse(\n      toWalletAddress, txHash, tokenTransferData, blockNumber, tokenId\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/common/services/token.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchTokenDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(provider: JsonRpcProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/common/services/token.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchTokenDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchTokenDetails(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/token.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\nimport { Token } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport { Injectable } from '@nestjs/common'\nimport {\n  Contract,\n  InjectEthersProvider,\n  JsonRpcProvider\n} from 'nestjs-ethers'\nimport BasicTokenAbi from '@app/smart-wallets-service/common/config/abi/BasicToken.json'\n\n@Injectable()\nexport class TokenService {\n  constructor (\n    @InjectEthersProvider('regular-node')\n    private readonly provider: JsonRpcProvider\n  ) { }\n\n  async fetchTokenDetails (address: string): Promise {\n    if (address === NATIVE_FUSE_TOKEN.address) {\n      return {\n        name: NATIVE_FUSE_TOKEN.name,\n        address: NATIVE_FUSE_TOKEN.address,\n        symbol: NATIVE_FUSE_TOKEN.symbol,\n        decimals: 18\n      }\n    }\n    const tokenContractInstance = new Contract(address, BasicTokenAbi, this.provider)\n    try {\n      const [name, symbol, decimals] = await Promise.all([\n        tokenContractInstance.name(),\n        tokenContractInstance.symbol(),\n        tokenContractInstance.decimals()\n      ])\n      const fetchedTokedData: Token = { name, symbol, decimals: parseInt(decimals), address }\n      return fetchedTokedData\n    } catch (error) {\n      const decimals = 0\n      const [name, symbol] = await Promise.all([\n        tokenContractInstance.name(),\n        tokenContractInstance.symbol()\n      ])\n      const fetchedTokedData: Token = { name, symbol, decimals, address }\n      return fetchedTokedData\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenTransferWebhookDto.html":{"url":"classes/TokenTransferWebhookDto.html","title":"class - TokenTransferWebhookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenTransferWebhookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockNumber\n                            \n                            \n                                direction\n                            \n                            \n                                from\n                            \n                            \n                                to\n                            \n                            \n                                    Optional\n                                tokenAddress\n                            \n                            \n                                    Optional\n                                tokenDecimals\n                            \n                            \n                                    Optional\n                                tokenId\n                            \n                            \n                                    Optional\n                                tokenName\n                            \n                            \n                                    Optional\n                                tokenSymbol\n                            \n                            \n                                tokenType\n                            \n                            \n                                txHash\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tokenDecimals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tokenId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tokenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tokenSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        txHash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/smart-wallets/dto/token-transfer-webhook.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TokenTransferWebhookDto {\n  to: string\n\n  direction: string\n\n  from: string\n\n  txHash: string\n\n  value?: string\n\n  tokenId?: number\n\n  tokenType: string\n\n  tokenAddress?: string\n\n  tokenName?: string\n\n  tokenSymbol?: string\n\n  tokenDecimals?: string\n\n  blockNumber: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TradeApiController.html":{"url":"controllers/TradeApiController.html","title":"controller - TradeApiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TradeApiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api-v2.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api-v2.controller.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-api-service/src/legacy-api/legacy-trade-api/legacy-trade-api-v2.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, UseGuards, UseInterceptors } from '@nestjs/common'\nimport { LegacyApiInterceptor } from '@app/api-service/legacy-api/legacy-api.interceptor'\nimport { IsValidPublicApiKeyGuard } from '@app/api-service/api-keys/guards/is-valid-public-api-key.guard'\n\n@UseGuards(IsValidPublicApiKeyGuard)\n@UseInterceptors(LegacyApiInterceptor)\n@Controller({ path: 'v1/trade/*' })\nexport class TradeApiController {\n  @Get()\n  get () {\n  }\n\n  @Post()\n  post () {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TradeService.html":{"url":"injectables/TradeService.html","title":"injectable - TradeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TradeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/trade.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTokenPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/trade.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTokenPrice\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokenPrice(tokenAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/trade.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { lastValueFrom, map } from 'rxjs'\n\n@Injectable()\nexport default class TradeService {\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService\n  ) { }\n\n  async getTokenPrice (tokenAddress: string) {\n    const observable = this.httpService\n      .get(`${this.configService.get('tradeApiBaseUrl')}/api/v1/price/${tokenAddress}`)\n      .pipe(map(res => res.data.data.price))\n    return await lastValueFrom(observable)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionsScannerModule.html":{"url":"modules/TransactionsScannerModule.html","title":"module - TransactionsScannerModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionsScannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransactionsScannerModule\n\n\n\ncluster_TransactionsScannerModule_imports\n\n\n\ncluster_TransactionsScannerModule_providers\n\n\n\n\nBroadcasterModule\n\nBroadcasterModule\n\n\n\nTransactionsScannerModule\n\nTransactionsScannerModule\n\nTransactionsScannerModule -->\n\nBroadcasterModule->TransactionsScannerModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nTransactionsScannerModule -->\n\nDatabaseModule->TransactionsScannerModule\n\n\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nTransactionsScannerModule -->\n\nWebhooksModule->TransactionsScannerModule\n\n\n\n\n\nGasService\n\nGasService\n\nTransactionsScannerModule -->\n\nGasService->TransactionsScannerModule\n\n\n\n\n\nTransactionsScannerService\n\nTransactionsScannerService\n\nTransactionsScannerModule -->\n\nTransactionsScannerService->TransactionsScannerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GasService\n                        \n                        \n                            TransactionsScannerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BroadcasterModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            WebhooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/common'\nimport { BroadcasterModule } from '@app/notifications-service/broadcaster/broadcaster.module'\nimport rpcConfig from '@app/notifications-service/common/config/rpc-config'\nimport { transactionsScannerProviders } from '@app/notifications-service/transactions-scanner/transactions-scanner.providers'\nimport { TransactionsScannerService } from '@app/notifications-service/transactions-scanner/transactions-scanner.service'\nimport { Logger, Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { EthersModule } from 'nestjs-ethers'\nimport { webhookEventProviders } from '@app/notifications-service/common/providers/webhook-event.provider'\nimport { WebhooksModule } from '@app/notifications-service/webhooks/webhooks.module'\nimport { GasService } from '@app/common/services/gas.service'\n\n@Module({\n  imports: [\n    EthersModule.forRootAsync({\n      imports: [ConfigModule.forFeature(rpcConfig)],\n      inject: [ConfigService],\n      token: 'full-archive-node',\n      useFactory: async (configService: ConfigService) => {\n        const config = configService.get('rpcConfig')\n        return {\n          network: { name: config.rpc.networkName, chainId: config.rpc.chainId },\n          custom: config.fullArchiveRpc.url,\n          useDefaultProvider: false\n        }\n      }\n    }),\n    WebhooksModule,\n    DatabaseModule,\n    ConfigModule.forFeature(rpcConfig),\n    BroadcasterModule\n  ],\n  providers: [\n    GasService,\n    TransactionsScannerService,\n    ...transactionsScannerProviders,\n    ...webhookEventProviders,\n    Logger\n  ]\n})\nexport class TransactionsScannerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransactionsScannerService.html":{"url":"injectables/TransactionsScannerService.html","title":"injectable - TransactionsScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransactionsScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ScannerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                processBlocks\n                            \n                            \n                                    \n                                    Async\n                                processBlockTraces\n                            \n                            \n                                    \n                                    Async\n                                processTrace\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, scannerStatusService: ScannerStatusService, rpcProvider: JsonRpcProvider, webhooksService: WebhooksService, gasService: GasService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scannerStatusService\n                                                  \n                                                        \n                                                                        ScannerStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpcProvider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhooksService\n                                                  \n                                                        \n                                                                        WebhooksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gasService\n                                                  \n                                                        \n                                                                        GasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlocks(fromBlock: number, toBlock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('TransactionsScanner::ProcessBlocks')\n                \n            \n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processBlockTraces\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlockTraces(blockNumber: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('TransactionsScanner::ProcessTraces')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blockNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processTrace\n                        \n                    \n                \n            \n            \n                \n                        \n                    processTrace(trace: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('TransactionsScanner::ProcessTrace')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trace\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'transactions'\n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/transactions-scanner/transactions-scanner.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { NATIVE_FUSE_ADDRESS } from '@app/notifications-service/common/constants/addresses'\nimport { TokenType } from '@app/notifications-service/common/constants/token-types'\nimport { logPerformance } from '@app/notifications-service/common/decorators/log-performance.decorator'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { isEmpty } from 'lodash'\nimport { BigNumber, InjectEthersProvider, JsonRpcProvider, formatEther, getAddress } from 'nestjs-ethers'\nimport { TokenEventData } from '@app/notifications-service/common/interfaces/event-data.interface'\nimport { WebhooksService } from '@app/notifications-service/webhooks/webhooks.service'\nimport { ScannerService } from '@app/notifications-service/common/scanner-service'\nimport { transactionsScannerStatusServiceString } from './transactions-scanner.constants'\nimport { ScannerStatusService } from '@app/notifications-service/common/scanner-status.service'\nimport { GasService } from '@app/common/services/gas.service'\n\n@Injectable()\nexport class TransactionsScannerService extends ScannerService {\n  private readonly filter = 'transactions'\n\n  constructor (\n    configService: ConfigService,\n    @Inject(transactionsScannerStatusServiceString)\n    scannerStatusService: ScannerStatusService,\n    @InjectEthersProvider('full-archive-node')\n    readonly rpcProvider: JsonRpcProvider,\n    private webhooksService: WebhooksService,\n    private gasService: GasService\n  ) {\n    super(configService, scannerStatusService, rpcProvider, new Logger(TransactionsScannerService.name))\n  }\n\n  @logPerformance('TransactionsScanner::ProcessBlocks')\n  async processBlocks (fromBlock: number, toBlock: number) {\n    if (fromBlock > toBlock) return\n\n    for (let i = fromBlock; i  blockTrace.action.callType === 'call' &&\n          BigNumber.from(blockTrace.action.value).gt(0))\n\n      for (const trace of filteredBlockTraces) {\n        try {\n          await this.processTrace(trace)\n        } catch (error) {\n          this.logger.error('Failed to process transaction:')\n          this.logger.error({ trace })\n          this.logger.error(error)\n        }\n      }\n    }\n  }\n\n  @logPerformance('TransactionsScanner::ProcessTrace')\n  async processTrace (trace: any) {\n    const gasValues = await this.gasService.fetchTransactionGasCosts(\n      trace.transactionHash,\n      this.rpcProvider\n    )\n\n    const eventData: TokenEventData = {\n      to: getAddress(trace.action.to),\n      from: getAddress(trace.action.from),\n      value: BigNumber.from(trace.action.value).toString(),\n      valueEth: formatEther(BigNumber.from(trace.action.value)),\n      txHash: trace.transactionHash,\n      blockNumber: trace.blockNumber,\n      blockHash: trace.blockHash,\n      tokenType: TokenType.FUSE,\n      tokenSymbol: 'FUSE',\n      tokenAddress: NATIVE_FUSE_ADDRESS,\n      isInternalTransaction: false,\n      tokenName: 'FUSE',\n      tokenDecimals: 18,\n      tokenId: null,\n      ...gasValues\n    }\n\n    if (trace.subtraces > 0 || trace.traceAddress.length > 0) {\n      eventData.isInternalTransaction = true\n    }\n\n    this.webhooksService.processWebhookTokenEvents(eventData).catch((error) => {\n      this.logger.error(`Failed to process webhook events for event data :${eventData} - Error: ${error}`)\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferToken.html":{"url":"classes/TransferToken.html","title":"class - TransferToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            scripts/smartWalletsTransferTokenTesting.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _eth\n                            \n                            \n                                    Private\n                                _privateKey\n                            \n                            \n                                    Private\n                                _to\n                            \n                            \n                                accountAbstraction\n                            \n                            \n                                legacy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(privateKey: string, to: string, eth: string)\n                    \n                \n                        \n                            \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        privateKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        to\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eth\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _eth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _privateKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        accountAbstraction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        legacy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in scripts/smartWalletsTransferTokenTesting.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FuseSDK } from '@fuseio/fusebox-web-sdk'\nimport { ethers } from 'ethers'\nimport { parseEther } from 'nestjs-ethers'\nimport { FuseLegacySDK } from '@scripts/fuseLegacySDK'\n\nexport class TransferToken {\n  private _privateKey: string\n  private _to: string\n  private _eth: string\n\n  constructor (privateKey: string, to: string, eth: string = '0.001') {\n    this._privateKey = privateKey\n    this._to = to\n    this._eth = eth\n  }\n\n  accountAbstraction = async () => {\n    try {\n      const credentials = new ethers.Wallet(this._privateKey)\n      const publicApiKey = process.env.PUBLIC_API_KEY\n      const fuseSDK = await FuseSDK.init(publicApiKey, credentials, { withPaymaster: true })\n\n      const value = parseEther(this._eth)\n      const data = Uint8Array.from([])\n      const res = await fuseSDK.callContract(this._to, value, data)\n      await res?.wait()\n\n      return res\n    } catch (error) {\n      throw new Error(error.message)\n    }\n  }\n\n  legacy = async () => {\n    try {\n      const credentials = new ethers.Wallet(this._privateKey)\n      const publicApiKey = process.env.PUBLIC_API_KEY\n      const fuseLegacySDK = new FuseLegacySDK(publicApiKey)\n      await fuseLegacySDK.init(credentials)\n\n      const value = parseEther(this._eth)\n      const res = await fuseLegacySDK.relay(this._to, value)\n\n      return await res.wait()\n    } catch (error) {\n      throw new Error(error.message)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferTokensDto.html":{"url":"classes/TransferTokensDto.html","title":"class - TransferTokensDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferTokensDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                to\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/payments/dto/transfer-tokens.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsOptional, IsString } from 'class-validator'\n\nexport class TransferTokensDto {\n  @IsOptional()\n  @IsString()\n    ownerId: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n\n  @IsOptional()\n  @IsEthereumAddress()\n    from: string\n\n  @IsEthereumAddress()\n    to: string\n\n  @IsString()\n    amount: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransferTokensEthereumDto.html":{"url":"classes/TransferTokensEthereumDto.html","title":"class - TransferTokensEthereumDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransferTokensEthereumDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                ownerId\n                            \n                            \n                                    \n                                to\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        ownerId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-apps-service/src/ethereum-payments/dto/transfer-tokens-ethereum.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEthereumAddress, IsOptional, IsString } from 'class-validator'\n\nexport class TransferTokensEthereumDto {\n  @IsOptional()\n  @IsString()\n    ownerId: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n\n  @IsOptional()\n  @IsEthereumAddress()\n    from: string\n\n  @IsEthereumAddress()\n    to: string\n\n  @IsString()\n    amount: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnstakeDto.html":{"url":"classes/UnstakeDto.html","title":"class - UnstakeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnstakeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/dto/unstake.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accountAddress\n                            \n                            \n                                    \n                                tokenAddress\n                            \n                            \n                                    \n                                tokenAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accountAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/unstake.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEthereumAddress()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/unstake.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tokenAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/dto/unstake.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsEthereumAddress } from 'class-validator'\n\nexport class UnstakeDto {\n  @IsEthereumAddress()\n    accountAddress: string\n\n  @IsString()\n    tokenAmount: string\n\n  @IsEthereumAddress()\n    tokenAddress: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnstakeTokens.html":{"url":"classes/UnstakeTokens.html","title":"class - UnstakeTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnstakeTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/unstake.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            WalletAction\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                descGenerator\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                        \n                            \n                                Inherited from         WalletAction\n\n                            \n                        \n                    \n                        \n                                Defined in         WalletAction:5\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:9\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:15\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Inherited from         WalletAction\n\n                        \n                    \n                    \n                        \n                                Defined in         WalletAction:7\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ERC_20_TYPE, NATIVE_TOKEN_TYPE } from '@app/smart-wallets-service/common/constants/tokenTypes'\nimport WalletAction from '@app/smart-wallets-service/data-layer/models/wallet-action/base'\nimport { ERC20Transfer } from '@app/smart-wallets-service/data-layer/interfaces/token-interfaces'\nimport { NATIVE_FUSE_TOKEN } from '@app/smart-wallets-service/common/constants/fuseTokenInfo'\nimport { LIQUID_STAKING_CONTRACT_ADDRESS } from '@app/smart-wallets-service/common/constants/addresess'\nimport { first, last } from 'lodash'\n\nexport default class UnstakeTokens extends WalletAction {\n  async execute (parsedUserOp: any) {\n    const { name: walletFunctionName } = parsedUserOp.walletFunction\n    if (walletFunctionName === 'executeBatch') {\n      const firstCallData: any = first(parsedUserOp.targetFunctions)\n      const lastCallData: any = last(parsedUserOp.targetFunctions)\n      if (lastCallData.name === 'withdraw') {\n        const { callData } = lastCallData\n        const [value] = callData\n        const receivedTokenData: ERC20Transfer = {\n          ...NATIVE_FUSE_TOKEN,\n          to: parsedUserOp.sender,\n          type: NATIVE_TOKEN_TYPE,\n          value: '0'\n        }\n\n        const tokenData = await this.tokenService.fetchTokenDetails(firstCallData.targetAddress)\n\n        const sentTokenData: ERC20Transfer = {\n          ...tokenData,\n          to: lastCallData.targetAddress,\n          type: ERC_20_TYPE,\n          value: value.toString()\n        }\n\n        return {\n          name: 'unstakeTokens',\n          walletAddress: parsedUserOp.sender,\n          status: 'pending',\n          received: [receivedTokenData],\n          sent: [sentTokenData],\n          userOpHash: parsedUserOp.userOpHash,\n          txHash: '',\n          blockNumber: 0,\n          description: this.generateDescription({\n            action: 'Unstake',\n            symbol: sentTokenData.symbol,\n            decimals: sentTokenData.decimals,\n            valueInWei: sentTokenData.value\n          })\n        }\n      } else {\n        const { name, targetAddress, callData } = lastCallData\n        if (name === 'leave') {\n          const [value] = callData\n          const tokenData = await this.tokenService.fetchTokenDetails(targetAddress)\n          const sentTokenData: ERC20Transfer = {\n            ...tokenData,\n            to: LIQUID_STAKING_CONTRACT_ADDRESS,\n            type: ERC_20_TYPE,\n            value: value.toString()\n          }\n          const recTokenData = await this.tokenService.fetchTokenDetails('0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')\n          const receivedTokenData: ERC20Transfer = {\n            ...recTokenData,\n            to: parsedUserOp.sender,\n            type: ERC_20_TYPE,\n            value: '0'\n          }\n          return {\n            name: 'unstakeTokens',\n            walletAddress: parsedUserOp.sender,\n            status: 'pending',\n            received: [receivedTokenData],\n            sent: [sentTokenData],\n            userOpHash: parsedUserOp.userOpHash,\n            txHash: '',\n            blockNumber: 0,\n            description: this.generateDescription({\n              action: 'Unstake',\n              symbol: sentTokenData.symbol,\n              decimals: sentTokenData.decimals,\n              valueInWei: sentTokenData.value\n            })\n          }\n        }\n      }\n    } else {\n      const { name, targetAddress, callData } = parsedUserOp.targetFunctions[0]\n      if (name === 'leave') {\n        const [value] = callData\n        const tokenData = await this.tokenService.fetchTokenDetails(targetAddress)\n        const sentTokenData: ERC20Transfer = {\n          ...tokenData,\n          to: LIQUID_STAKING_CONTRACT_ADDRESS,\n          type: ERC_20_TYPE,\n          value: value.toString()\n        }\n        const recTokenData = await this.tokenService.fetchTokenDetails('0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4')\n        const receivedTokenData: ERC20Transfer = {\n          ...recTokenData,\n          to: parsedUserOp.sender,\n          type: ERC_20_TYPE,\n          value: '0'\n        }\n        return {\n          name: 'unstakeTokens',\n          walletAddress: parsedUserOp.sender,\n          status: 'pending',\n          received: [receivedTokenData],\n          sent: [sentTokenData],\n          userOpHash: parsedUserOp.userOpHash,\n          txHash: '',\n          blockNumber: 0,\n          description: this.generateDescription({\n            action: 'Unstake',\n            symbol: sentTokenData.symbol,\n            decimals: sentTokenData.decimals,\n            valueInWei: sentTokenData.value\n          })\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/projects/dto/update-project.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProjectDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateProjectDto } from '@app/accounts-service/projects/dto/create-project.dto'\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWebhookDto.html":{"url":"classes/UpdateWebhookDto.html","title":"class - UpdateWebhookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWebhookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/dto/update-webhook.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateWebhookDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                webhookId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        webhookId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/dto/update-webhook.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types'\nimport { CreateWebhookDto } from '@app/notifications-service/webhooks/dto/create-webhook.dto'\nimport { IsString } from 'class-validator'\n\nexport class UpdateWebhookDto extends PartialType(CreateWebhookDto) {\n    @IsString()\n      webhookId: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            auth0Id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            questionnaire\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth0Id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        auth0Id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        questionnaire\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        questionnaire:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface User extends Document {\n  readonly name: string;\n  readonly email: string;\n  readonly auth0Id: string;\n  readonly questionnaire: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOp.html":{"url":"interfaces/UserOp.html","title":"interface - UserOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/interfaces/user-op.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseUserOp\n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actualGasCost\n                                        \n                                \n                                \n                                        \n                                            actualGasUsed\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                                \n                                        \n                                            targetFunctions\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            userOpHash\n                                        \n                                \n                                \n                                        \n                                            walletFunction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actualGasCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualGasCost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actualGasUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualGasUsed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetFunctions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetFunctions:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userOpHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userOpHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletFunction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletFunction:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface BaseUserOp {\n  apiKey: string; // Api key of project\n  sender: string; // Address is a string of hexadecimal characters\n  nonce: string; // Nonce is a string representation of a number that increases with each operation\n  initCode: string; // InitCode is a buffer of bytes that contains the code to create new wallets\n  callData: string; // CallData is a buffer of bytes that contains the data to execute the action\n  callGasLimit: string; // CallGasLimit is a number that specifies the maximum gas to use for the action\n  verificationGasLimit: string; // VerificationGasLimit is a number that specifies the maximum gas to use for verifying the operation\n  preVerificationGas: string; // PreVerificationGas is a number that specifies the gas to use before verifying the operation\n  maxFeePerGas: string; // MaxFeePerGas is a number that specifies the maximum fee per gas unit for the operation\n  maxPriorityFeePerGas: string; // MaxPriorityFeePerGas is a number that specifies the maximum priority fee per gas unit for the operation\n  paymasterAndData?: string; // PaymasterAndData is a buffer of bytes that contains the address and data of the paymaster who pays for the operation\n  paymaster: string; // Paymaster is an address of hexadecimal characters\n  sponsorId: string; // SponsorId of user used in paymaster contract\n  signature: string; // Signature is a buffer of bytes that contains the signature of the sender\n}\n\nexport interface UserOp extends BaseUserOp, Document {\n  userOpHash: string; // UserOpHash is a string of hexadecimal characters\n  txHash: string; // TxHash is  a unique identifier that is generated whenever a transaction is performed\n  walletFunction: object;\n  targetFunctions: Array;\n  success: boolean; // Success is a boolean value that indicates whether the operation was successful or not\n  actualGasCost: string; // ActualGasCost is a number that indicates how much gas was spent for the operation\n  actualGasUsed: string; // ActualGasUsed is a number that indicates how much gas was used for the operation\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOpEventData.html":{"url":"interfaces/UserOpEventData.html","title":"interface - UserOpEventData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOpEventData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/interfaces/event-data.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EventData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            actualGasCost\n                                        \n                                \n                                \n                                        \n                                            actualGasUsed\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                                \n                                        \n                                            userOpHash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actualGasCost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualGasCost:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actualGasUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actualGasUsed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userOpHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userOpHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EventData extends Object {\n  from: string,\n  txHash: string,\n  blockNumber: number,\n  blockHash: string,\n  gasPrice: string,\n  gasUsed: string,\n  gasFee: string,\n  gasLimit: string,\n  txnValue: string,\n}\nexport interface TokenEventData extends EventData {\n  to: string,\n  txHash: string,\n  tokenAddress: string,\n  blockNumber: number,\n  blockHash: string,\n  tokenType: string,\n  tokenName: string,\n  tokenSymbol: string,\n  value: string | null,\n  tokenDecimals: number | null,\n  tokenId: number | null,\n  valueEth: string | null,\n  isInternalTransaction: boolean\n}\nexport interface UserOpEventData extends EventData {\n  userOpHash: string;\n  nonce: string;\n  success: boolean;\n  actualGasCost: string;\n  actualGasUsed: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserOpEventsScannerService.html":{"url":"injectables/UserOpEventsScannerService.html","title":"injectable - UserOpEventsScannerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserOpEventsScannerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/events-scanner/userop-events-scanner.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EventsScannerService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                processBlocks\n                            \n                            \n                                    \n                                    Async\n                                processEvent\n                            \n                            \n                                    Async\n                                fetchLogs\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                start\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, scannerStatusService: ScannerStatusService, logsFilter: LogFilter, dataLayerClient: ClientProxy, rpcProvider: BaseProvider, gasService: GasService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/events-scanner/userop-events-scanner.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        scannerStatusService\n                                                  \n                                                        \n                                                                        ScannerStatusService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logsFilter\n                                                  \n                                                        \n                                                                        LogFilter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataLayerClient\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpcProvider\n                                                  \n                                                        \n                                                                    BaseProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gasService\n                                                  \n                                                        \n                                                                        GasService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processBlocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    processBlocks(fromBlock: number, toBlock: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('UserOpEventsScannerService::ProcessBlocks')\n                \n            \n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:35\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        processEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    processEvent(log: Log)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @logPerformance('UserOpEventsScannerService::ProcessEvent')\n                \n            \n\n                    \n                        \n                            Inherited from         EventsScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         EventsScannerService:52\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                log\n                                            \n                                                        Log\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchLogs(fromBlock: number, toBlock: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         EventsScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         EventsScannerService:37\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toBlock\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:16\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ScannerService\n\n                        \n                    \n                    \n                        \n                                Defined in         ScannerService:20\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { logPerformance } from '@app/notifications-service/common/decorators/log-performance.decorator'\nimport { parseLog } from '@app/notifications-service/common/utils/helper-functions'\nimport { UserOpScannerStatusServiceString, userOpLogsFilterString } from '@app/notifications-service/events-scanner/events-scanner.constants'\nimport { Inject, Injectable, Logger } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport { BaseProvider, InjectEthersProvider, Log } from 'nestjs-ethers'\nimport { UserOpEventData } from '@app/notifications-service/common/interfaces/event-data.interface'\nimport { EventsScannerService } from './events-scanner.service'\nimport { ScannerStatusService } from '@app/notifications-service/common/scanner-status.service'\nimport { LogFilter } from './interfaces/logs-filter'\nimport ENTRY_POINT_ABI from '@app/notifications-service/common/constants/abi/entryPoint.json'\nimport { smartWalletsService } from '@app/common/constants/microservices.constants'\nimport { ClientProxy } from '@nestjs/microservices'\nimport { callMSFunction } from '@app/common/utils/client-proxy'\nimport { GasService } from '@app/common/services/gas.service'\n\n@Injectable()\nexport class UserOpEventsScannerService extends EventsScannerService {\n  constructor (\n    configService: ConfigService,\n    @Inject(UserOpScannerStatusServiceString)\n    scannerStatusService: ScannerStatusService,\n    @Inject(userOpLogsFilterString)\n    logsFilter: LogFilter,\n    @Inject(smartWalletsService)\n    private readonly dataLayerClient: ClientProxy,\n    @InjectEthersProvider('regular-node')\n    rpcProvider: BaseProvider,\n    private gasService: GasService\n  ) {\n    super(configService, scannerStatusService, logsFilter, rpcProvider, new Logger(UserOpEventsScannerService.name))\n  }\n\n  @logPerformance('UserOpEventsScannerService::ProcessBlocks')\n  async processBlocks (fromBlock: number, toBlock: number) {\n    if (fromBlock > toBlock) return\n\n    const logs = await this.fetchLogs(fromBlock, toBlock)\n\n    for (const log of logs) {\n      try {\n        await this.processEvent(log)\n      } catch (error) {\n        this.logger.error('Failed to process log:')\n        this.logger.error({ log })\n        this.logger.error(error)\n      }\n    }\n  }\n\n  @logPerformance('UserOpEventsScannerService::ProcessEvent')\n  async processEvent (log: Log) {\n    const parsedLog = parseLog(log, ENTRY_POINT_ABI)\n    const gasValues = await this.gasService.fetchTransactionGasCosts(\n      parsedLog.transactionHash,\n      this.rpcProvider\n    )\n\n    const eventData: UserOpEventData = {\n      blockNumber: log.blockNumber,\n      blockHash: log.blockHash,\n      txHash: parsedLog.transactionHash,\n      userOpHash: parsedLog.args[0],\n      from: parsedLog.args[1],\n      nonce: parsedLog.args[3].toString(),\n      success: parsedLog.args[4],\n      actualGasCost: parsedLog.args[5].toString(),\n      actualGasUsed: parsedLog.args[6].toString(),\n      ...gasValues\n    }\n    try {\n      callMSFunction(this.dataLayerClient, 'update-user-op', eventData).catch((error) => {\n        this.logger.error(`Failed to call update-user-op: ${error.message}`)\n      })\n    } catch (error) {\n      this.logger.error(`Failed to call update-user-op: ${error.message}`)\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserOpFactory.html":{"url":"injectables/UserOpFactory.html","title":"injectable - UserOpFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserOpFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/common/services/user-op-factory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUserOp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userOpParser: UserOpParser)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-smart-wallets-service/src/common/services/user-op-factory.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userOpParser\n                                                  \n                                                        \n                                                                        UserOpParser\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUserOp\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUserOp(baseUserOp)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/user-op-factory.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                baseUserOp\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserOp } from '@app/smart-wallets-service/data-layer/interfaces/user-op.interface'\nimport { Injectable } from '@nestjs/common'\nimport { UserOpParser } from '@app/smart-wallets-service/common/services/user-op-parser.service'\n\n@Injectable()\nexport class UserOpFactory {\n  constructor (\n    private readonly userOpParser: UserOpParser\n  ) { }\n\n  async createUserOp (baseUserOp): Promise {\n    const { targetFunctions, name } = await this.userOpParser.parseCallData(baseUserOp.callData)\n    return {\n      ...baseUserOp,\n      walletFunction: { name },\n      targetFunctions\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserOpParser.html":{"url":"injectables/UserOpParser.html","title":"injectable - UserOpParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserOpParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/user-op-parser.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                decodeCalldata\n                            \n                            \n                                    Async\n                                getTargetFunction\n                            \n                            \n                                    Async\n                                parseCallData\n                            \n                            \n                                    Private\n                                transformArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decodeCalldata\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeCalldata(callData: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/user-op-parser.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callData\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTargetFunction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetFunction(calls)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/user-op-parser.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calls\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parseCallData\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseCallData(callData: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/user-op-parser.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callData\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transformArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformArray(input)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/user-op-parser.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { decodeWithCalldata, sigHashFromCalldata } from '@app/common/utils/dtools/decodeBySigHash'\nimport { Injectable } from '@nestjs/common'\nimport { BigNumber } from 'nestjs-ethers'\n\n@Injectable()\nexport class UserOpParser {\n  async decodeCalldata (callData: string) {\n    return decodeWithCalldata(sigHashFromCalldata(callData), callData)\n  }\n\n  private transformArray (input) {\n    const [targets, values, data] = input\n\n    return targets.map((targetAddress, index) => ({\n      targetAddress,\n      value: BigNumber.from(values[index]),\n      data: data[index]\n    }))\n  }\n\n  async getTargetFunction (calls) {\n    return Promise.all(calls.map(async (call) => {\n      if (call.data === '0x') {\n        return {\n          targetAddress: call.targetAddress,\n          value: call.value.toString(),\n          callData: call.data,\n          name: 'nativeTransfer'\n        }\n      } else {\n        const decodedCallData = await this.decodeCalldata(call.data)\n        return {\n          targetAddress: call.targetAddress,\n          value: call.value.toString(),\n          callData: decodedCallData[0].decoded,\n          name: decodedCallData[0].fragment.name\n        }\n      }\n    }))\n  }\n\n  async parseCallData (callData: string) {\n    const decodeResults = await this.decodeCalldata(\n      callData\n    )\n    if (!decodeResults) {\n      throw new Error('Signature is wrong or undefined')\n    }\n\n    const { decoded, fragment } = decodeResults[0]\n    const calls = []\n    if (fragment.name === 'executeBatch') {\n      const items = this.transformArray(decoded)\n      calls.push(...items)\n    } else {\n      const items = this.transformArray([[decoded[0]], [decoded[1]], [decoded[2]]])\n      calls.push(...items)\n    }\n\n    const targetFunctions = await this.getTargetFunction(calls)\n\n    return { name: fragment.name, targetFunctions, calls }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserOpParser-1.html":{"url":"injectables/UserOpParser-1.html","title":"injectable - UserOpParser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserOpParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/common/services/user-op-parser.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                decodeCalldata\n                            \n                            \n                                    Async\n                                getTargetFunction\n                            \n                            \n                                    Async\n                                parseCallData\n                            \n                            \n                                    Private\n                                transformArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        decodeCalldata\n                        \n                    \n                \n            \n            \n                \n                        \n                    decodeCalldata(callData: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/user-op-parser.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callData\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTargetFunction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTargetFunction(calls)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/user-op-parser.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                calls\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        parseCallData\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseCallData(callData: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/user-op-parser.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callData\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        transformArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformArray(input)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/common/services/user-op-parser.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { decodeWithCalldata, sigHashFromCalldata } from '@app/common/utils/dtools/decodeBySigHash'\nimport { Injectable } from '@nestjs/common'\nimport { BigNumber } from 'nestjs-ethers'\n\n@Injectable()\nexport class UserOpParser {\n  async decodeCalldata (callData: string) {\n    return decodeWithCalldata(sigHashFromCalldata(callData), callData)\n  }\n\n  private transformArray (input) {\n    const [targets, values, data] = input\n\n    return targets.map((targetAddress, index) => ({\n      targetAddress,\n      value: BigNumber.from(values[index]),\n      data: data[index]\n    }))\n  }\n\n  async getTargetFunction (calls) {\n    return Promise.all(calls.map(async (call) => {\n      if (call.data === '0x') {\n        return {\n          targetAddress: call.targetAddress,\n          value: call.value.toString(),\n          callData: call.data,\n          name: 'nativeTransfer'\n        }\n      } else {\n        const decodedCallData = await this.decodeCalldata(call.data)\n        return {\n          targetAddress: call.targetAddress,\n          value: call.value.toString(),\n          callData: decodedCallData[0].decoded,\n          name: decodedCallData[0].fragment.name\n        }\n      }\n    }))\n  }\n\n  async parseCallData (callData: string) {\n    const decodeResults = await this.decodeCalldata(\n      callData\n    )\n    if (!decodeResults) {\n      throw new Error('Signature is wrong or undefined')\n    }\n\n    const { decoded, fragment } = decodeResults[0]\n    const calls = []\n    if (fragment.name === 'executeBatch') {\n      const items = this.transformArray(decoded)\n      calls.push(...items)\n    } else {\n      const items = this.transformArray([[decoded[0]], [decoded[1]], [decoded[2]]])\n      calls.push(...items)\n    }\n\n    const targetFunctions = await this.getTargetFunction(calls)\n\n    return { name: fragment.name, targetFunctions }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserStakedTokens.html":{"url":"interfaces/UserStakedTokens.html","title":"interface - UserStakedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserStakedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/interfaces/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            stakedTokens\n                                        \n                                \n                                \n                                        \n                                            totalEarnedAmountUSD\n                                        \n                                \n                                \n                                        \n                                            totalStakedAmountUSD\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stakedTokens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stakedTokens:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalEarnedAmountUSD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalEarnedAmountUSD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalStakedAmountUSD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalStakedAmountUSD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\n\ninterface Token {\n    tokenAddress: string\n    tokenSymbol: string\n    tokenName: string\n    tokenLogoURI: string\n    unStakeTokenAddress: string\n}\n\nexport interface StakingOption extends Token {\n    stakingProviderId: string\n    stakingApr?: number\n    tvl?: number\n}\n\nexport interface StakedToken extends Token {\n    stakedAmount: number\n    stakedAmountUSD: number\n    earnedAmountUSD: number\n    stakingApr: number\n}\n\nexport interface UserStakedTokens {\n    totalStakedAmountUSD: string\n    totalEarnedAmountUSD: string\n    stakedTokens: Array\n}\n\nexport interface StakingProvider {\n    address: string\n    stake: (stakeDto: StakeDto) => string\n    unStake: (unStakeDto: UnstakeDto) => string\n    stakedToken: (accountAddress: string, stakingOption: StakingOption) => Promise\n    stakingApr: (stakingOption: StakingOption) => Promise\n    tvl: (stakingOption: StakingOption) => Promise\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findOneInternal\n                            \n                            \n                                    \n                                    \n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneInternal\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneInternal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('find-one-user')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)@Post('/questionnaire/:id')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.controller.ts:20\n                        \n                    \n\n\n            \n                \n                        Submits questionnaire answers for the given user id and verifies that the authenticated\nuser has the given user id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    User ID\n\n                                            \n                                        \n                                        \n                                                submitQuestionnaireDto\n                                            \n                                                            SubmitQuestionnaireDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Param } from '@nestjs/common'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { JwtAuthGuard } from '@app/accounts-service/auth/guards/jwt-auth.guard'\nimport { SubmitQuestionnaireDto } from '@app/accounts-service/users/dto/submit-questionnaire.dto'\nimport { IsAccountOwnerGuard } from '@app/accounts-service/users/guards/is-account-owner.guard'\nimport { MessagePattern } from '@nestjs/microservices'\n\n@Controller({ path: 'users', version: '1' })\nexport class UsersController {\n  constructor (private readonly usersService: UsersService) { }\n\n  /**\n   * Submits questionnaire answers for the given user id and verifies that the authenticated\n   * user has the given user id\n   * @param id User ID\n   * @param submitQuestionnaireDto\n   */\n  @UseGuards(JwtAuthGuard, IsAccountOwnerGuard)\n  @Post('/questionnaire/:id')\n  submitQuestionnaire (\n    @Param('id') id: string,\n    @Body() submitQuestionnaireDto: SubmitQuestionnaireDto\n  ) {\n    return this.usersService.submitQuestionnaire(id, submitQuestionnaireDto)\n  }\n\n  @MessagePattern('find-one-user')\n  findOneInternal (id: string) {\n    return this.usersService.findOne(id)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { UsersService } from '@app/accounts-service/users/users.service'\nimport { UsersController } from '@app/accounts-service/users/users.controller'\nimport { DatabaseModule } from '@app/common'\nimport { usersProviders } from '@app/accounts-service/users/users.providers'\nimport { IsAccountOwnerGuard } from '@app/accounts-service/users/guards/is-account-owner.guard'\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [UsersService, IsAccountOwnerGuard, ...usersProviders],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-accounts-service/src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByAuth0Id\n                            \n                            \n                                    Async\n                                submitQuestionnaire\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-accounts-service/src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByAuth0Id\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByAuth0Id(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitQuestionnaire\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitQuestionnaire(id: string, submitQuestionnaireDto: SubmitQuestionnaireDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-accounts-service/src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                submitQuestionnaireDto\n                                            \n                                                            SubmitQuestionnaireDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common'\nimport { Model } from 'mongoose'\nimport { CreateUserDto } from '@app/accounts-service/users/dto/create-user.dto'\nimport { SubmitQuestionnaireDto } from '@app/accounts-service/users/dto/submit-questionnaire.dto'\nimport { User } from '@app/accounts-service/users/interfaces/user.interface'\nimport { userModelString } from '@app/accounts-service/users/users.constants'\n\n@Injectable()\nexport class UsersService {\n  constructor (\n    @Inject(userModelString)\n    private userModel: Model\n  ) { }\n\n  async create (createUserDto: CreateUserDto): Promise {\n    // TODO: When a user already exists, throw a custom exception of user already exists instead of internal server error\n    const createdUser = new this.userModel(createUserDto)\n    return createdUser.save()\n  }\n\n  async findAll (): Promise {\n    return this.userModel.find().exec()\n  }\n\n  async findOne (id: string): Promise {\n    return this.userModel.findOne({ _id: id }).exec()\n  }\n\n  async findOneByAuth0Id (id: string): Promise {\n    return this.userModel.findOne({ auth0Id: id }).exec()\n  }\n\n  async submitQuestionnaire (\n    id: string,\n    submitQuestionnaireDto: SubmitQuestionnaireDto\n  ) {\n    return await this.userModel.findByIdAndUpdate(\n      id,\n      { questionnaire: submitQuestionnaireDto.questionnaire },\n      { new: true }\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VoltBarService.html":{"url":"injectables/VoltBarService.html","title":"injectable - VoltBarService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VoltBarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getStakingData\n                            \n                            \n                                stake\n                            \n                            \n                                    Async\n                                stakedToken\n                            \n                            \n                                    Async\n                                stakingApr\n                            \n                            \n                                    Async\n                                tvl\n                            \n                            \n                                unStake\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    address\n                                \n                                \n                                    stakingProviderId\n                                \n                                \n                                    voltBarGraphClient\n                                \n                                \n                                    voltageClient\n                                \n                                \n                                    blockClient\n                                \n                                \n                                    voltBarInterface\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(provider: JsonRpcProvider, graphService: GraphService, configService: ConfigService, tradeService: TradeService)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                  \n                                                        \n                                                                    JsonRpcProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        graphService\n                                                  \n                                                        \n                                                                        GraphService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tradeService\n                                                  \n                                                        \n                                                                        TradeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getStakingData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStakingData(accountAddress: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stake\n                        \n                    \n                \n            \n            \n                \nstake(undefined: StakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakedToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakedToken(accountAddress: string, undefined: StakingOption)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                accountAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            StakingOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stakingApr\n                        \n                    \n                \n            \n            \n                \n                        \n                    stakingApr()\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        tvl\n                        \n                    \n                \n            \n            \n                \n                        \n                    tvl(undefined: StakingOption)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            StakingOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unStake\n                        \n                    \n                \n            \n            \n                \nunStake(undefined: UnstakeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            UnstakeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(VoltBarService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n\n                \n                    \n                        getaddress()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        stakingProviderId\n                    \n                \n\n                \n                    \n                        getstakingProviderId()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        voltBarGraphClient\n                    \n                \n\n                \n                    \n                        getvoltBarGraphClient()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        voltageClient\n                    \n                \n\n                \n                    \n                        getvoltageClient()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        blockClient\n                    \n                \n\n                \n                    \n                        getblockClient()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:51\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        voltBarInterface\n                    \n                \n\n                \n                    \n                        getvoltBarInterface()\n                    \n                \n                            \n                                \n                                    Defined in apps/charge-network-service/src/staking/staking-providers/volt-bar.service.ts:55\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import VoltBarABI from '@app/network-service/common/constants/abi/VoltBar.json'\nimport { StakingOption, StakingProvider } from '@app/network-service/staking/interfaces'\nimport { StakeDto } from '@app/network-service/staking/dto/stake.dto'\nimport { UnstakeDto } from '@app/network-service/staking/dto/unstake.dto'\nimport Erc20ABI from '@app/network-service/common/constants/abi/Erc20.json'\nimport { Injectable, Logger } from '@nestjs/common'\nimport {\n  Contract,\n  InjectEthersProvider,\n  Interface,\n  JsonRpcProvider,\n  formatEther,\n  parseEther\n} from 'nestjs-ethers'\nimport GraphService from '@app/network-service/staking/graph.service'\nimport { ConfigService } from '@nestjs/config'\nimport { daysInYear, voltBarId } from '@app/network-service/common/constants'\nimport TradeService from '@app/common/services/trade.service'\nimport { getBarStats, getBarUser } from '@app/network-service/common/constants/graph-queries/voltbar'\nimport { secondsInDay } from 'date-fns/constants'\nimport { getUnixTime } from 'date-fns'\n\n@Injectable()\nexport default class VoltBarService implements StakingProvider {\n  private readonly logger = new Logger(VoltBarService.name)\n\n  constructor (\n    @InjectEthersProvider('regular-node')\n    private readonly provider: JsonRpcProvider,\n    private readonly graphService: GraphService,\n    private readonly configService: ConfigService,\n    private readonly tradeService: TradeService\n  ) { }\n\n  get address () {\n    return this.configService.get('voltBarAddress')\n  }\n\n  get stakingProviderId () {\n    return voltBarId\n  }\n\n  get voltBarGraphClient () {\n    return this.graphService.getVoltBarClient()\n  }\n\n  get voltageClient () {\n    return this.graphService.getVoltageClient()\n  }\n\n  get blockClient () {\n    return this.graphService.getBlockClient()\n  }\n\n  get voltBarInterface () {\n    return new Interface(VoltBarABI)\n  }\n\n  stake ({ tokenAmount }: StakeDto) {\n    return this.voltBarInterface.encodeFunctionData('enter', [parseEther(tokenAmount)])\n  }\n\n  unStake ({ tokenAmount }: UnstakeDto) {\n    return this.voltBarInterface.encodeFunctionData('leave', [parseEther(tokenAmount)])\n  }\n\n  async stakedToken (\n    accountAddress: string,\n    {\n      tokenAddress,\n      tokenLogoURI,\n      tokenName,\n      tokenSymbol,\n      unStakeTokenAddress\n    }: StakingOption) {\n    try {\n      const stakingData: any = await this.getStakingData(accountAddress)\n\n      const voltPrice = await this.tradeService.getTokenPrice(tokenAddress)\n\n      const stakedAmount = Number(stakingData?.user?.xVolt ?? 0) * Number(stakingData?.bar?.ratio ?? 0)\n      const stakedAmountUSD = stakedAmount * voltPrice\n      const earnedAmountUSD = 0\n\n      const stakingApr = await this.stakingApr()\n\n      return {\n        tokenAddress,\n        tokenLogoURI,\n        tokenName,\n        tokenSymbol,\n        unStakeTokenAddress,\n        stakedAmount,\n        stakedAmountUSD,\n        earnedAmountUSD,\n        stakingApr\n      }\n    } catch (error) {\n      // Add additional error handling or rethrow the error as needed\n      this.logger.error('Error in staking data retrieval:', error)\n    }\n  }\n\n  async stakingApr () {\n    const days = 31\n    const latestTimestamp = getUnixTime(new Date())\n    const startTimestamp = (latestTimestamp / secondsInDay) - days\n    try {\n      const stats: any = await this.voltBarGraphClient.request(getBarStats, {\n        days,\n        startTimestamp: String(startTimestamp)\n      })\n      const voltBalanceHistories = stats?.voltBalanceHistories || []\n      const bars = stats?.bars || []\n\n      const totalStaked = bars?.[0]?.totalSupply\n\n      const movingAverage = voltBalanceHistories\n        .map((history: any, index: number, histories: any[]) => {\n          if (index === 0) return 0\n          return history.balance - history.totalVoltStaked - (histories[index - 1].balance - histories[index - 1].totalVoltStaked)\n        })\n        .reduce((totalAverage: number, history: number) => totalAverage + history, 0) / voltBalanceHistories.length - 1\n\n      return (movingAverage * daysInYear * 100) / totalStaked\n    } catch (error) {\n      this.logger.error(`stakingApr error: ${error}`)\n      this.logger.error(`stakingApr query:${getBarStats}`)\n      this.logger.error(`arguments: ${startTimestamp}`)\n    }\n  }\n\n  async tvl ({ tokenAddress }: StakingOption) {\n    try {\n      const voltTokenContract = new Contract(tokenAddress, Erc20ABI, this.provider)\n      const voltBalance = await voltTokenContract.balanceOf(this.address)\n      const voltPrice = await this.tradeService.getTokenPrice(tokenAddress)\n      return Number(formatEther(voltBalance)) * voltPrice\n    } catch (error) {\n      this.logger.error(`tvl error: ${error}`)\n      this.logger.error(`params: ${tokenAddress}`)\n    }\n  }\n\n  private async getStakingData (accountAddress: string) {\n    try {\n      const data = await this.voltBarGraphClient.request(getBarUser, {\n        barId: this.address.toLowerCase(),\n        userId: accountAddress.toLowerCase()\n      })\n\n      return data\n    } catch (error) {\n      this.logger.error(`getStakingData error: ${error}`)\n      this.logger.error(`gatStakingData error query: ${getBarUser}`)\n      this.logger.error({\n        barId: this.address,\n        userId: accountAddress\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletAction.html":{"url":"classes/WalletAction.html","title":"class - WalletAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                tokenService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                descGenerator\n                            \n                            \n                                    Async\n                                execute\n                            \n                            \n                                generateDescription\n                            \n                            \n                                setTokenService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        tokenService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TokenService\n\n                    \n                \n                    \n                        \n                                Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        descGenerator\n                        \n                    \n                \n            \n            \n                \ndescGenerator(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                        \n                    execute(parsedUserOp: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                parsedUserOp\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateDescription\n                        \n                    \n                \n            \n            \n                \ngenerateDescription(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTokenService\n                        \n                    \n                \n            \n            \n                \nsetTokenService(tokenService: TokenService)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-smart-wallets-service/src/data-layer/models/wallet-action/base.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenService\n                                            \n                                                            TokenService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { formatUnits } from 'nestjs-ethers'\nimport { TokenService } from '@app/smart-wallets-service/common/services/token.service'\n\nexport default abstract class WalletAction {\n  protected tokenService: TokenService\n\n  setTokenService (tokenService: TokenService): void {\n    this.tokenService = tokenService\n  }\n\n  async execute (parsedUserOp: Record): Promise {\n    return parsedUserOp\n  }\n\n  descGenerator (data: any): string {\n    return `${data.action} ${formatUnits(data.valueInWei, data.decimals)} ${data.symbol}`\n  }\n\n  generateDescription (data: any) {\n    return this.descGenerator(data)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletActionDocument.html":{"url":"interfaces/WalletActionDocument.html","title":"interface - WalletActionDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletActionDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/schemas/wallet-action.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        mongoose.Document\n            \n\n\n\n\n    \n\n\n    \n        import * as mongoose from 'mongoose'\nimport paginate from 'mongoose-paginate-v2'\n\nconst ercTransferMetadata = {\n  name: { type: String, required: true },\n  symbol: { type: String, required: true },\n  address: { type: String, required: true, lowercase: true },\n  decimals: { type: Number, default: 0 },\n  type: { type: String, required: true },\n  value: { type: String, nullable: true },\n  to: { type: String, nullable: true },\n  from: { type: String, nullable: true },\n  tokenId: { type: String, nullable: true }\n}\n\nexport const WalletActionSchema = new mongoose.Schema(\n  {\n    walletAddress: { type: String, required: true },\n    name: { type: String, required: true },\n    status: { type: String, required: true, default: false },\n    received: [ercTransferMetadata],\n    sent: [ercTransferMetadata],\n    userOpHash: { type: String },\n    txHash: { type: String },\n    blockNumber: { type: Number },\n    value: { type: Number },\n    description: { type: String }\n  },\n  {\n    timestamps: true\n  }\n)\n\nWalletActionSchema.index({ walletAddress: 1 })\nWalletActionSchema.index({ userOpHash: 1 })\nWalletActionSchema.plugin(paginate)\n\nexport interface WalletActionDocument extends mongoose.Document { }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletActionInterface.html":{"url":"interfaces/WalletActionInterface.html","title":"interface - WalletActionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletActionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-smart-wallets-service/src/data-layer/interfaces/wallet-action.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blockNumber\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            received\n                                        \n                                \n                                \n                                        \n                                            sent\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txHash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userOpHash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            walletAddress\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        received:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sent:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userOpHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userOpHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walletAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walletAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WalletActionInterface {\n    walletAddress: string;\n    name: string;\n    status: string;\n    received: {\n        name: string;\n        symbol: string;\n        address: string;\n        decimals: number;\n        type: string;\n        value?: string;\n        to?: string;\n        from?: string;\n        tokenId?: string;\n    }[];\n    sent: {\n        name: string;\n        symbol: string;\n        address: string;\n        decimals: number;\n        type: string;\n        value?: string;\n        to?: string;\n        from?: string;\n        tokenId?: string;\n    }[];\n    userOpHash?: string;\n    txHash?: string;\n    blockNumber?: number;\n    value?: number;\n    description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Webhook.html":{"url":"interfaces/Webhook.html","title":"interface - Webhook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Webhook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/interfaces/webhook.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            eventType\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            webhookUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhookUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhookUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Webhook extends Document {\n  readonly projectId: string;\n  readonly webhookUrl: string;\n  readonly eventType: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebhookAddress.html":{"url":"interfaces/WebhookAddress.html","title":"interface - WebhookAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WebhookAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/interfaces/webhook-address.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            webhookId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhookId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhookId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface WebhookAddress extends Document {\n  readonly webhookId: string;\n  readonly address: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebhookEvent.html":{"url":"interfaces/WebhookEvent.html","title":"interface - WebhookEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WebhookEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-apps-service/src/payments/interfaces/webhook-event.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blockHash\n                                        \n                                \n                                \n                                        \n                                            blockNumber\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            tokenAddress\n                                        \n                                \n                                \n                                        \n                                            tokenDecimals\n                                        \n                                \n                                \n                                        \n                                            tokenName\n                                        \n                                \n                                \n                                        \n                                            tokenSymbol\n                                        \n                                \n                                \n                                        \n                                            tokenType\n                                        \n                                \n                                \n                                        \n                                            txHash\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                                \n                                        \n                                            valueEth\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blockHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blockNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blockNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenDecimals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenDecimals:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenSymbol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenSymbol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tokenType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokenType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txHash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txHash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valueEth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        valueEth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface WebhookEvent extends Document {\n  readonly to: string;\n  readonly from: string;\n  readonly value: string;\n  readonly valueEth: string;\n  readonly txHash: string;\n  readonly blockNumber: number;\n  readonly blockHash: string;\n  readonly tokenType: string;\n  readonly tokenAddress: string;\n  readonly tokenSymbol: string;\n  readonly tokenName: string;\n  readonly tokenDecimals: string;\n  readonly direction: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WebhookEvent-1.html":{"url":"interfaces/WebhookEvent-1.html","title":"interface - WebhookEvent-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WebhookEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/common/interfaces/webhook-event.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n                            Object\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addressType\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            eventData\n                                        \n                                \n                                \n                                        \n                                            numberOfTries\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            responses\n                                        \n                                \n                                \n                                        \n                                            retryAfter\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                                \n                                        \n                                            webhook\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addressType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addressType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         EventData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventData:         EventData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EventData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfTries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfTries:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        responses:     object[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        retryAfter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        retryAfter:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        webhook\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        webhook:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\nimport { EventData } from '@app/notifications-service/common/interfaces/event-data.interface'\n\nexport interface WebhookEvent extends Document, Object {\n  readonly webhook: string;\n  readonly projectId: string;\n  readonly addressType: string;\n  readonly eventData: EventData;\n  readonly direction: EventData;\n  numberOfTries: number;\n  retryAfter: Date;\n  success: boolean;\n  responses: object[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebhookSendService.html":{"url":"injectables/WebhookSendService.html","title":"injectable - WebhookSendService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebhookSendService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/common/src/services/webhook-send.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in libs/common/src/services/webhook-send.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendData\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendData(webhookEvent: any, externalWebHookUrl?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/common/src/services/webhook-send.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookEvent\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                externalWebHookUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebhookSendService.name)\n                    \n                \n                    \n                        \n                                Defined in libs/common/src/services/webhook-send.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios'\nimport { HttpException, Injectable, Logger } from '@nestjs/common'\nimport { catchError, lastValueFrom, map } from 'rxjs'\nimport { AxiosRequestConfig, AxiosResponse } from 'axios'\n\n@Injectable()\nexport default class WebhookSendService {\n  private readonly logger = new Logger(WebhookSendService.name)\n\n  constructor (\n    private readonly httpService: HttpService\n  ) { }\n\n  async sendData (webhookEvent: any, externalWebHookUrl?: string) {\n    const webhookUrl = externalWebHookUrl || webhookEvent.webhook.webhookUrl\n\n    const postBody = externalWebHookUrl\n      ? webhookEvent\n      : {\n          ...webhookEvent.eventData,\n          projectId: webhookEvent.projectId,\n          direction: webhookEvent.direction,\n          addressType: webhookEvent.addressType\n        }\n\n    const headers: Record = {\n      'Content-Type': 'application/json'\n    }\n\n    const requestConfig: AxiosRequestConfig = {\n      method: 'post',\n      url: webhookUrl,\n      data: postBody,\n      headers,\n      timeout: 3000\n    }\n\n    return lastValueFrom(this.httpService\n      .request(\n        requestConfig\n      )\n      .pipe(\n        map((axiosResponse: AxiosResponse) => {\n          this.logger.log(`Sent webhook to ${webhookUrl} with data: ${JSON.stringify(postBody)}`)\n          return axiosResponse\n        })\n      )\n      .pipe(\n        catchError(e => {\n          const errorReason = e?.response?.data?.error ||\n            e?.response?.data?.errors?.message || ''\n\n          throw new HttpException(\n            `${e?.response?.statusText}: ${JSON.stringify(errorReason)}`,\n            e?.response?.status\n          )\n        })\n      )\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WebhooksController.html":{"url":"controllers/WebhooksController.html","title":"controller - WebhooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WebhooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/webhooks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                webhooks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                createAddresses\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                deleteAddresses\n                            \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                getAddresses\n                            \n                            \n                                    \n                                    \n                                getAddressWatchers\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWebhookDto: CreateWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookDto\n                                            \n                                                            CreateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('create_addresses')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('delete_webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deleteAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('delete_addresses')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddresses(webhookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_addresses')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getAddressWatchers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressWatchers(address: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('address-watchers/:address')@MessagePattern('get_address_watchers')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(projectId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('get_all_webhooks')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateWebhookDto: UpdateWebhookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('update_webhook')\n                \n            \n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateWebhookDto\n                                            \n                                                            UpdateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateWebhookAddressesDto } from '@app/notifications-service/webhooks/dto/create-webhook-addresses.dto'\nimport { CreateWebhookDto } from '@app/notifications-service/webhooks/dto/create-webhook.dto'\nimport { UpdateWebhookDto } from '@app/notifications-service/webhooks/dto/update-webhook.dto'\nimport { WebhooksService } from '@app/notifications-service/webhooks/webhooks.service'\nimport { Body, Controller, Get, Param } from '@nestjs/common'\nimport { MessagePattern } from '@nestjs/microservices'\n\n@Controller('webhooks')\nexport class WebhooksController {\n  constructor (private readonly webhooksService: WebhooksService) { }\n\n  @MessagePattern('create_webhook')\n  create (@Body() createWebhookDto: CreateWebhookDto) {\n    return this.webhooksService.create(createWebhookDto)\n  }\n\n  @MessagePattern('update_webhook')\n  update (@Body() updateWebhookDto: UpdateWebhookDto) {\n    return this.webhooksService.update(updateWebhookDto)\n  }\n\n  @MessagePattern('delete_webhook')\n  delete (@Body() webhookId: string) {\n    return this.webhooksService.delete(webhookId)\n  }\n\n  @MessagePattern('get_webhook')\n  get (@Body() webhookId: string) {\n    return this.webhooksService.get(webhookId)\n  }\n\n  @MessagePattern('get_all_webhooks')\n  getAll (@Body() projectId: string) {\n    return this.webhooksService.getAllByProjectId(projectId)\n  }\n\n  @MessagePattern('create_addresses')\n  createAddresses (@Body() createWebhookAddressesDto: CreateWebhookAddressesDto) {\n    return this.webhooksService.createAddresses(createWebhookAddressesDto)\n  }\n\n  @MessagePattern('get_addresses')\n  getAddresses (@Body() webhookId: string) {\n    return this.webhooksService.getAddresses(webhookId)\n  }\n\n  @MessagePattern('delete_addresses')\n  deleteAddresses (@Body() createWebhookAddressesDto: CreateWebhookAddressesDto) {\n    return this.webhooksService.deleteAddresses(createWebhookAddressesDto)\n  }\n\n  @Get('address-watchers/:address')\n  @MessagePattern('get_address_watchers')\n  getAddressWatchers (@Param('address') address: string) {\n    return this.webhooksService.getAddressWatchers(address)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebhooksModule.html":{"url":"modules/WebhooksModule.html","title":"module - WebhooksModule","body":"\n                   \n\n\n\n\n    Modules\n    WebhooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebhooksModule\n\n\n\ncluster_WebhooksModule_exports\n\n\n\ncluster_WebhooksModule_providers\n\n\n\ncluster_WebhooksModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nWebhooksModule -->\n\nDatabaseModule->WebhooksModule\n\n\n\n\n\nWebhooksService \n\nWebhooksService \n\nWebhooksService  -->\n\nWebhooksModule->WebhooksService \n\n\n\n\n\nWebhooksService\n\nWebhooksService\n\nWebhooksModule -->\n\nWebhooksService->WebhooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/webhooks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WebhooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WebhooksController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WebhooksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DatabaseModule } from '@app/common'\nimport { WebhooksController } from '@app/notifications-service/webhooks/webhooks.controller'\nimport { webhooksProviders } from '@app/notifications-service/webhooks/webhooks.providers'\nimport { WebhooksService } from '@app/notifications-service/webhooks/webhooks.service'\nimport { Module } from '@nestjs/common'\nimport { webhookEventProviders } from '@app/notifications-service/common/providers/webhook-event.provider'\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [WebhooksService, ...webhooksProviders, ...webhookEventProviders],\n  controllers: [WebhooksController],\n  exports: [WebhooksService]\n})\nexport class WebhooksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebhooksService.html":{"url":"injectables/WebhooksService.html","title":"injectable - WebhooksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebhooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/charge-notifications-service/src/webhooks/webhooks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addRelevantWebhookTokensEventsToQueue\n                            \n                            \n                                    Private\n                                buildDocs\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createAddresses\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAddresses\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getAddresses\n                            \n                            \n                                    Async\n                                getAddressWatchers\n                            \n                            \n                                    Async\n                                getAllByProjectId\n                            \n                            \n                                isRelevantEvent\n                            \n                            \n                                    Async\n                                processWebhookTokenEvents\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(webhookModel: Model, webhookAddressModel: Model, webhookEventModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        webhookModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhookAddressModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        webhookEventModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRelevantWebhookTokensEventsToQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRelevantWebhookTokensEventsToQueue(addressWatchers: any, eventData: TokenEventData, direction: string | null, addressType)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressWatchers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                eventData\n                                            \n                                                            TokenEventData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                direction\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addressType\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildDocs\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildDocs(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWebhookDto: CreateWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookDto\n                                            \n                                                            CreateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(webhookId)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAddresses(createWebhookAddressesDto: CreateWebhookAddressesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWebhookAddressesDto\n                                            \n                                                            CreateWebhookAddressesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(webhookId)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddresses\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddresses(webhookId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                webhookId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAddressWatchers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAddressWatchers(address: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                address\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllByProjectId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllByProjectId(projectId)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRelevantEvent\n                        \n                    \n                \n            \n            \n                \nisRelevantEvent(tokenType: string, eventType: string)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                eventType\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processWebhookTokenEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    processWebhookTokenEvents(eventData: TokenEventData)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                eventData\n                                            \n                                                            TokenEventData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateWebhookDto: UpdateWebhookDto)\n                \n            \n\n\n                    \n                        \n                            Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateWebhookDto\n                                            \n                                                            UpdateWebhookDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WebhooksService.name)\n                    \n                \n                    \n                        \n                                Defined in apps/charge-notifications-service/src/webhooks/webhooks.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common'\nimport { CreateWebhookAddressesDto } from '@app/notifications-service/webhooks/dto/create-webhook-addresses.dto'\nimport { CreateWebhookDto } from '@app/notifications-service/webhooks/dto/create-webhook.dto'\nimport { UpdateWebhookDto } from '@app/notifications-service/webhooks/dto/update-webhook.dto'\nimport { WebhookAddress } from '@app/notifications-service/webhooks/interfaces/webhook-address.interface'\nimport { Webhook } from '@app/notifications-service/webhooks/interfaces/webhook.interface'\nimport { webhookAddressModelString, webhookModelString } from '@app/notifications-service/webhooks/webhooks.constants'\nimport { isEmpty } from 'lodash'\nimport { Model } from 'mongoose'\nimport { TokenEventData } from '@app/notifications-service/common/interfaces/event-data.interface'\nimport { eventTypes } from '@app/notifications-service/webhooks/schemas/webhook.schema'\nimport { addressTypes } from '@app/notifications-service/common/schemas/webhook-event.schema'\nimport { webhookEventModelString } from '@app/notifications-service/common/constants/webhook-event.constants'\nimport { WebhookEvent } from '@app/notifications-service/common/interfaces/webhook-event.interface'\n\n@Injectable()\nexport class WebhooksService {\n  private readonly logger = new Logger(WebhooksService.name)\n\n  constructor (\n    @Inject(webhookModelString)\n    private webhookModel: Model,\n    @Inject(webhookAddressModelString)\n    private webhookAddressModel: Model,\n    @Inject(webhookEventModelString)\n    private webhookEventModel: Model\n  ) { }\n\n  async create (createWebhookDto: CreateWebhookDto): Promise {\n    return this.webhookModel.create(createWebhookDto)\n  }\n\n  async update (updateWebhookDto: UpdateWebhookDto): Promise {\n    return this.webhookModel.findByIdAndUpdate(\n      updateWebhookDto.webhookId,\n      updateWebhookDto,\n      { new: true }\n    )\n  }\n\n  async delete (webhookId): Promise {\n    const result = await this.webhookModel.findByIdAndDelete(webhookId)\n\n    if (!isEmpty(result)) {\n      await this.webhookAddressModel.deleteMany({ webhookId })\n    }\n\n    return result\n  }\n\n  async get (webhookId): Promise {\n    return this.webhookModel.findById(webhookId)\n  }\n\n  async getAllByProjectId (projectId): Promise {\n    return this.webhookModel.find({ projectId })\n  }\n\n  async createAddresses (createWebhookAddressesDto: CreateWebhookAddressesDto): Promise {\n    const docs = this.buildDocs(createWebhookAddressesDto)\n\n    try {\n      const result = await this.webhookAddressModel.insertMany(docs, { ordered: false })\n      return result\n    } catch (err) {\n      if (err.code === 11000) {\n        // Handling duplicate key error\n        const duplicateKeys = err.writeErrors?.map(error => ({\n          index: error.index,\n          errmsg: error.errmsg,\n          op: error.op\n        })) || []\n\n        this.logger.warn(`Some entries were duplicates and not inserted for webhookId: ${createWebhookAddressesDto.webhookId}`)\n        // Return a response indicating which entries were duplicates\n        return {\n          message: 'Some entries were duplicates and not inserted.',\n          duplicateEntries: duplicateKeys\n        }\n      } else {\n        // If the error code is not 11000, rethrow the error\n        this.logger.error(err)\n        throw err\n      }\n    }\n  }\n\n  async getAddresses (webhookId: string) {\n    return this.webhookAddressModel.find({ webhookId })\n  }\n\n  async deleteAddresses (createWebhookAddressesDto: CreateWebhookAddressesDto): Promise {\n    const query = {\n      lowercaseAddress: {\n        $in: createWebhookAddressesDto.addresses.map(address => address.toLowerCase())\n      },\n      webhookId: {\n        $eq: createWebhookAddressesDto.webhookId\n      }\n    }\n\n    return this.webhookAddressModel.deleteMany(query)\n  }\n\n  async getAddressWatchers (address: string): Promise {\n    const addressWatchers = await this.webhookAddressModel\n      .find({ lowercaseAddress: address.toLowerCase() })\n      .populate('webhookId', 'webhookUrl eventType projectId')\n\n    return addressWatchers.map(watcher => {\n      const watcherJson = watcher.toJSON()\n\n      if (!isEmpty(watcherJson.webhookId)) {\n        const { _id, webhookUrl, eventType, projectId } = watcherJson.webhookId\n        return { ...watcherJson, webhookId: _id, webhookUrl, eventType, projectId }\n      }\n\n      return watcherJson\n    })\n  }\n\n  async processWebhookTokenEvents (eventData: TokenEventData) {\n    const toAddress = eventData?.to\n    const fromAddress = eventData?.from\n    const tokenAddress = eventData?.tokenAddress\n\n    const tokenAddressWatchers = await this.getAddressWatchers(tokenAddress)\n\n    await this.addRelevantWebhookTokensEventsToQueue(tokenAddressWatchers, eventData, null, addressTypes.TOKEN)\n\n    const toAddressWatchers = await this.getAddressWatchers(toAddress)\n\n    await this.addRelevantWebhookTokensEventsToQueue(toAddressWatchers, eventData, 'incoming', addressTypes.WALLET)\n\n    const fromAddressWatchers = await this.getAddressWatchers(fromAddress)\n\n    await this.addRelevantWebhookTokensEventsToQueue(fromAddressWatchers, eventData, 'outgoing', addressTypes.WALLET)\n  }\n\n  async addRelevantWebhookTokensEventsToQueue (addressWatchers: any, eventData: TokenEventData, direction: string | null, addressType) {\n    for (const addressWatcher of addressWatchers) {\n      const { webhookId, projectId, webhookUrl, eventType } = addressWatcher\n\n      if (!isEmpty(webhookUrl) &&\n        !isEmpty(eventType) &&\n        this.isRelevantEvent(eventData.tokenType, eventType)) {\n        try {\n          this.logger.log(\n            `Creating a new webhook event for the tx ${eventData.txHash}`\n          )\n\n          await this.webhookEventModel.create({\n            webhook: webhookId,\n            projectId,\n            webhookUrl,\n            eventData,\n            direction,\n            addressType\n          })\n\n          this.logger.log(\n            `Created a new webhook event for the tx ${eventData.txHash}`\n          )\n        } catch (err) {\n          this.logger.error(`Webhook event couldn't be added to the DB: ${err}`)\n        }\n      }\n    }\n  }\n\n  isRelevantEvent (tokenType: string, eventType: string): boolean {\n    // TODO: Choose better naming to make it clearer what each variable is\n    if (eventType === eventTypes.ALL || tokenType === eventType) {\n      return true\n    }\n\n    return false\n  }\n\n  private buildDocs (createWebhookAddressesDto: CreateWebhookAddressesDto) {\n    return createWebhookAddressesDto.addresses.map(\n      address => {\n        const webhookAddress = {\n          webhookId: createWebhookAddressesDto.webhookId,\n          address\n        } as WebhookAddress\n        return webhookAddress\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @amplitude/analytics-node : ^1.3.5\n        \n            @compodoc/compodoc : ^1.1.24\n        \n            @fuseio/fusebox-web-sdk : ^0.3.4\n        \n            @nestjs/axios : 3.0.2\n        \n            @nestjs/cache-manager : ^2.2.2\n        \n            @nestjs/common : ^10.3.8\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.3.8\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^10.3.8\n        \n            @nestjs/mongoose : ^10.0.6\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.8\n        \n            @nestjs/schedule : ^4.0.2\n        \n            abitype : ^1.0.2\n        \n            axios : ^1.6.8\n        \n            base64url : ^3.0.1\n        \n            bcryptjs : ^2.4.3\n        \n            cache-manager : ^5.5.2\n        \n            cent.js : ^5.0.0\n        \n            centrifuge : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            crypto-js : ^4.2.0\n        \n            date-fns : ^3.6.0\n        \n            dotenv : ^16.4.5\n        \n            ethereumjs-util : ^7.1.5\n        \n            ethereumjs-wallet : ^1.0.2\n        \n            ethers : ^5.7.2\n        \n            graphql : ^16.8.1\n        \n            graphql-request : ^6.1.0\n        \n            helmet : ^7.1.0\n        \n            json-rpc-2.0 : ^1.7.0\n        \n            jwks-rsa : ^3.1.0\n        \n            jwt-decode : ^4.0.0\n        \n            lodash : ^4.17.21\n        \n            mongoose : ^8.3.3\n        \n            mongoose-paginate-v2 : ^1.8.0\n        \n            nestjs-ethers : ^1.0.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            perf_hooks : ^0.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rimraf : ^5.0.5\n        \n            rxjs : ^7.8.1\n        \n            ws : ^8.17.0\n        \n            zod : ^3.23.5\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addressTypes   (apps/.../webhook-event.schema.ts)\n                        \n                        \n                            eventTypes   (apps/.../webhook.schema.ts)\n                        \n                        \n                            status   (apps/.../ethereum-payment-link.schema.ts)\n                        \n                        \n                            status   (apps/.../payment-link.schema.ts)\n                        \n                        \n                            TokenType   (apps/.../token-types.ts)\n                        \n                        \n                            versionType   (apps/.../smart-wallet.schema.ts)\n                        \n                        \n                            walletTypes   (apps/.../backend-wallet.schema.ts)\n                        \n                        \n                            walletTypes   (apps/.../ethereum-backend-wallet.schema.ts)\n                        \n                        \n                            websocketEvents   (apps/.../smart-wallets.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/charge-notifications-service/src/common/schemas/webhook-event.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        addressTypes\n                    \n                \n                        \n                            \n                                 TOKEN\n                            \n                        \n                        \n                            \n                                Value : Token-Address\n                            \n                        \n                        \n                            \n                                 WALLET\n                            \n                        \n                        \n                            \n                                Value : Wallet-Address\n                            \n                        \n            \n        \n\n    apps/charge-notifications-service/src/webhooks/schemas/webhook.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        eventTypes\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 FUSE\n                            \n                        \n                        \n                            \n                                Value : FUSE\n                            \n                        \n                        \n                            \n                                 ERC20\n                            \n                        \n                        \n                            \n                                Value : ERC-20\n                            \n                        \n                        \n                            \n                                 ERC721\n                            \n                        \n                        \n                            \n                                Value : ERC-721\n                            \n                        \n            \n        \n\n    apps/charge-apps-service/src/ethereum-payments/schemas/ethereum-payment-link.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                        \n                            \n                                 NOT_PAID\n                            \n                        \n                        \n                            \n                                Value : Not Paid\n                            \n                        \n                        \n                            \n                                 SUCCESSFUL\n                            \n                        \n                        \n                            \n                                Value : Successful\n                            \n                        \n                        \n                            \n                                 OVERPAID\n                            \n                        \n                        \n                            \n                                Value : Overpaid\n                            \n                        \n                        \n                            \n                                 UNDERPAID\n                            \n                        \n                        \n                            \n                                Value : Underpaid\n                            \n                        \n                        \n                            \n                                 WRONG_TOKEN\n                            \n                        \n                        \n                            \n                                Value : Wrong Token\n                            \n                        \n            \n        \n\n    apps/charge-apps-service/src/payments/schemas/payment-link.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        status\n                    \n                \n                        \n                            \n                                 NOT_PAID\n                            \n                        \n                        \n                            \n                                Value : Not Paid\n                            \n                        \n                        \n                            \n                                 SUCCESSFUL\n                            \n                        \n                        \n                            \n                                Value : Successful\n                            \n                        \n                        \n                            \n                                 OVERPAID\n                            \n                        \n                        \n                            \n                                Value : Overpaid\n                            \n                        \n                        \n                            \n                                 UNDERPAID\n                            \n                        \n                        \n                            \n                                Value : Underpaid\n                            \n                        \n                        \n                            \n                                 WRONG_TOKEN\n                            \n                        \n                        \n                            \n                                Value : Wrong Token\n                            \n                        \n            \n        \n\n    apps/charge-notifications-service/src/common/constants/token-types.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 ERC20\n                            \n                        \n                        \n                            \n                                Value : ERC-20\n                            \n                        \n                        \n                            \n                                 ERC721\n                            \n                        \n                        \n                            \n                                Value : ERC-721\n                            \n                        \n                        \n                            \n                                 FUSE\n                            \n                        \n                        \n                            \n                                Value : FUSE\n                            \n                        \n            \n        \n\n    apps/charge-smart-wallets-service/src/smart-wallets/schemas/smart-wallet.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        versionType\n                    \n                \n                        \n                            \n                                 V1\n                            \n                        \n                        \n                            \n                                Value : v1\n                            \n                        \n                        \n                            \n                                 V2\n                            \n                        \n                        \n                            \n                                Value : v2\n                            \n                        \n            \n        \n\n    apps/charge-apps-service/src/charge-api/schemas/backend-wallet.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        walletTypes\n                    \n                \n                        \n                            \n                                 PAYMENT_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_ACCOUNT\n                            \n                        \n                        \n                            \n                                 PAYMENT_LINK\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_LINK\n                            \n                        \n            \n        \n\n    apps/charge-apps-service/src/ethereum-payments/schemas/ethereum-backend-wallet.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        walletTypes\n                    \n                \n                        \n                            \n                                 PAYMENT_ACCOUNT\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_ACCOUNT\n                            \n                        \n                        \n                            \n                                 PAYMENT_LINK\n                            \n                        \n                        \n                            \n                                Value : PAYMENT_LINK\n                            \n                        \n            \n        \n\n    apps/charge-smart-wallets-service/src/smart-wallets/constants/smart-wallets.constants.ts\n    \n        \n            \n                \n                    \n                        \n                        websocketEvents\n                    \n                \n                        \n                            \n                                 WALLET_CREATION_STARTED\n                            \n                        \n                        \n                            \n                                Value : smartWalletCreationStarted\n                            \n                        \n                        \n                            \n                                 WALLET_CREATION_FAILED\n                            \n                        \n                        \n                            \n                                Value : smartWalletCreationFailed\n                            \n                        \n                        \n                            \n                                 WALLET_CREATION_SUCCEEDED\n                            \n                        \n                        \n                            \n                                Value : smartWalletCreationSucceeded\n                            \n                        \n                        \n                            \n                                 TRANSACTION_STARTED\n                            \n                        \n                        \n                            \n                                Value : transactionStarted\n                            \n                        \n                        \n                            \n                                 TRANSACTION_HASH\n                            \n                        \n                        \n                            \n                                Value : transactionHash\n                            \n                        \n                        \n                            \n                                 TRANSACTION_FAILED\n                            \n                        \n                        \n                            \n                                Value : transactionFailed\n                            \n                        \n                        \n                            \n                                 TRANSACTION_SUCCEEDED\n                            \n                        \n                        \n                            \n                                Value : transactionSucceeded\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nFusebox is a comprehensive development framework designed for constructing applications on the Fuse Network. It provides a set of APIs that cater to various functionalities:\n\nAccount Abstraction API: This API enables the creation and administration of smart wallet accounts built on the ERC4337 standard.\nData API: Utilize this API to retrieve on-chain data related to your users, including information such as balances, token specifics, and transaction history.\nFeed API: The Feed API offers a user-friendly stream of wallet actions, making it easy to display wallets activity.\nNotification API: Subscribing to the Notification API allows you to receive updates on wallet events and activities pertaining to your customers.\nTrading API: This API facilitates trading activities and provides access to trading-related data.\n\nTech Stack\nFusebox Backend API developed with Nest framework TypeScript starter repository.\nInstallation\nExample :$ npm installEnvironment\nSet the environment variables by running\nExample :cp .env.example .env\ncp apps/charge-api-service/.env.example apps/charge-api-service/.env\ncp apps/charge-network-service/.env.example apps/charge-network-service/.env\ncp apps/charge-relay-service/.env.example apps/charge-relay-service/.env\nMake sure you update the .env files with necessary variable values before proceeding to the next step.\nRunning the app\nExample :#docker dev\n$ npm run docker:dev\n\n#docker debug\n$ npm run docker:debug\n\n\"Then run the 'Debug: Charge' configuration in launch.json through the debugger in VS Code\"\n\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiKeyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ApiKeysModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppStoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BroadcasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BundlerApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeApiServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeAppsServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeNetworkServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeNotificationsServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeRelayServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChargeSmartWalletsServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsensusApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsensusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataLayerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EthereumPaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsScannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExplorerApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlAPIModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphqlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LegacyApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OperatorsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymasterApiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RelayAccountsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SmartWalletsAPIModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SmartWalletsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StakingAPIModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StakingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StudioLegacyJwtModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsScannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebhooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountsModule\n\n\n\ncluster_AccountsModule_imports\n\n\n\ncluster_ApiKeyModule\n\n\n\ncluster_ApiKeyModule_imports\n\n\n\ncluster_ApiKeyModule_exports\n\n\n\ncluster_ApiKeyModule_providers\n\n\n\ncluster_ApiKeysModule\n\n\n\ncluster_AppStoreModule\n\n\n\ncluster_AppStoreModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BroadcasterModule\n\n\n\ncluster_BroadcasterModule_imports\n\n\n\ncluster_BroadcasterModule_exports\n\n\n\ncluster_BroadcasterModule_providers\n\n\n\ncluster_BundlerApiModule\n\n\n\ncluster_ChargeApiModule\n\n\n\ncluster_ChargeApiModule_exports\n\n\n\ncluster_ChargeApiModule_providers\n\n\n\ncluster_ChargeApiServiceModule\n\n\n\ncluster_ChargeApiServiceModule_imports\n\n\n\ncluster_ChargeApiServiceModule_providers\n\n\n\ncluster_ChargeAppsServiceModule\n\n\n\ncluster_ChargeAppsServiceModule_imports\n\n\n\ncluster_ChargeAppsServiceModule_providers\n\n\n\ncluster_ChargeNetworkServiceModule\n\n\n\ncluster_ChargeNetworkServiceModule_imports\n\n\n\ncluster_ChargeNotificationsServiceModule\n\n\n\ncluster_ChargeNotificationsServiceModule_imports\n\n\n\ncluster_ChargeRelayServiceModule\n\n\n\ncluster_ChargeRelayServiceModule_imports\n\n\n\ncluster_ChargeSmartWalletsServiceModule\n\n\n\ncluster_ChargeSmartWalletsServiceModule_imports\n\n\n\ncluster_ConsensusApiModule\n\n\n\ncluster_ConsensusApiModule_providers\n\n\n\ncluster_ConsensusModule\n\n\n\ncluster_ConsensusModule_exports\n\n\n\ncluster_ConsensusModule_providers\n\n\n\ncluster_DataLayerModule\n\n\n\ncluster_DataLayerModule_providers\n\n\n\ncluster_EthereumPaymentsModule\n\n\n\ncluster_EthereumPaymentsModule_providers\n\n\n\ncluster_EventsScannerModule\n\n\n\ncluster_EventsScannerModule_providers\n\n\n\ncluster_GraphqlAPIModule\n\n\n\ncluster_GraphqlAPIModule_providers\n\n\n\ncluster_GraphqlModule\n\n\n\ncluster_GraphqlModule_providers\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_OperatorsModule\n\n\n\ncluster_OperatorsModule_exports\n\n\n\ncluster_OperatorsModule_providers\n\n\n\ncluster_PaymasterApiModule\n\n\n\ncluster_PaymasterApiModule_providers\n\n\n\ncluster_PaymasterModule\n\n\n\ncluster_PaymasterModule_exports\n\n\n\ncluster_PaymasterModule_providers\n\n\n\ncluster_PaymentsModule\n\n\n\ncluster_PaymentsModule_providers\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_exports\n\n\n\ncluster_ProjectsModule_providers\n\n\n\ncluster_RelayAccountsModule\n\n\n\ncluster_RelayAccountsModule_exports\n\n\n\ncluster_RelayAccountsModule_providers\n\n\n\ncluster_SmartWalletsAPIModule\n\n\n\ncluster_SmartWalletsAPIModule_providers\n\n\n\ncluster_SmartWalletsModule\n\n\n\ncluster_SmartWalletsModule_providers\n\n\n\ncluster_StakingAPIModule\n\n\n\ncluster_StakingAPIModule_providers\n\n\n\ncluster_StakingModule\n\n\n\ncluster_StakingModule_exports\n\n\n\ncluster_StakingModule_providers\n\n\n\ncluster_StudioLegacyJwtModule\n\n\n\ncluster_StudioLegacyJwtModule_exports\n\n\n\ncluster_StudioLegacyJwtModule_providers\n\n\n\ncluster_TransactionsScannerModule\n\n\n\ncluster_TransactionsScannerModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WebhooksModule\n\n\n\ncluster_WebhooksModule_exports\n\n\n\ncluster_WebhooksModule_providers\n\n\n\n\nAppStoreModule\n\nAppStoreModule\n\n\n\nAccountsModule\n\nAccountsModule\n\nAccountsModule -->\n\nAppStoreModule->AccountsModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nOperatorsModule\n\nOperatorsModule\n\nOperatorsModule -->\n\nAuthModule->OperatorsModule\n\n\n\nAccountsModule -->\n\nAuthModule->AccountsModule\n\n\n\nAccountsModule -->\n\nOperatorsModule->AccountsModule\n\n\n\n\n\nSmartWalletsModule\n\nSmartWalletsModule\n\nSmartWalletsModule -->\n\nOperatorsModule->SmartWalletsModule\n\n\n\n\n\nOperatorsService \n\nOperatorsService \n\nOperatorsService  -->\n\nOperatorsModule->OperatorsService \n\n\n\n\n\nPaymasterModule\n\nPaymasterModule\n\nOperatorsModule -->\n\nPaymasterModule->OperatorsModule\n\n\n\nAccountsModule -->\n\nPaymasterModule->AccountsModule\n\n\n\n\n\nApiKeyModule\n\nApiKeyModule\n\nApiKeyModule -->\n\nPaymasterModule->ApiKeyModule\n\n\n\n\n\nPaymasterService \n\nPaymasterService \n\nPaymasterService  -->\n\nPaymasterModule->PaymasterService \n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nOperatorsModule -->\n\nProjectsModule->OperatorsModule\n\n\n\nPaymasterModule -->\n\nProjectsModule->PaymasterModule\n\n\n\nAccountsModule -->\n\nProjectsModule->AccountsModule\n\n\n\nApiKeyModule -->\n\nProjectsModule->ApiKeyModule\n\n\n\nSmartWalletsModule -->\n\nProjectsModule->SmartWalletsModule\n\n\n\n\n\nProjectsService \n\nProjectsService \n\nProjectsService  -->\n\nProjectsModule->ProjectsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppStoreModule -->\n\nUsersModule->AppStoreModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nOperatorsModule -->\n\nUsersModule->OperatorsModule\n\n\n\nPaymasterModule -->\n\nUsersModule->PaymasterModule\n\n\n\nProjectsModule -->\n\nUsersModule->ProjectsModule\n\n\n\nAccountsModule -->\n\nUsersModule->AccountsModule\n\n\n\nSmartWalletsModule -->\n\nUsersModule->SmartWalletsModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppStoreModule -->\n\nDatabaseModule->AppStoreModule\n\n\n\nOperatorsModule -->\n\nDatabaseModule->OperatorsModule\n\n\n\nPaymasterModule -->\n\nDatabaseModule->PaymasterModule\n\n\n\nProjectsModule -->\n\nDatabaseModule->ProjectsModule\n\n\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\nApiKeyModule -->\n\nDatabaseModule->ApiKeyModule\n\n\n\n\n\nApiKeysModule\n\nApiKeysModule\n\nApiKeysModule -->\n\nDatabaseModule->ApiKeysModule\n\n\n\n\n\nWebhooksModule\n\nWebhooksModule\n\nWebhooksModule -->\n\nDatabaseModule->WebhooksModule\n\n\n\n\n\nBroadcasterModule\n\nBroadcasterModule\n\nBroadcasterModule -->\n\nDatabaseModule->BroadcasterModule\n\n\n\n\n\nChargeApiModule\n\nChargeApiModule\n\nChargeApiModule -->\n\nDatabaseModule->ChargeApiModule\n\n\n\n\n\nEthereumPaymentsModule\n\nEthereumPaymentsModule\n\nEthereumPaymentsModule -->\n\nDatabaseModule->EthereumPaymentsModule\n\n\n\n\n\nPaymentsModule\n\nPaymentsModule\n\nPaymentsModule -->\n\nDatabaseModule->PaymentsModule\n\n\n\n\n\nEventsScannerModule\n\nEventsScannerModule\n\nEventsScannerModule -->\n\nDatabaseModule->EventsScannerModule\n\n\n\n\n\nTransactionsScannerModule\n\nTransactionsScannerModule\n\nTransactionsScannerModule -->\n\nDatabaseModule->TransactionsScannerModule\n\n\n\n\n\nRelayAccountsModule\n\nRelayAccountsModule\n\nRelayAccountsModule -->\n\nDatabaseModule->RelayAccountsModule\n\n\n\n\n\nDataLayerModule\n\nDataLayerModule\n\nDataLayerModule -->\n\nDatabaseModule->DataLayerModule\n\n\n\nSmartWalletsModule -->\n\nDatabaseModule->SmartWalletsModule\n\n\n\n\n\nStudioLegacyJwtModule\n\nStudioLegacyJwtModule\n\nApiKeyModule -->\n\nStudioLegacyJwtModule->ApiKeyModule\n\n\n\n\n\nStudioLegacyJwtService \n\nStudioLegacyJwtService \n\nStudioLegacyJwtService  -->\n\nStudioLegacyJwtModule->StudioLegacyJwtService \n\n\n\nOperatorsModule -->\n\nApiKeyModule->OperatorsModule\n\n\n\n\n\nApiKeysService \n\nApiKeysService \n\nApiKeysService  -->\n\nApiKeyModule->ApiKeysService \n\n\n\n\n\nBundlerApiModule\n\nBundlerApiModule\n\nBundlerApiModule -->\n\nApiKeyModule->BundlerApiModule\n\n\n\n\n\nExplorerApiModule\n\nExplorerApiModule\n\nExplorerApiModule -->\n\nApiKeyModule->ExplorerApiModule\n\n\n\n\n\nGraphqlAPIModule\n\nGraphqlAPIModule\n\nGraphqlAPIModule -->\n\nApiKeyModule->GraphqlAPIModule\n\n\n\n\n\nLegacyApiModule\n\nLegacyApiModule\n\nLegacyApiModule -->\n\nApiKeyModule->LegacyApiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nApiKeyModule->NotificationsModule\n\n\n\n\n\nPaymasterApiModule\n\nPaymasterApiModule\n\nPaymasterApiModule -->\n\nApiKeyModule->PaymasterApiModule\n\n\n\n\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule\n\nSmartWalletsAPIModule -->\n\nApiKeyModule->SmartWalletsAPIModule\n\n\n\n\n\nStakingAPIModule\n\nStakingAPIModule\n\nStakingAPIModule -->\n\nApiKeyModule->StakingAPIModule\n\n\n\n\n\nChargeApiServiceModule\n\nChargeApiServiceModule\n\nChargeApiServiceModule -->\n\nApiKeyModule->ChargeApiServiceModule\n\n\n\n\n\nApiKeysService\n\nApiKeysService\n\nApiKeyModule -->\n\nApiKeysService->ApiKeyModule\n\n\n\nApiKeysModule -->\n\nApiKeysService->ApiKeysModule\n\n\n\nApiKeysService  -->\n\nApiKeysModule->ApiKeysService \n\n\n\nEthereumPaymentsModule -->\n\nApiKeysModule->EthereumPaymentsModule\n\n\n\nPaymentsModule -->\n\nApiKeysModule->PaymentsModule\n\n\n\n\n\nChargeAppsServiceModule\n\nChargeAppsServiceModule\n\nChargeAppsServiceModule -->\n\nApiKeysModule->ChargeAppsServiceModule\n\n\n\n\n\nAppStoreService\n\nAppStoreService\n\nAppStoreModule -->\n\nAppStoreService->AppStoreModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nSmartWalletsAPIModule -->\n\nJwtStrategy->SmartWalletsAPIModule\n\n\n\nBroadcasterModule -->\n\nWebhooksModule->BroadcasterModule\n\n\n\nEventsScannerModule -->\n\nWebhooksModule->EventsScannerModule\n\n\n\nTransactionsScannerModule -->\n\nWebhooksModule->TransactionsScannerModule\n\n\n\n\n\nChargeNotificationsServiceModule\n\nChargeNotificationsServiceModule\n\nChargeNotificationsServiceModule -->\n\nWebhooksModule->ChargeNotificationsServiceModule\n\n\n\n\n\nWebhooksService \n\nWebhooksService \n\nWebhooksService  -->\n\nWebhooksModule->WebhooksService \n\n\n\n\n\nBroadcasterService \n\nBroadcasterService \n\nBroadcasterService  -->\n\nBroadcasterModule->BroadcasterService \n\n\n\nEventsScannerModule -->\n\nBroadcasterModule->EventsScannerModule\n\n\n\nTransactionsScannerModule -->\n\nBroadcasterModule->TransactionsScannerModule\n\n\n\nChargeNotificationsServiceModule -->\n\nBroadcasterModule->ChargeNotificationsServiceModule\n\n\n\n\n\nBroadcasterService\n\nBroadcasterService\n\nBroadcasterModule -->\n\nBroadcasterService->BroadcasterModule\n\n\n\n\n\nWebhookSendService\n\nWebhookSendService\n\nBroadcasterModule -->\n\nWebhookSendService->BroadcasterModule\n\n\n\nEthereumPaymentsModule -->\n\nWebhookSendService->EthereumPaymentsModule\n\n\n\nPaymentsModule -->\n\nWebhookSendService->PaymentsModule\n\n\n\nChargeApiServiceModule -->\n\nBundlerApiModule->ChargeApiServiceModule\n\n\n\n\n\nChargeApiService \n\nChargeApiService \n\nChargeApiService  -->\n\nChargeApiModule->ChargeApiService \n\n\n\nPaymentsModule -->\n\nChargeApiModule->PaymentsModule\n\n\n\nSmartWalletsModule -->\n\nChargeApiModule->SmartWalletsModule\n\n\n\n\n\nChargeApiService\n\nChargeApiService\n\nChargeApiModule -->\n\nChargeApiService->ChargeApiModule\n\n\n\n\n\nConsensusApiModule\n\nConsensusApiModule\n\nChargeApiServiceModule -->\n\nConsensusApiModule->ChargeApiServiceModule\n\n\n\nChargeApiServiceModule -->\n\nExplorerApiModule->ChargeApiServiceModule\n\n\n\nChargeApiServiceModule -->\n\nGraphqlAPIModule->ChargeApiServiceModule\n\n\n\nChargeApiServiceModule -->\n\nLegacyApiModule->ChargeApiServiceModule\n\n\n\nChargeApiServiceModule -->\n\nNotificationsModule->ChargeApiServiceModule\n\n\n\nSmartWalletsModule -->\n\nNotificationsModule->SmartWalletsModule\n\n\n\n\n\nNotificationsService \n\nNotificationsService \n\nNotificationsService  -->\n\nNotificationsModule->NotificationsService \n\n\n\nChargeApiServiceModule -->\n\nPaymasterApiModule->ChargeApiServiceModule\n\n\n\nChargeApiServiceModule -->\n\nSmartWalletsAPIModule->ChargeApiServiceModule\n\n\n\nChargeNotificationsServiceModule -->\n\nSmartWalletsAPIModule->ChargeNotificationsServiceModule\n\n\n\nChargeApiServiceModule -->\n\nStakingAPIModule->ChargeApiServiceModule\n\n\n\n\n\nChargeApiServiceService\n\nChargeApiServiceService\n\nChargeApiServiceModule -->\n\nChargeApiServiceService->ChargeApiServiceModule\n\n\n\nChargeAppsServiceModule -->\n\nEthereumPaymentsModule->ChargeAppsServiceModule\n\n\n\nChargeAppsServiceModule -->\n\nPaymentsModule->ChargeAppsServiceModule\n\n\n\n\n\nChargeAppsServiceService\n\nChargeAppsServiceService\n\nChargeAppsServiceModule -->\n\nChargeAppsServiceService->ChargeAppsServiceModule\n\n\n\n\n\nConsensusModule\n\nConsensusModule\n\n\n\nChargeNetworkServiceModule\n\nChargeNetworkServiceModule\n\nChargeNetworkServiceModule -->\n\nConsensusModule->ChargeNetworkServiceModule\n\n\n\n\n\nConsensusService \n\nConsensusService \n\nConsensusService  -->\n\nConsensusModule->ConsensusService \n\n\n\n\n\nGraphqlModule\n\nGraphqlModule\n\nChargeNetworkServiceModule -->\n\nGraphqlModule->ChargeNetworkServiceModule\n\n\n\n\n\nStakingModule\n\nStakingModule\n\nChargeNetworkServiceModule -->\n\nStakingModule->ChargeNetworkServiceModule\n\n\n\n\n\nStakingService \n\nStakingService \n\nStakingService  -->\n\nStakingModule->StakingService \n\n\n\nChargeNotificationsServiceModule -->\n\nEventsScannerModule->ChargeNotificationsServiceModule\n\n\n\nChargeNotificationsServiceModule -->\n\nTransactionsScannerModule->ChargeNotificationsServiceModule\n\n\n\n\n\nChargeRelayServiceModule\n\nChargeRelayServiceModule\n\nChargeRelayServiceModule -->\n\nRelayAccountsModule->ChargeRelayServiceModule\n\n\n\n\n\nRelayAccountsService \n\nRelayAccountsService \n\nRelayAccountsService  -->\n\nRelayAccountsModule->RelayAccountsService \n\n\n\n\n\nChargeSmartWalletsServiceModule\n\nChargeSmartWalletsServiceModule\n\nChargeSmartWalletsServiceModule -->\n\nDataLayerModule->ChargeSmartWalletsServiceModule\n\n\n\nChargeSmartWalletsServiceModule -->\n\nSmartWalletsModule->ChargeSmartWalletsServiceModule\n\n\n\n\n\nConsensusApiService\n\nConsensusApiService\n\nConsensusApiModule -->\n\nConsensusApiService->ConsensusApiModule\n\n\n\n\n\nConsensusService\n\nConsensusService\n\nConsensusModule -->\n\nConsensusService->ConsensusModule\n\n\n\n\n\nAnalyticsService\n\nAnalyticsService\n\nOperatorsModule -->\n\nAnalyticsService->OperatorsModule\n\n\n\nDataLayerModule -->\n\nAnalyticsService->DataLayerModule\n\n\n\nSmartWalletsModule -->\n\nAnalyticsService->SmartWalletsModule\n\n\n\n\n\nDataLayerService\n\nDataLayerService\n\nDataLayerModule -->\n\nDataLayerService->DataLayerModule\n\n\n\n\n\nSmartWalletsAAEventsService\n\nSmartWalletsAAEventsService\n\nDataLayerModule -->\n\nSmartWalletsAAEventsService->DataLayerModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nDataLayerModule -->\n\nTokenService->DataLayerModule\n\n\n\n\n\nTradeService\n\nTradeService\n\nStakingModule -->\n\nTradeService->StakingModule\n\n\n\nDataLayerModule -->\n\nTradeService->DataLayerModule\n\n\n\nSmartWalletsModule -->\n\nTradeService->SmartWalletsModule\n\n\n\n\n\nUserOpFactory\n\nUserOpFactory\n\nDataLayerModule -->\n\nUserOpFactory->DataLayerModule\n\n\n\n\n\nUserOpParser\n\nUserOpParser\n\nPaymasterApiModule -->\n\nUserOpParser->PaymasterApiModule\n\n\n\nDataLayerModule -->\n\nUserOpParser->DataLayerModule\n\n\n\n\n\nBackendWalletsEthereumService\n\nBackendWalletsEthereumService\n\nEthereumPaymentsModule -->\n\nBackendWalletsEthereumService->EthereumPaymentsModule\n\n\n\n\n\nEthereumPaymentsService\n\nEthereumPaymentsService\n\nEthereumPaymentsModule -->\n\nEthereumPaymentsService->EthereumPaymentsModule\n\n\n\n\n\nERC20EventsScannerService\n\nERC20EventsScannerService\n\nEventsScannerModule -->\n\nERC20EventsScannerService->EventsScannerModule\n\n\n\n\n\nGasService\n\nGasService\n\nEventsScannerModule -->\n\nGasService->EventsScannerModule\n\n\n\nTransactionsScannerModule -->\n\nGasService->TransactionsScannerModule\n\n\n\n\n\nUserOpEventsScannerService\n\nUserOpEventsScannerService\n\nEventsScannerModule -->\n\nUserOpEventsScannerService->EventsScannerModule\n\n\n\n\n\nGraphqlAPIService\n\nGraphqlAPIService\n\nGraphqlAPIModule -->\n\nGraphqlAPIService->GraphqlAPIModule\n\n\n\n\n\nGraphQLService\n\nGraphQLService\n\nGraphqlModule -->\n\nGraphQLService->GraphqlModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nOperatorJwtStrategy\n\nOperatorJwtStrategy\n\nOperatorsModule -->\n\nOperatorJwtStrategy->OperatorsModule\n\n\n\n\n\nOperatorsService\n\nOperatorsService\n\nOperatorsModule -->\n\nOperatorsService->OperatorsModule\n\n\n\n\n\nPaymasterApiService\n\nPaymasterApiService\n\nPaymasterApiModule -->\n\nPaymasterApiService->PaymasterApiModule\n\n\n\n\n\nPaymasterService\n\nPaymasterService\n\nPaymasterModule -->\n\nPaymasterService->PaymasterModule\n\n\n\n\n\nPaymentsService\n\nPaymentsService\n\nPaymentsModule -->\n\nPaymentsService->PaymentsModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\nRelayAccountsService\n\nRelayAccountsService\n\nRelayAccountsModule -->\n\nRelayAccountsService->RelayAccountsModule\n\n\n\n\n\nSmartWalletsAPIService\n\nSmartWalletsAPIService\n\nSmartWalletsAPIModule -->\n\nSmartWalletsAPIService->SmartWalletsAPIModule\n\n\n\n\n\nRelayAPIService\n\nRelayAPIService\n\nSmartWalletsModule -->\n\nRelayAPIService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsAAService\n\nSmartWalletsAAService\n\nSmartWalletsModule -->\n\nSmartWalletsAAService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsEventsService\n\nSmartWalletsEventsService\n\nSmartWalletsModule -->\n\nSmartWalletsEventsService->SmartWalletsModule\n\n\n\n\n\nSmartWalletsLegacyService\n\nSmartWalletsLegacyService\n\nSmartWalletsModule -->\n\nSmartWalletsLegacyService->SmartWalletsModule\n\n\n\n\n\nStakingAPIService\n\nStakingAPIService\n\nStakingAPIModule -->\n\nStakingAPIService->StakingAPIModule\n\n\n\n\n\nFuseLiquidStakingService\n\nFuseLiquidStakingService\n\nStakingModule -->\n\nFuseLiquidStakingService->StakingModule\n\n\n\n\n\nGraphService\n\nGraphService\n\nStakingModule -->\n\nGraphService->StakingModule\n\n\n\n\n\nStakingService\n\nStakingService\n\nStakingModule -->\n\nStakingService->StakingModule\n\n\n\n\n\nVoltBarService\n\nVoltBarService\n\nStakingModule -->\n\nVoltBarService->StakingModule\n\n\n\n\n\nStudioLegacyJwtService\n\nStudioLegacyJwtService\n\nStudioLegacyJwtModule -->\n\nStudioLegacyJwtService->StudioLegacyJwtModule\n\n\n\n\n\nTransactionsScannerService\n\nTransactionsScannerService\n\nTransactionsScannerModule -->\n\nTransactionsScannerService->TransactionsScannerModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nWebhooksService\n\nWebhooksService\n\nWebhooksModule -->\n\nWebhooksService->WebhooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        39 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    55 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    54 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : FuseBox Backend\n        \n            License : MIT\n        \n            Author : Maor Stamati \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Bytes4Cache   (libs/.../decodeBySigHash.ts)\n                        \n                        \n                            ChangedParamType   (libs/.../decodeEvent.ts)\n                        \n                        \n                            DecodedEventResult   (libs/.../decodeEvent.ts)\n                        \n                        \n                            HexSigType   (libs/.../decodeBySigHash.ts)\n                        \n                        \n                            SmartWallet   (scripts/.../fuseLegacySDK.ts)\n                        \n                        \n                            WalletModuleAddresses   (scripts/.../fuseLegacySDK.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/common/src/utils/dtools/decodeBySigHash.ts\n    \n    \n        \n            \n                \n                    \n                    Bytes4Cache\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HexSigType\n                \n            \n            \n                \n                        \"signatures\" | \"event-signatures\"\n\n                \n            \n        \n    \n    libs/common/src/utils/dtools/decodeEvent.ts\n    \n    \n        \n            \n                \n                    \n                    ChangedParamType\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DecodedEventResult\n                \n            \n            \n                \n                            DecodedEventResultWithArgNames | DecodedEventResultWithoutArgNames\n\n                \n            \n        \n    \n    scripts/fuseLegacySDK.ts\n    \n    \n        \n            \n                \n                    \n                    SmartWallet\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WalletModuleAddresses\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
