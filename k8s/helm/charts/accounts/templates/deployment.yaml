apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounts
  namespace: {{ .Release.Namespace }}
  labels:
    app: accounts
    environment: {{ .Values.global.environment }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: accounts
      environment: {{ .Values.global.environment }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        app: accounts
        environment: {{ .Values.global.environment }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                {{- range $zone := .Values.affinity.zones }}
                  - {{ $.Values.global.region }}-{{ $zone }}
                {{- end }}
      containers:
        - name: accounts
          image: "{{ .Values.global.region }}-docker.pkg.dev/{{ .Values.global.project_id }}/{{ .Values.global.image.repository }}/accounts:{{ .Values.global.image.tag }}"
          env:

            # ConfigMap
            - name: ACCOUNTS_HOST
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: accounts_host
            - name: ACCOUNTS_PORT
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: accounts_port
            - name: ACCOUNTS_TCP_PORT
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: accounts_tcp_port
            - name: API_HOST
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: api_host
            - name: API_TCP_PORT
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: api_tcp_port
            - name: RELAY_HOST
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: relay_host
            - name: RELAY_TCP_PORT
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: relay_tcp_port
            - name: APPS_HOST
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: apps_host
            - name: APPS_TCP_PORT
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: apps_tcp_port
            {{- range $key, $value := .Values.configMap }}
            - name: {{ $key | upper }}
              valueFrom:
                configMapKeyRef:
                  name: accounts
                  key: {{ $key }}
            {{- end }}

            # Secret
            {{- range $key, $val := .Values.secret }}
            - name: {{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: accounts
                  key: {{ $key }}
            {{- end }}

          # Ports
          ports:
            - containerPort: 5001
              name: http
            - containerPort: 8875
              name: tcp

          # Probes
          livenessProbe:
            httpGet:
              path: /accounts/v1/health
              port: 5001
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /accounts/v1/health
              port: 5001
            initialDelaySeconds: 5
            periodSeconds: 5

          # Resources
          resources:
            requests:
            {{- range $key, $val := .Values.resources.requests }}
              {{ $key }}: {{ $val | quote }}
            {{- end }}
            limits:
            {{- range $key, $val := .Values.resources.limits }}
              {{ $key }}: {{ $val | quote }}
            {{- end }}
