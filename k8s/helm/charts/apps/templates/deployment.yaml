apiVersion: apps/v1
kind: Deployment
metadata:
  name: apps
  namespace: {{ .Release.Namespace }}
  labels:
    app: apps
    environment: {{ .Values.global.environment }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: apps
      environment: {{ .Values.global.environment }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      labels:
        app: apps
        environment: {{ .Values.global.environment }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - apps
              topologyKey: kubernetes.io/hostname
      containers:
        - name: apps
          image: "{{ .Values.global.region }}-docker.pkg.dev/{{ .Values.global.project_id }}/{{ .Values.global.image.repository }}/apps:{{ .Values.global.image.tag }}"
          imagePullPolicy: Always
          env:
            # ConfigMap
            - name: APPS_HOST
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: apps_host
            - name: APPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: apps_port
            - name: APPS_TCP_PORT
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: apps_tcp_port
            - name: CHARGE_WALLET_PHONE_NUMBER
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: charge_wallet_phone_number
            - name: CHARGE_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: charge_base_url
            - name: JOB_SLEEP_MS
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: job_sleep_ms
            - name: UNMARSHAL_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: unmarshal_base_url
            - name: ALCHEMY_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: alchemy_base_url
            - name: ETHEREUM_PAYMENTS_NETWORK_NAME
              valueFrom:
                configMapKeyRef:
                  name: apps
                  key: ethereum_payments_network_name

            # Secrets
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: mongo_uri
            - name: CHARGE_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: charge_public_key
            - name: CHARGE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: charge_secret_key
            - name: CHARGE_WEBHOOK_ID
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: charge_webhook_id
            - name: UNMARSHAL_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: unmarshal_auth_key
            - name: CHARGE_PAYMENTS_ETHEREUM_MNEMONIC
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: charge_payments_ethereum_mnemonic
            - name: ALCHEMY_WEBHOOK_ID
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: alchemy_webhook_id
            - name: ALCHEMY_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: apps
                  key: alchemy_auth_key

          # Ports
          ports:
            - containerPort: 5006
              name: http
            - containerPort: 8880
              name: tcp
          
          # Probes
          livenessProbe:
            httpGet:
              path: /app-store/v1/health
              port: 5006
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /app-store/v1/health
              port: 5006
            initialDelaySeconds: 5
            periodSeconds: 5
          
          # Resources
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
