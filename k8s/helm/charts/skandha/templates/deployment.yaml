apiVersion: apps/v1
kind: Deployment
metadata:
  name: skandha
  namespace: {{ .Release.Namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    app: skandha
    environment: {{ .Values.global.environment }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: skandha
      environment: {{ .Values.global.environment }}
  template:
    metadata:
      labels:
        app: skandha
        environment: {{ .Values.global.environment }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                {{- range $zone := .Values.affinity.zones }}
                  - {{ $.Values.global.region }}-{{ $zone }}
                {{- end }}
      containers:
        - name: skandha
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command: ["node", "./packages/cli/bin/skandha", "standalone", "--dataDir", "/opt/skandha/app", "--redirectRpc", "--unsafeMode"]

          # Ports
          ports:
            - containerPort: 14337
              name: http
          
          # Probes
          livenessProbe:
            httpGet:
              path: /version
              port: 14337
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /version
              port: 14337
            initialDelaySeconds: 5
            periodSeconds: 5

          # Resources
          resources:
            requests:
            {{- range $key, $val := .Values.resources.requests }}
              {{ $key }}: {{ $val | quote }}
            {{- end }}
            limits:
            {{- range $key, $val := .Values.resources.limits }}
              {{ $key }}: {{ $val | quote }}
            {{- end }}

          # Volume mounts (config.json)
          volumeMounts:
            - name: skandha
              mountPath: /usr/app/config.json
              subPath: config.json
              readOnly: true
      
      # Volume (config.json)
      volumes:
        - name: skandha
          secret:
            secretName: skandha
