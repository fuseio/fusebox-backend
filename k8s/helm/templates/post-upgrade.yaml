apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-post-upgrade"
  namespace: {{ .Release.Namespace }}
  labels:
    app: "{{ .Release.Name }}-post-upgrade"
    environment: {{ .Values.global.environment }}
data:
  requirements.txt: |
    requests==2.31.0
  post-upgrade.py: |
    import requests
    import time

    endpoints = {
        "accounts": "http://accounts:5001/accounts/v1/health",
        "api": "http://api:5002/api/health",
        "network": "http://network:5005/network/health",
        "notifications": "http://notifications:5004/notifications/health",
        "smart-wallets": "http://smart-wallets:5007/smart-wallets/v1/health"
    }

    time_range = 30

    print("Post - upgrade job started...")

    for x in range(time_range):

        for component in endpoints:

            r = requests.get(url=endpoints[component], timeout=5)

            if r.status_code != 200 and r.text != "ok":
                print(f"'Component': '{component}', 'status': 'Unhealthy'")
            else:
                print(f"'Component': '{component}', 'status': 'Healthy'")

        time.sleep(1)

    print("Post - upgrade job finished.")
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-upgrade"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}-post-upgrade"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
        - name: post-upgrade
          image: python:3.9.18-alpine3.19
          command: ["/bin/sh", "-c", "pip3 install -r /opt/requirements.txt && python3 /opt/post-upgrade.py"]
          volumeMounts:
            - name: post-upgrade
              mountPath: /opt
      volumes:
        - name: post-upgrade
          configMap:
            name: "{{ .Release.Name }}-post-upgrade"
            items:
              - key: post-upgrade.py
                path: post-upgrade.py
              - key: requirements.txt
                path: requirements.txt
